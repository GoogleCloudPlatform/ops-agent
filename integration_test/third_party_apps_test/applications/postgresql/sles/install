set -e

source /etc/os-release
SUSE_VERSION="${VERSION_ID%%.*}"

SERVICE_NAME="postgresql"
DATA_ROOT=/var/lib/pgsql
CFG_ROOT=/var/lib/pgsql
BIN_DIR=/usr/lib/postgresql14/bin

if [[ "${SUSE_VERSION}" == 12 ]]; then
  sudo zypper addrepo https://download.postgresql.org/pub/repos/zypp/repo/pgdg-sles-12-pg14.repo
  sudo zypper --non-interactive --no-gpg-checks ref
  sudo zypper --no-gpg-checks in -y postgresql14-server=14.1-3.3.1 postgresql14-contrib=14.1-3.3.1 postgresql14-libs=14.1-1PGDG.sles12 postgresql14=14.1-3.3.1
elif [[ "${SUSE_VERSION}" == 15 ]]; then
  sudo zypper addrepo https://download.postgresql.org/pub/repos/zypp/repo/pgdg-sles-15-pg14.repo

  # VERSION_ID is taken from /etc/os-release, and is of the form <SLES version number>.<Service Pack number>.
  if [[ "$VERSION_ID" == "15.6" ]]; then
    # TODO(b/350987619): There is currently no "15.6" repo for PostgreSQL 14. Since the automatic
    # $releasever variable will sub in "15.6" on SP6 distros, this sed is necessary to force it
    # back to the root 15 (not service pack specific) repo.
    sudo sed -i "s/\$releasever/15/g" /etc/zypp/repos.d/pgdg-14.repo
  fi

  sudo zypper --non-interactive --no-gpg-checks ref
  sudo zypper --no-gpg-checks in -y postgresql14-server postgresql14-contrib postgresql14

  SERVICE_NAME="postgresql-14"
  DATA_ROOT=/var/lib/pgsql/14
  CFG_ROOT=/var/lib/pgsql/14
  BIN_DIR=/usr/pgsql-14/bin

  sudo /usr/pgsql-14/bin/postgresql-14-setup initdb
fi

sudo systemctl enable $SERVICE_NAME
sudo service $SERVICE_NAME restart

sudo su postgres -c "psql postgres -c \"ALTER ROLE postgres WITH PASSWORD 'abc123';\""
sudo su postgres -c "psql postgres -c \"CREATE ROLE replica_user WITH REPLICATION LOGIN PASSWORD 'abc123';\""

# This has to be removed for SLES12 where the file has other auth settings that cause issues with the replica
sudo rm ${CFG_ROOT}/data/pg_hba.conf
sudo tee ${CFG_ROOT}/data/pg_hba.conf << EOF
# TYPE  DATABASE        USER            ADDRESS                 METHOD

# "local" is for Unix domain socket connections only
local   all             all                                     peer
# IPv4 local connections:
host    all             all             127.0.0.1/32            scram-sha-256
# IPv6 local connections:
host    all             all             ::1/128                 scram-sha-256
# allow local connections
host    all             all             127.0.0.1/32            scram-sha-256
host    all             all             ::1/128                 scram-sha-256
# allow replica connection from localhost
host  replication   replica_user  localhost  md5
EOF

### Everything following this comment is designed to set up a paused replica to get replication metrics
sudo tee -a ${CFG_ROOT}/data/postgresql.conf << EOF
wal_level = logical
wal_log_hints = on
archive_mode = on
archive_command = 'test ! -f $DATA_ROOT/data/archive/%f && cp %p $DATA_ROOT/data/archive/%f'
archive_timeout = 10s
EOF

sudo mkdir $DATA_ROOT/data/archive/
sudo chown postgres:postgres $DATA_ROOT/data/archive/

sudo service $SERVICE_NAME restart

# backup from primary to repl directory and configure replication
sudo tee ${DATA_ROOT}/.pgpass << EOF
*:*:*:replica_user:abc123
EOF
sudo chown postgres:postgres ${DATA_ROOT}/.pgpass
sudo chmod 600 ${DATA_ROOT}/.pgpass
sudo PGPASSFILE=${DATA_ROOT}/.pgpass pg_basebackup -h localhost -U replica_user -X stream -C -S replica_2 -v -R -w -D ${DATA_ROOT}/repl/

# This has to be removed for SLES12 where the file has other auth settings that cause issues with the replica
sudo rm ${CFG_ROOT}/repl/pg_hba.conf
sudo touch ${DATA_ROOT}/repl/pg_hba.conf
sudo tee -a ${DATA_ROOT}/repl/pg_hba.conf << EOF
# "local" is for Unix domain socket connections only
local   all             all                                     peer
# IPv4 local connections:
host    all             all             127.0.0.1/32            scram-sha-256
# IPv6 local connections:
host    all             all             ::1/128                 scram-sha-256
# Allow replication connections from localhost, by a user with the
# replication privilege.
local   replication     all                                     peer
host    replication     all             127.0.0.1/32            scram-sha-256
host    replication     all             ::1/128                 scram-sha-256
EOF

sudo tee ${DATA_ROOT}/repl/postgresql.conf << EOF
port = 5434
EOF

sudo chown -R postgres:postgres ${DATA_ROOT}/repl

# start the replica in the background
nohup sudo su postgres -c "$BIN_DIR/postgres -D ${DATA_ROOT}/repl" 2>/dev/null >/dev/null </dev/null &
# give it time to start, since we put it in the background
sleep 5
# pause the replication so we see delay metrics populated
sudo su postgres -c "PGPASSWORD=abc123 psql postgres -h localhost -p 5434 -c  \"SELECT pg_wal_replay_pause();\""
