set -e
source /etc/os-release
MAJOR_VERSION_ID=${VERSION_ID%%.*}

verify_driver() {
    # Verify NVIDIA driver:
    # Installation could finish successfully but the driver is still unusable
    # A common error when running this check:
    # "NVIDIA-SMI has failed because it couldn't communicate with the NVIDIA
    # driver. Make sure that the latest NVIDIA driver is installed and running."
    nvidia-smi
}

install_cuda_from_runfile() {
    # Ref: https://docs.nvidia.com/datacenter/tesla/tesla-installation-notes/index.html#runfile
    # This method requires the matching kernel-devel package to be installed, and
    # the package may be absent from the repo and cause this method to fail
    # Remove existing installation before using the runfile
    remove_cuda_package
    remove_driver_package
    # For Rocky Linux 9: when a new OS version becomes available, the default 
    # repo setting (/etc/yum.repos.d/rocky.repo) will automatically point to the
    # new version's repo. This is problematic since the new OS is not available
    # right away on GCE. Set up the matched repo to install the correct 
    # kernel-devel-$(uname -r)
    # Not needed for RL8 since 8.10 is already the last RL8 release.  
    REPO_URL="https://dl.rockylinux.org/vault/rocky/$VERSION_ID/AppStream/x86_64/os/"
    REPO_METADATA="$REPO_URL/repodata/repomd.xml"
    STATUS_CODE=$(curl -s -o /dev/null -w "%{http_code}" "$REPO_METADATA")
    if [[ $ID == rocky && "$MAJOR_VERSION_ID" == 9 && "$STATUS_CODE" == "200" ]]; then
        cat <<EOF | sudo tee /etc/yum.repos.d/rocky-matched.repo
[appstream-matched]
name=Rocky Linux \$releasever - AppStream - Matched
baseurl=$REPO_URL
gpgcheck=1
enabled=1
countme=1
metadata_expire=6h
gpgkey=file:///etc/pki/rpm-gpg/RPM-GPG-KEY-Rocky-9
EOF
    fi
    sudo yum install -y kernel-devel-$(uname -r) pciutils gcc make wget yum-utils

    # Installing latest version of NVIDIA CUDA and driver
    local CUDA_VERSION=12.8.0
    local CUDA_BUNDLED_DRIVER_VERSION=570.86.10
    echo "Installing CUDA Toolkit $CUDA_VERSION from CUDA installer with bundled driver $CUDA_BUNDLED_DRIVER_VERSION"
    curl -fSsl -O https://developer.download.nvidia.com/compute/cuda/$CUDA_VERSION/local_installers/cuda_${CUDA_VERSION}_${CUDA_BUNDLED_DRIVER_VERSION}_linux.run
    sudo sh cuda_${CUDA_VERSION}_${CUDA_BUNDLED_DRIVER_VERSION}_linux.run --silent
    verify_driver
}

setup_repo() {
    # Enable EPEL (Extra Packages for Enterprise Linux) for packages such as DKMS
    # Ref: https://docs.nvidia.com/cuda/cuda-installation-guide-linux/#prepare-rhel-9-rocky-9
    sudo yum install -y yum-utils epel-release
    sudo yum-config-manager \
        --add-repo https://developer.download.nvidia.com/compute/cuda/repos/rhel$MAJOR_VERSION_ID/x86_64/cuda-rhel$MAJOR_VERSION_ID.repo
    sudo yum clean all
}

install_cuda_from_package_manager() {
    setup_repo
    install_driver_package
    # TODO(b/377558109): remove the temporary fix once the repo is updated
    sudo yum -y install cuda-toolkit-12-9 cuda-demo*
    verify_driver
}

remove_cuda_package() {
    # Ref: https://docs.nvidia.com/cuda/cuda-installation-guide-linux/index.html#removing-cuda-toolkit-and-driver
    sudo yum -y remove "cuda*" "*cublas*" "*cufft*" "*cufile*" "*curand*" \
        "*cusolver*" "*cusparse*" "*gds-tools*" "*npp*" "*nvjpeg*" "nsight*" \
        "*nvvm*"
}

try_install() {
    # Export all functions for the bash subprocess
    eval "$(declare -F | sed 's/ -f / -fx /')"
    export ID MAJOR_VERSION_ID VERSION_ID
    for install_method in "$@"; do
        echo "Installing NVIDIA driver and CUDA with $install_method..."
        # Can't use a subshell because of https://lists.gnu.org/archive/html/bug-bash/2012-12/msg00094.html
        bash -$- -c $install_method && {
            echo "NVIDIA driver and CUDA has been installed successfully with $install_method."
            return 0
        }
    done
    echo "NVIDIA driver and CUDA cannot be installed; all installation methods failed."
    return 1
}

handle_rhel9() {
    install_driver_package() {
        # Ref: https://developer.nvidia.com/cuda-12-2-2-download-archive?target_os=Linux&target_arch=x86_64&Distribution=RHEL&target_version=8&target_type=rpm_network
        # TODO(b/396163322): Remove the version pin once the repo is fixed
        sudo yum -y module install nvidia-driver:565-dkms
    }
}

handle_common() {
    install_driver_package() {
        # Ref: https://developer.nvidia.com/cuda-12-2-2-download-archive?target_os=Linux&target_arch=x86_64&Distribution=RHEL&target_version=8&target_type=rpm_network
        sudo yum -y module install nvidia-driver
    }
}

remove_driver_package() {
    # Ref: https://docs.nvidia.com/cuda/cuda-installation-guide-linux/index.html#removing-cuda-toolkit-and-driver
    sudo yum -y module remove --all nvidia-driver
}

case "$MAJOR_VERSION_ID" in
    9) handle_rhel9;;
    *) handle_common;;
esac
try_install install_cuda_from_package_manager install_cuda_from_runfile
