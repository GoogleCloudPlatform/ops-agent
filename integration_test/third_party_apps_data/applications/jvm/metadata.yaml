public_url: "https://cloud.google.com/stackdriver/docs/solutions/agents/ops-agent/third-party/jvm"
short_name: JVM
long_name: JVM
description: |-
  The JVM integration collects JVM metrics exposed through [Java Management
  Extensions (JMX)](https://www.oracle.com/java/technologies/javase/javamanagement.html).
  The integration primarily collects metrics on memory and garbage collection.
  Additional runtime metrics, such as thread count and classes loaded, are also
  available.
configure_integration: |-
  To expose a JMX endpoint, you must set the `com.sun.management.jmxremote.port`
  system property when starting the JVM. We also recommend setting the
  `com.sun.management.jmxremote.rmi.port` system property to the same port.

  To expose a JMX endpoint remotely, you must also set the
  `java.rmi.server.hostname` system property.

  To set system properties by using command-line arguments, prepend the property
  name with `-D` when starting the JVM.

  For example, to set `com.sun.management.jmxremote.port` to port `9999`, specify
  the following when starting the JVM:

  <pre>
  -Dcom.sun.management.jmxremote.port=9999
  </pre>
minimum_supported_agent_version:
  metrics: 2.2.0
supported_app_version: ["Java 16", "Java 11"]
expected_metrics:
- type: workload.googleapis.com/jvm.classes.loaded
  value_type: INT64
  kind: GAUGE
  monitored_resource: gce_instance
  labels: {}
- type: workload.googleapis.com/jvm.gc.collections.count
  value_type: INT64
  kind: CUMULATIVE
  monitored_resource: gce_instance
  labels:
    name: .*
- type: workload.googleapis.com/jvm.gc.collections.elapsed
  value_type: INT64
  kind: CUMULATIVE
  monitored_resource: gce_instance
  labels:
    name: .*
- type: workload.googleapis.com/jvm.memory.heap.committed
  value_type: INT64
  kind: GAUGE
  monitored_resource: gce_instance
  labels: {}
- type: workload.googleapis.com/jvm.memory.heap.init
  value_type: INT64
  kind: GAUGE
  monitored_resource: gce_instance
  labels: {}
- type: workload.googleapis.com/jvm.memory.heap.max
  value_type: INT64
  kind: GAUGE
  monitored_resource: gce_instance
  labels: {}
- type: workload.googleapis.com/jvm.memory.heap.used
  value_type: INT64
  kind: GAUGE
  monitored_resource: gce_instance
  labels: {}
  representative: true
- type: workload.googleapis.com/jvm.memory.nonheap.committed
  value_type: INT64
  kind: GAUGE
  monitored_resource: gce_instance
  labels: {}
- type: workload.googleapis.com/jvm.memory.nonheap.init
  value_type: INT64
  kind: GAUGE
  monitored_resource: gce_instance
  labels: {}
- type: workload.googleapis.com/jvm.memory.nonheap.max
  value_type: INT64
  kind: GAUGE
  monitored_resource: gce_instance
  labels: {}
- type: workload.googleapis.com/jvm.memory.nonheap.used
  value_type: INT64
  kind: GAUGE
  monitored_resource: gce_instance
  labels: {}
- type: workload.googleapis.com/jvm.memory.pool.committed
  value_type: INT64
  kind: GAUGE
  monitored_resource: gce_instance
  labels:
    name: .*
- type: workload.googleapis.com/jvm.memory.pool.init
  value_type: INT64
  kind: GAUGE
  monitored_resource: gce_instance
  labels:
    name: .*
- type: workload.googleapis.com/jvm.memory.pool.max
  value_type: INT64
  kind: GAUGE
  monitored_resource: gce_instance
  labels:
    name: .*
- type: workload.googleapis.com/jvm.memory.pool.used
  value_type: INT64
  kind: GAUGE
  monitored_resource: gce_instance
  labels:
    name: .*
- type: workload.googleapis.com/jvm.threads.count
  value_type: INT64
  kind: GAUGE
  monitored_resource: gce_instance
  labels: {}
