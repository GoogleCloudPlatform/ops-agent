exporters:
  googlecloud:
    metric:
      instrumentation_library_labels: false
      prefix: ""
      resource_filters: []
      service_resource_labels: false
      skip_create_descriptor: true
    user_agent: Google-Cloud-Ops-Agent-Metrics/latest (BuildDistro=build_distro;Platform=linux;ShortName=linux_platform;ShortVersion=linux_platform_version)
  googlecloud/otel:
    metric:
      instrumentation_library_labels: true
      prefix: ""
      resource_filters: []
      service_resource_labels: false
      skip_create_descriptor: true
    user_agent: Google-Cloud-Ops-Agent-Metrics/latest (BuildDistro=build_distro;Platform=linux;ShortName=linux_platform;ShortVersion=linux_platform_version)
processors:
  agentmetrics/hostmetrics_0:
    blank_label_metrics:
    - system.cpu.utilization
  filter/default__pipeline_hostmetrics_0:
    metrics:
      exclude:
        match_type: regexp
        metric_names: []
  filter/default__pipeline_hostmetrics_1_0:
    metrics:
      exclude:
        match_type: regexp
        metric_names: []
  filter/fluentbit_0:
    metrics:
      include:
        match_type: strict
        metric_names:
        - fluentbit_uptime
        - fluentbit_stackdriver_requests_total
        - fluentbit_stackdriver_proc_records_total
        - fluentbit_stackdriver_retried_records_total
  filter/hostmetrics_1:
    metrics:
      exclude:
        match_type: strict
        metric_names:
        - system.cpu.time
        - system.network.dropped
        - system.filesystem.inodes.usage
        - system.paging.faults
        - system.disk.operation_time
  filter/otel_0:
    metrics:
      include:
        match_type: strict
        metric_names:
        - otelcol_process_uptime
        - otelcol_process_memory_rss
        - grpc_client_attempt_duration
        - googlecloudmonitoring_point_count
  filter/otel_2:
    metrics:
      include:
        match_type: strict
        metric_names:
        - otelcol_process_uptime
        - otelcol_process_memory_rss
        - grpc_client_attempt_duration_count
        - googlecloudmonitoring_point_count
  filter/vault_1:
    metrics:
      include:
        match_type: strict
        metric_names:
        - vault.storage.operation.delete.time
        - vault.storage.operation.delete.count
        - vault.storage.operation.get.time
        - vault.storage.operation.get.count
        - vault.storage.operation.list.time
        - vault.storage.operation.list.count
        - vault.storage.operation.put.time
        - vault.storage.operation.put.count
        - vault.core.request.count
        - vault.token.lease.count
        - vault.audit.request.failed
        - vault.audit.response.failed
        - vault.memory.usage
        - vault.token.count
        - vault.token.revoke.time
        - vault.token.renew.time
        - vault.core.leader.duration
  metricstransform/fluentbit_1:
    transforms:
    - action: update
      include: fluentbit_uptime
      new_name: agent/uptime
      operations:
      - action: toggle_scalar_data_type
      - action: add_label
        new_label: version
        new_value: google-cloud-ops-agent-logging/latest-build_distro
      - action: aggregate_labels
        aggregation_type: sum
        label_set:
        - version
    - action: update
      include: fluentbit_stackdriver_requests_total
      new_name: agent/request_count
      operations:
      - action: toggle_scalar_data_type
      - action: update_label
        label: status
        new_label: response_code
      - action: aggregate_labels
        aggregation_type: sum
        label_set:
        - response_code
    - action: update
      include: fluentbit_stackdriver_proc_records_total
      new_name: agent/log_entry_count
      operations:
      - action: toggle_scalar_data_type
      - action: update_label
        label: status
        new_label: response_code
      - action: aggregate_labels
        aggregation_type: sum
        label_set:
        - response_code
    - action: update
      include: fluentbit_stackdriver_retried_records_total
      new_name: agent/log_entry_retry_count
      operations:
      - action: toggle_scalar_data_type
      - action: update_label
        label: status
        new_label: response_code
      - action: aggregate_labels
        aggregation_type: sum
        label_set:
        - response_code
    - action: update
      include: ^(.*)$$
      match_type: regexp
      new_name: agent.googleapis.com/$${1}
  metricstransform/hostmetrics_1_0:
    transforms:
    - action: update
      include: nvml.gpu.utilization
      new_name: gpu/utilization
      operations:
      - action: experimental_scale_value
        experimental_scale: 100.0
    - action: update
      include: nvml.gpu.memory.bytes_used
      new_name: gpu/memory/bytes_used
    - action: update
      include: nvml.gpu.processes.utilization
      new_name: gpu/processes/utilization
      operations:
      - action: experimental_scale_value
        experimental_scale: 100.0
    - action: update
      include: nvml.gpu.processes.max_bytes_used
      new_name: gpu/processes/max_bytes_used
    - action: update
      include: ^(.*)$$
      match_type: regexp
      new_name: agent.googleapis.com/$${1}
  metricstransform/hostmetrics_2:
    transforms:
    - action: update
      include: system.cpu.time
      new_name: cpu/usage_time
      operations:
      - action: toggle_scalar_data_type
      - action: update_label
        label: cpu
        new_label: cpu_number
      - action: update_label
        label: state
        new_label: cpu_state
    - action: update
      include: system.cpu.utilization
      new_name: cpu/utilization
      operations:
      - action: aggregate_labels
        aggregation_type: mean
        label_set:
        - state
        - blank
      - action: update_label
        label: blank
        new_label: cpu_number
      - action: update_label
        label: state
        new_label: cpu_state
    - action: update
      include: system.cpu.load_average.1m
      new_name: cpu/load_1m
    - action: update
      include: system.cpu.load_average.5m
      new_name: cpu/load_5m
    - action: update
      include: system.cpu.load_average.15m
      new_name: cpu/load_15m
    - action: update
      include: system.disk.read_io
      new_name: disk/read_bytes_count
    - action: update
      include: system.disk.write_io
      new_name: disk/write_bytes_count
    - action: update
      include: system.disk.operations
      new_name: disk/operation_count
    - action: update
      include: system.disk.io_time
      new_name: disk/io_time
      operations:
      - action: experimental_scale_value
        experimental_scale: 1000.0
      - action: toggle_scalar_data_type
    - action: update
      include: system.disk.weighted_io_time
      new_name: disk/weighted_io_time
      operations:
      - action: experimental_scale_value
        experimental_scale: 1000.0
      - action: toggle_scalar_data_type
    - action: update
      include: system.disk.average_operation_time
      new_name: disk/operation_time
      operations:
      - action: experimental_scale_value
        experimental_scale: 1000.0
      - action: toggle_scalar_data_type
    - action: update
      include: system.disk.pending_operations
      new_name: disk/pending_operations
      operations:
      - action: toggle_scalar_data_type
    - action: update
      include: system.disk.merged
      new_name: disk/merged_operations
    - action: update
      include: system.filesystem.usage
      new_name: disk/bytes_used
      operations:
      - action: toggle_scalar_data_type
      - action: aggregate_labels
        aggregation_type: max
        label_set:
        - device
        - state
    - action: update
      include: system.filesystem.utilization
      new_name: disk/percent_used
      operations:
      - action: aggregate_labels
        aggregation_type: max
        label_set:
        - device
        - state
    - action: update
      include: system.memory.usage
      new_name: memory/bytes_used
      operations:
      - action: toggle_scalar_data_type
      - action: aggregate_label_values
        aggregated_values:
        - slab_reclaimable
        - slab_unreclaimable
        aggregation_type: sum
        label: state
        new_value: slab
    - action: update
      include: system.memory.utilization
      new_name: memory/percent_used
      operations:
      - action: aggregate_label_values
        aggregated_values:
        - slab_reclaimable
        - slab_unreclaimable
        aggregation_type: sum
        label: state
        new_value: slab
    - action: update
      include: system.network.io
      new_name: interface/traffic
      operations:
      - action: update_label
        label: interface
        new_label: device
      - action: update_label
        label: direction
        value_actions:
        - new_value: rx
          value: receive
        - new_value: tx
          value: transmit
    - action: update
      include: system.network.errors
      new_name: interface/errors
      operations:
      - action: update_label
        label: interface
        new_label: device
      - action: update_label
        label: direction
        value_actions:
        - new_value: rx
          value: receive
        - new_value: tx
          value: transmit
    - action: update
      include: system.network.packets
      new_name: interface/packets
      operations:
      - action: update_label
        label: interface
        new_label: device
      - action: update_label
        label: direction
        value_actions:
        - new_value: rx
          value: receive
        - new_value: tx
          value: transmit
    - action: update
      include: system.network.connections
      new_name: network/tcp_connections
      operations:
      - action: toggle_scalar_data_type
      - action: delete_label_value
        label: protocol
        label_value: udp
      - action: update_label
        label: state
        new_label: tcp_state
      - action: aggregate_labels
        aggregation_type: sum
        label_set:
        - tcp_state
      - action: add_label
        new_label: port
        new_value: all
    - action: update
      include: system.processes.created
      new_name: processes/fork_count
    - action: update
      include: system.processes.count
      new_name: processes/count_by_state
      operations:
      - action: toggle_scalar_data_type
      - action: update_label
        label: status
        new_label: state
    - action: update
      include: system.paging.usage
      new_name: swap/bytes_used
      operations:
      - action: toggle_scalar_data_type
    - action: update
      include: system.paging.utilization
      new_name: swap/percent_used
    - action: insert
      include: swap/percent_used
      new_name: pagefile/percent_used
      operations:
      - action: aggregate_labels
        aggregation_type: sum
        label_set:
        - state
    - action: update
      include: system.paging.operations
      new_name: swap/io
      operations:
      - action: aggregate_labels
        aggregation_type: sum
        label_set:
        - direction
      - action: update_label
        label: direction
        value_actions:
        - new_value: in
          value: page_in
        - new_value: out
          value: page_out
    - action: update
      include: process.cpu.time
      new_name: processes/cpu_time
      operations:
      - action: experimental_scale_value
        experimental_scale: 1e+06
      - action: toggle_scalar_data_type
      - action: add_label
        new_label: process
        new_value: all
      - action: delete_label_value
        label: state
        label_value: wait
      - action: update_label
        label: state
        new_label: user_or_syst
      - action: update_label
        label: user_or_syst
        value_actions:
        - new_value: syst
          value: system
    - action: update
      include: process.disk.read_io
      new_name: processes/disk/read_bytes_count
      operations:
      - action: add_label
        new_label: process
        new_value: all
    - action: update
      include: process.disk.write_io
      new_name: processes/disk/write_bytes_count
      operations:
      - action: add_label
        new_label: process
        new_value: all
    - action: update
      include: process.memory.usage
      new_name: processes/rss_usage
      operations:
      - action: toggle_scalar_data_type
      - action: add_label
        new_label: process
        new_value: all
    - action: update
      include: process.memory.virtual
      new_name: processes/vm_usage
      operations:
      - action: toggle_scalar_data_type
      - action: add_label
        new_label: process
        new_value: all
    - action: update
      include: ^(.*)$$
      match_type: regexp
      new_name: agent.googleapis.com/$${1}
  metricstransform/otel_3:
    transforms:
    - action: update
      include: otelcol_process_uptime
      new_name: agent/uptime
      operations:
      - action: toggle_scalar_data_type
      - action: add_label
        new_label: version
        new_value: google-cloud-ops-agent-metrics/latest-build_distro
      - action: aggregate_labels
        aggregation_type: sum
        label_set:
        - version
    - action: update
      include: otelcol_process_memory_rss
      new_name: agent/memory_usage
      operations:
      - action: aggregate_labels
        aggregation_type: sum
        label_set: []
    - action: update
      include: grpc_client_attempt_duration_count
      new_name: agent/api_request_count
      operations:
      - action: update_label
        label: grpc_status
        new_label: state
      - action: aggregate_labels
        aggregation_type: sum
        label_set:
        - state
    - action: update
      include: googlecloudmonitoring_point_count
      new_name: agent/monitoring/point_count
      operations:
      - action: toggle_scalar_data_type
      - action: aggregate_labels
        aggregation_type: sum
        label_set:
        - status
    - action: update
      include: ^(.*)$$
      match_type: regexp
      new_name: agent.googleapis.com/$${1}
  metricstransform/vault_2:
    transforms:
    - action: update
      include: vault.audit.response.failed
      operations:
      - action: toggle_scalar_data_type
    - action: update
      include: vault.audit.request.failed
      operations:
      - action: toggle_scalar_data_type
    - action: update
      include: vault.token.lease.count
      operations:
      - action: toggle_scalar_data_type
    - action: update
      include: vault.token.count
      operations:
      - action: toggle_scalar_data_type
    - action: update
      include: vault.core.request.count
      operations:
      - action: toggle_scalar_data_type
  metricstransform/vault_4:
    transforms:
    - action: update
      include: ^(.*)$$
      match_type: regexp
      new_name: workload.googleapis.com/$${1}
  modifyscope/vault_5:
    override_scope_name: agent.googleapis.com/vault
    override_scope_version: "1.0"
  normalizesums/vault_3: {}
  resourcedetection/_global_0:
    detectors:
    - gcp
  transform/otel_1:
    error_mode: ignore
    metric_statements:
    - context: metric
      statements:
      - extract_count_metric(true) where name == "grpc_client_attempt_duration"
  transform/vault_0:
    metric_statements:
    - context: datapoint
      statements:
      - convert_summary_count_val_to_sum("cumulative",  true) where metric.name == "vault_azure_delete"
      - convert_summary_sum_val_to_sum("cumulative",  true) where metric.name == "vault_azure_delete"
      - set(attributes["storage"], "azure") where metric.name == "vault_azure_delete_count"
      - set(attributes["storage"], "azure") where metric.name == "vault_azure_delete_sum"
      - set(metric.name, "vault.storage.operation.delete.time") where metric.name == "vault_azure_delete_sum"
      - set(metric.unit, "ms") where metric.name == "vault.storage.operation.delete.time"
      - set(metric.description, "The duration of delete operations executed against the storage backend.") where metric.name == "vault.storage.operation.delete.time"
      - set(metric.name, "vault.storage.operation.delete.count") where metric.name == "vault_azure_delete_count"
      - set(metric.unit, "{operations}") where metric.name == "vault.storage.operation.delete.count"
      - set(metric.description, "The amount of delete operations executed against the storage backend.") where metric.name == "vault.storage.operation.delete.count"
      - convert_summary_count_val_to_sum("cumulative",  true) where metric.name == "vault_cassandra_delete"
      - convert_summary_sum_val_to_sum("cumulative",  true) where metric.name == "vault_cassandra_delete"
      - set(attributes["storage"], "cassandra") where metric.name == "vault_cassandra_delete_count"
      - set(attributes["storage"], "cassandra") where metric.name == "vault_cassandra_delete_sum"
      - set(metric.name, "vault.storage.operation.delete.time") where metric.name == "vault_cassandra_delete_sum"
      - set(metric.unit, "ms") where metric.name == "vault.storage.operation.delete.time"
      - set(metric.description, "The duration of delete operations executed against the storage backend.") where metric.name == "vault.storage.operation.delete.time"
      - set(metric.name, "vault.storage.operation.delete.count") where metric.name == "vault_cassandra_delete_count"
      - set(metric.unit, "{operations}") where metric.name == "vault.storage.operation.delete.count"
      - set(metric.description, "The amount of delete operations executed against the storage backend.") where metric.name == "vault.storage.operation.delete.count"
      - convert_summary_count_val_to_sum("cumulative",  true) where metric.name == "vault_cockroachdb_delete"
      - convert_summary_sum_val_to_sum("cumulative",  true) where metric.name == "vault_cockroachdb_delete"
      - set(attributes["storage"], "cockroachdb") where metric.name == "vault_cockroachdb_delete_count"
      - set(attributes["storage"], "cockroachdb") where metric.name == "vault_cockroachdb_delete_sum"
      - set(metric.name, "vault.storage.operation.delete.time") where metric.name == "vault_cockroachdb_delete_sum"
      - set(metric.unit, "ms") where metric.name == "vault.storage.operation.delete.time"
      - set(metric.description, "The duration of delete operations executed against the storage backend.") where metric.name == "vault.storage.operation.delete.time"
      - set(metric.name, "vault.storage.operation.delete.count") where metric.name == "vault_cockroachdb_delete_count"
      - set(metric.unit, "{operations}") where metric.name == "vault.storage.operation.delete.count"
      - set(metric.description, "The amount of delete operations executed against the storage backend.") where metric.name == "vault.storage.operation.delete.count"
      - convert_summary_count_val_to_sum("cumulative",  true) where metric.name == "vault_consul_delete"
      - convert_summary_sum_val_to_sum("cumulative",  true) where metric.name == "vault_consul_delete"
      - set(attributes["storage"], "consul") where metric.name == "vault_consul_delete_count"
      - set(attributes["storage"], "consul") where metric.name == "vault_consul_delete_sum"
      - set(metric.name, "vault.storage.operation.delete.time") where metric.name == "vault_consul_delete_sum"
      - set(metric.unit, "ms") where metric.name == "vault.storage.operation.delete.time"
      - set(metric.description, "The duration of delete operations executed against the storage backend.") where metric.name == "vault.storage.operation.delete.time"
      - set(metric.name, "vault.storage.operation.delete.count") where metric.name == "vault_consul_delete_count"
      - set(metric.unit, "{operations}") where metric.name == "vault.storage.operation.delete.count"
      - set(metric.description, "The amount of delete operations executed against the storage backend.") where metric.name == "vault.storage.operation.delete.count"
      - convert_summary_count_val_to_sum("cumulative",  true) where metric.name == "vault_couchdb_delete"
      - convert_summary_sum_val_to_sum("cumulative",  true) where metric.name == "vault_couchdb_delete"
      - set(attributes["storage"], "couchdb") where metric.name == "vault_couchdb_delete_count"
      - set(attributes["storage"], "couchdb") where metric.name == "vault_couchdb_delete_sum"
      - set(metric.name, "vault.storage.operation.delete.time") where metric.name == "vault_couchdb_delete_sum"
      - set(metric.unit, "ms") where metric.name == "vault.storage.operation.delete.time"
      - set(metric.description, "The duration of delete operations executed against the storage backend.") where metric.name == "vault.storage.operation.delete.time"
      - set(metric.name, "vault.storage.operation.delete.count") where metric.name == "vault_couchdb_delete_count"
      - set(metric.unit, "{operations}") where metric.name == "vault.storage.operation.delete.count"
      - set(metric.description, "The amount of delete operations executed against the storage backend.") where metric.name == "vault.storage.operation.delete.count"
      - convert_summary_count_val_to_sum("cumulative",  true) where metric.name == "vault_dynamodb_delete"
      - convert_summary_sum_val_to_sum("cumulative",  true) where metric.name == "vault_dynamodb_delete"
      - set(attributes["storage"], "dynamodb") where metric.name == "vault_dynamodb_delete_count"
      - set(attributes["storage"], "dynamodb") where metric.name == "vault_dynamodb_delete_sum"
      - set(metric.name, "vault.storage.operation.delete.time") where metric.name == "vault_dynamodb_delete_sum"
      - set(metric.unit, "ms") where metric.name == "vault.storage.operation.delete.time"
      - set(metric.description, "The duration of delete operations executed against the storage backend.") where metric.name == "vault.storage.operation.delete.time"
      - set(metric.name, "vault.storage.operation.delete.count") where metric.name == "vault_dynamodb_delete_count"
      - set(metric.unit, "{operations}") where metric.name == "vault.storage.operation.delete.count"
      - set(metric.description, "The amount of delete operations executed against the storage backend.") where metric.name == "vault.storage.operation.delete.count"
      - convert_summary_count_val_to_sum("cumulative",  true) where metric.name == "vault_etcd_delete"
      - convert_summary_sum_val_to_sum("cumulative",  true) where metric.name == "vault_etcd_delete"
      - set(attributes["storage"], "etcd") where metric.name == "vault_etcd_delete_count"
      - set(attributes["storage"], "etcd") where metric.name == "vault_etcd_delete_sum"
      - set(metric.name, "vault.storage.operation.delete.time") where metric.name == "vault_etcd_delete_sum"
      - set(metric.unit, "ms") where metric.name == "vault.storage.operation.delete.time"
      - set(metric.description, "The duration of delete operations executed against the storage backend.") where metric.name == "vault.storage.operation.delete.time"
      - set(metric.name, "vault.storage.operation.delete.count") where metric.name == "vault_etcd_delete_count"
      - set(metric.unit, "{operations}") where metric.name == "vault.storage.operation.delete.count"
      - set(metric.description, "The amount of delete operations executed against the storage backend.") where metric.name == "vault.storage.operation.delete.count"
      - convert_summary_count_val_to_sum("cumulative",  true) where metric.name == "vault_gcs_delete"
      - convert_summary_sum_val_to_sum("cumulative",  true) where metric.name == "vault_gcs_delete"
      - set(attributes["storage"], "gcs") where metric.name == "vault_gcs_delete_count"
      - set(attributes["storage"], "gcs") where metric.name == "vault_gcs_delete_sum"
      - set(metric.name, "vault.storage.operation.delete.time") where metric.name == "vault_gcs_delete_sum"
      - set(metric.unit, "ms") where metric.name == "vault.storage.operation.delete.time"
      - set(metric.description, "The duration of delete operations executed against the storage backend.") where metric.name == "vault.storage.operation.delete.time"
      - set(metric.name, "vault.storage.operation.delete.count") where metric.name == "vault_gcs_delete_count"
      - set(metric.unit, "{operations}") where metric.name == "vault.storage.operation.delete.count"
      - set(metric.description, "The amount of delete operations executed against the storage backend.") where metric.name == "vault.storage.operation.delete.count"
      - convert_summary_count_val_to_sum("cumulative",  true) where metric.name == "vault_mssql_delete"
      - convert_summary_sum_val_to_sum("cumulative",  true) where metric.name == "vault_mssql_delete"
      - set(attributes["storage"], "mssql") where metric.name == "vault_mssql_delete_count"
      - set(attributes["storage"], "mssql") where metric.name == "vault_mssql_delete_sum"
      - set(metric.name, "vault.storage.operation.delete.time") where metric.name == "vault_mssql_delete_sum"
      - set(metric.unit, "ms") where metric.name == "vault.storage.operation.delete.time"
      - set(metric.description, "The duration of delete operations executed against the storage backend.") where metric.name == "vault.storage.operation.delete.time"
      - set(metric.name, "vault.storage.operation.delete.count") where metric.name == "vault_mssql_delete_count"
      - set(metric.unit, "{operations}") where metric.name == "vault.storage.operation.delete.count"
      - set(metric.description, "The amount of delete operations executed against the storage backend.") where metric.name == "vault.storage.operation.delete.count"
      - convert_summary_count_val_to_sum("cumulative",  true) where metric.name == "vault_mysql_delete"
      - convert_summary_sum_val_to_sum("cumulative",  true) where metric.name == "vault_mysql_delete"
      - set(attributes["storage"], "mysql") where metric.name == "vault_mysql_delete_count"
      - set(attributes["storage"], "mysql") where metric.name == "vault_mysql_delete_sum"
      - set(metric.name, "vault.storage.operation.delete.time") where metric.name == "vault_mysql_delete_sum"
      - set(metric.unit, "ms") where metric.name == "vault.storage.operation.delete.time"
      - set(metric.description, "The duration of delete operations executed against the storage backend.") where metric.name == "vault.storage.operation.delete.time"
      - set(metric.name, "vault.storage.operation.delete.count") where metric.name == "vault_mysql_delete_count"
      - set(metric.unit, "{operations}") where metric.name == "vault.storage.operation.delete.count"
      - set(metric.description, "The amount of delete operations executed against the storage backend.") where metric.name == "vault.storage.operation.delete.count"
      - convert_summary_count_val_to_sum("cumulative",  true) where metric.name == "vault_postgres_delete"
      - convert_summary_sum_val_to_sum("cumulative",  true) where metric.name == "vault_postgres_delete"
      - set(attributes["storage"], "postgres") where metric.name == "vault_postgres_delete_count"
      - set(attributes["storage"], "postgres") where metric.name == "vault_postgres_delete_sum"
      - set(metric.name, "vault.storage.operation.delete.time") where metric.name == "vault_postgres_delete_sum"
      - set(metric.unit, "ms") where metric.name == "vault.storage.operation.delete.time"
      - set(metric.description, "The duration of delete operations executed against the storage backend.") where metric.name == "vault.storage.operation.delete.time"
      - set(metric.name, "vault.storage.operation.delete.count") where metric.name == "vault_postgres_delete_count"
      - set(metric.unit, "{operations}") where metric.name == "vault.storage.operation.delete.count"
      - set(metric.description, "The amount of delete operations executed against the storage backend.") where metric.name == "vault.storage.operation.delete.count"
      - convert_summary_count_val_to_sum("cumulative",  true) where metric.name == "vault_s3_delete"
      - convert_summary_sum_val_to_sum("cumulative",  true) where metric.name == "vault_s3_delete"
      - set(attributes["storage"], "s3") where metric.name == "vault_s3_delete_count"
      - set(attributes["storage"], "s3") where metric.name == "vault_s3_delete_sum"
      - set(metric.name, "vault.storage.operation.delete.time") where metric.name == "vault_s3_delete_sum"
      - set(metric.unit, "ms") where metric.name == "vault.storage.operation.delete.time"
      - set(metric.description, "The duration of delete operations executed against the storage backend.") where metric.name == "vault.storage.operation.delete.time"
      - set(metric.name, "vault.storage.operation.delete.count") where metric.name == "vault_s3_delete_count"
      - set(metric.unit, "{operations}") where metric.name == "vault.storage.operation.delete.count"
      - set(metric.description, "The amount of delete operations executed against the storage backend.") where metric.name == "vault.storage.operation.delete.count"
      - convert_summary_count_val_to_sum("cumulative",  true) where metric.name == "vault_spanner_delete"
      - convert_summary_sum_val_to_sum("cumulative",  true) where metric.name == "vault_spanner_delete"
      - set(attributes["storage"], "spanner") where metric.name == "vault_spanner_delete_count"
      - set(attributes["storage"], "spanner") where metric.name == "vault_spanner_delete_sum"
      - set(metric.name, "vault.storage.operation.delete.time") where metric.name == "vault_spanner_delete_sum"
      - set(metric.unit, "ms") where metric.name == "vault.storage.operation.delete.time"
      - set(metric.description, "The duration of delete operations executed against the storage backend.") where metric.name == "vault.storage.operation.delete.time"
      - set(metric.name, "vault.storage.operation.delete.count") where metric.name == "vault_spanner_delete_count"
      - set(metric.unit, "{operations}") where metric.name == "vault.storage.operation.delete.count"
      - set(metric.description, "The amount of delete operations executed against the storage backend.") where metric.name == "vault.storage.operation.delete.count"
      - convert_summary_count_val_to_sum("cumulative",  true) where metric.name == "vault_swift_delete"
      - convert_summary_sum_val_to_sum("cumulative",  true) where metric.name == "vault_swift_delete"
      - set(attributes["storage"], "swift") where metric.name == "vault_swift_delete_count"
      - set(attributes["storage"], "swift") where metric.name == "vault_swift_delete_sum"
      - set(metric.name, "vault.storage.operation.delete.time") where metric.name == "vault_swift_delete_sum"
      - set(metric.unit, "ms") where metric.name == "vault.storage.operation.delete.time"
      - set(metric.description, "The duration of delete operations executed against the storage backend.") where metric.name == "vault.storage.operation.delete.time"
      - set(metric.name, "vault.storage.operation.delete.count") where metric.name == "vault_swift_delete_count"
      - set(metric.unit, "{operations}") where metric.name == "vault.storage.operation.delete.count"
      - set(metric.description, "The amount of delete operations executed against the storage backend.") where metric.name == "vault.storage.operation.delete.count"
      - convert_summary_count_val_to_sum("cumulative",  true) where metric.name == "vault_zookeeper_delete"
      - convert_summary_sum_val_to_sum("cumulative",  true) where metric.name == "vault_zookeeper_delete"
      - set(attributes["storage"], "zookeeper") where metric.name == "vault_zookeeper_delete_count"
      - set(attributes["storage"], "zookeeper") where metric.name == "vault_zookeeper_delete_sum"
      - set(metric.name, "vault.storage.operation.delete.time") where metric.name == "vault_zookeeper_delete_sum"
      - set(metric.unit, "ms") where metric.name == "vault.storage.operation.delete.time"
      - set(metric.description, "The duration of delete operations executed against the storage backend.") where metric.name == "vault.storage.operation.delete.time"
      - set(metric.name, "vault.storage.operation.delete.count") where metric.name == "vault_zookeeper_delete_count"
      - set(metric.unit, "{operations}") where metric.name == "vault.storage.operation.delete.count"
      - set(metric.description, "The amount of delete operations executed against the storage backend.") where metric.name == "vault.storage.operation.delete.count"
      - convert_summary_count_val_to_sum("cumulative",  true) where metric.name == "vault_azure_get"
      - convert_summary_sum_val_to_sum("cumulative",  true) where metric.name == "vault_azure_get"
      - set(attributes["storage"], "azure") where metric.name == "vault_azure_get_count"
      - set(attributes["storage"], "azure") where metric.name == "vault_azure_get_sum"
      - set(metric.name, "vault.storage.operation.get.time") where metric.name == "vault_azure_get_sum"
      - set(metric.unit, "ms") where metric.name == "vault.storage.operation.get.time"
      - set(metric.description, "The duration of get operations executed against the storage backend.") where metric.name == "vault.storage.operation.get.time"
      - set(metric.name, "vault.storage.operation.get.count") where metric.name == "vault_azure_get_count"
      - set(metric.unit, "{operations}") where metric.name == "vault.storage.operation.get.count"
      - set(metric.description, "The amount of get operations executed against the storage backend.") where metric.name == "vault.storage.operation.get.count"
      - convert_summary_count_val_to_sum("cumulative",  true) where metric.name == "vault_cassandra_get"
      - convert_summary_sum_val_to_sum("cumulative",  true) where metric.name == "vault_cassandra_get"
      - set(attributes["storage"], "cassandra") where metric.name == "vault_cassandra_get_count"
      - set(attributes["storage"], "cassandra") where metric.name == "vault_cassandra_get_sum"
      - set(metric.name, "vault.storage.operation.get.time") where metric.name == "vault_cassandra_get_sum"
      - set(metric.unit, "ms") where metric.name == "vault.storage.operation.get.time"
      - set(metric.description, "The duration of get operations executed against the storage backend.") where metric.name == "vault.storage.operation.get.time"
      - set(metric.name, "vault.storage.operation.get.count") where metric.name == "vault_cassandra_get_count"
      - set(metric.unit, "{operations}") where metric.name == "vault.storage.operation.get.count"
      - set(metric.description, "The amount of get operations executed against the storage backend.") where metric.name == "vault.storage.operation.get.count"
      - convert_summary_count_val_to_sum("cumulative",  true) where metric.name == "vault_cockroachdb_get"
      - convert_summary_sum_val_to_sum("cumulative",  true) where metric.name == "vault_cockroachdb_get"
      - set(attributes["storage"], "cockroachdb") where metric.name == "vault_cockroachdb_get_count"
      - set(attributes["storage"], "cockroachdb") where metric.name == "vault_cockroachdb_get_sum"
      - set(metric.name, "vault.storage.operation.get.time") where metric.name == "vault_cockroachdb_get_sum"
      - set(metric.unit, "ms") where metric.name == "vault.storage.operation.get.time"
      - set(metric.description, "The duration of get operations executed against the storage backend.") where metric.name == "vault.storage.operation.get.time"
      - set(metric.name, "vault.storage.operation.get.count") where metric.name == "vault_cockroachdb_get_count"
      - set(metric.unit, "{operations}") where metric.name == "vault.storage.operation.get.count"
      - set(metric.description, "The amount of get operations executed against the storage backend.") where metric.name == "vault.storage.operation.get.count"
      - convert_summary_count_val_to_sum("cumulative",  true) where metric.name == "vault_consul_get"
      - convert_summary_sum_val_to_sum("cumulative",  true) where metric.name == "vault_consul_get"
      - set(attributes["storage"], "consul") where metric.name == "vault_consul_get_count"
      - set(attributes["storage"], "consul") where metric.name == "vault_consul_get_sum"
      - set(metric.name, "vault.storage.operation.get.time") where metric.name == "vault_consul_get_sum"
      - set(metric.unit, "ms") where metric.name == "vault.storage.operation.get.time"
      - set(metric.description, "The duration of get operations executed against the storage backend.") where metric.name == "vault.storage.operation.get.time"
      - set(metric.name, "vault.storage.operation.get.count") where metric.name == "vault_consul_get_count"
      - set(metric.unit, "{operations}") where metric.name == "vault.storage.operation.get.count"
      - set(metric.description, "The amount of get operations executed against the storage backend.") where metric.name == "vault.storage.operation.get.count"
      - convert_summary_count_val_to_sum("cumulative",  true) where metric.name == "vault_couchdb_get"
      - convert_summary_sum_val_to_sum("cumulative",  true) where metric.name == "vault_couchdb_get"
      - set(attributes["storage"], "couchdb") where metric.name == "vault_couchdb_get_count"
      - set(attributes["storage"], "couchdb") where metric.name == "vault_couchdb_get_sum"
      - set(metric.name, "vault.storage.operation.get.time") where metric.name == "vault_couchdb_get_sum"
      - set(metric.unit, "ms") where metric.name == "vault.storage.operation.get.time"
      - set(metric.description, "The duration of get operations executed against the storage backend.") where metric.name == "vault.storage.operation.get.time"
      - set(metric.name, "vault.storage.operation.get.count") where metric.name == "vault_couchdb_get_count"
      - set(metric.unit, "{operations}") where metric.name == "vault.storage.operation.get.count"
      - set(metric.description, "The amount of get operations executed against the storage backend.") where metric.name == "vault.storage.operation.get.count"
      - convert_summary_count_val_to_sum("cumulative",  true) where metric.name == "vault_dynamodb_get"
      - convert_summary_sum_val_to_sum("cumulative",  true) where metric.name == "vault_dynamodb_get"
      - set(attributes["storage"], "dynamodb") where metric.name == "vault_dynamodb_get_count"
      - set(attributes["storage"], "dynamodb") where metric.name == "vault_dynamodb_get_sum"
      - set(metric.name, "vault.storage.operation.get.time") where metric.name == "vault_dynamodb_get_sum"
      - set(metric.unit, "ms") where metric.name == "vault.storage.operation.get.time"
      - set(metric.description, "The duration of get operations executed against the storage backend.") where metric.name == "vault.storage.operation.get.time"
      - set(metric.name, "vault.storage.operation.get.count") where metric.name == "vault_dynamodb_get_count"
      - set(metric.unit, "{operations}") where metric.name == "vault.storage.operation.get.count"
      - set(metric.description, "The amount of get operations executed against the storage backend.") where metric.name == "vault.storage.operation.get.count"
      - convert_summary_count_val_to_sum("cumulative",  true) where metric.name == "vault_etcd_get"
      - convert_summary_sum_val_to_sum("cumulative",  true) where metric.name == "vault_etcd_get"
      - set(attributes["storage"], "etcd") where metric.name == "vault_etcd_get_count"
      - set(attributes["storage"], "etcd") where metric.name == "vault_etcd_get_sum"
      - set(metric.name, "vault.storage.operation.get.time") where metric.name == "vault_etcd_get_sum"
      - set(metric.unit, "ms") where metric.name == "vault.storage.operation.get.time"
      - set(metric.description, "The duration of get operations executed against the storage backend.") where metric.name == "vault.storage.operation.get.time"
      - set(metric.name, "vault.storage.operation.get.count") where metric.name == "vault_etcd_get_count"
      - set(metric.unit, "{operations}") where metric.name == "vault.storage.operation.get.count"
      - set(metric.description, "The amount of get operations executed against the storage backend.") where metric.name == "vault.storage.operation.get.count"
      - convert_summary_count_val_to_sum("cumulative",  true) where metric.name == "vault_gcs_get"
      - convert_summary_sum_val_to_sum("cumulative",  true) where metric.name == "vault_gcs_get"
      - set(attributes["storage"], "gcs") where metric.name == "vault_gcs_get_count"
      - set(attributes["storage"], "gcs") where metric.name == "vault_gcs_get_sum"
      - set(metric.name, "vault.storage.operation.get.time") where metric.name == "vault_gcs_get_sum"
      - set(metric.unit, "ms") where metric.name == "vault.storage.operation.get.time"
      - set(metric.description, "The duration of get operations executed against the storage backend.") where metric.name == "vault.storage.operation.get.time"
      - set(metric.name, "vault.storage.operation.get.count") where metric.name == "vault_gcs_get_count"
      - set(metric.unit, "{operations}") where metric.name == "vault.storage.operation.get.count"
      - set(metric.description, "The amount of get operations executed against the storage backend.") where metric.name == "vault.storage.operation.get.count"
      - convert_summary_count_val_to_sum("cumulative",  true) where metric.name == "vault_mssql_get"
      - convert_summary_sum_val_to_sum("cumulative",  true) where metric.name == "vault_mssql_get"
      - set(attributes["storage"], "mssql") where metric.name == "vault_mssql_get_count"
      - set(attributes["storage"], "mssql") where metric.name == "vault_mssql_get_sum"
      - set(metric.name, "vault.storage.operation.get.time") where metric.name == "vault_mssql_get_sum"
      - set(metric.unit, "ms") where metric.name == "vault.storage.operation.get.time"
      - set(metric.description, "The duration of get operations executed against the storage backend.") where metric.name == "vault.storage.operation.get.time"
      - set(metric.name, "vault.storage.operation.get.count") where metric.name == "vault_mssql_get_count"
      - set(metric.unit, "{operations}") where metric.name == "vault.storage.operation.get.count"
      - set(metric.description, "The amount of get operations executed against the storage backend.") where metric.name == "vault.storage.operation.get.count"
      - convert_summary_count_val_to_sum("cumulative",  true) where metric.name == "vault_mysql_get"
      - convert_summary_sum_val_to_sum("cumulative",  true) where metric.name == "vault_mysql_get"
      - set(attributes["storage"], "mysql") where metric.name == "vault_mysql_get_count"
      - set(attributes["storage"], "mysql") where metric.name == "vault_mysql_get_sum"
      - set(metric.name, "vault.storage.operation.get.time") where metric.name == "vault_mysql_get_sum"
      - set(metric.unit, "ms") where metric.name == "vault.storage.operation.get.time"
      - set(metric.description, "The duration of get operations executed against the storage backend.") where metric.name == "vault.storage.operation.get.time"
      - set(metric.name, "vault.storage.operation.get.count") where metric.name == "vault_mysql_get_count"
      - set(metric.unit, "{operations}") where metric.name == "vault.storage.operation.get.count"
      - set(metric.description, "The amount of get operations executed against the storage backend.") where metric.name == "vault.storage.operation.get.count"
      - convert_summary_count_val_to_sum("cumulative",  true) where metric.name == "vault_postgres_get"
      - convert_summary_sum_val_to_sum("cumulative",  true) where metric.name == "vault_postgres_get"
      - set(attributes["storage"], "postgres") where metric.name == "vault_postgres_get_count"
      - set(attributes["storage"], "postgres") where metric.name == "vault_postgres_get_sum"
      - set(metric.name, "vault.storage.operation.get.time") where metric.name == "vault_postgres_get_sum"
      - set(metric.unit, "ms") where metric.name == "vault.storage.operation.get.time"
      - set(metric.description, "The duration of get operations executed against the storage backend.") where metric.name == "vault.storage.operation.get.time"
      - set(metric.name, "vault.storage.operation.get.count") where metric.name == "vault_postgres_get_count"
      - set(metric.unit, "{operations}") where metric.name == "vault.storage.operation.get.count"
      - set(metric.description, "The amount of get operations executed against the storage backend.") where metric.name == "vault.storage.operation.get.count"
      - convert_summary_count_val_to_sum("cumulative",  true) where metric.name == "vault_s3_get"
      - convert_summary_sum_val_to_sum("cumulative",  true) where metric.name == "vault_s3_get"
      - set(attributes["storage"], "s3") where metric.name == "vault_s3_get_count"
      - set(attributes["storage"], "s3") where metric.name == "vault_s3_get_sum"
      - set(metric.name, "vault.storage.operation.get.time") where metric.name == "vault_s3_get_sum"
      - set(metric.unit, "ms") where metric.name == "vault.storage.operation.get.time"
      - set(metric.description, "The duration of get operations executed against the storage backend.") where metric.name == "vault.storage.operation.get.time"
      - set(metric.name, "vault.storage.operation.get.count") where metric.name == "vault_s3_get_count"
      - set(metric.unit, "{operations}") where metric.name == "vault.storage.operation.get.count"
      - set(metric.description, "The amount of get operations executed against the storage backend.") where metric.name == "vault.storage.operation.get.count"
      - convert_summary_count_val_to_sum("cumulative",  true) where metric.name == "vault_spanner_get"
      - convert_summary_sum_val_to_sum("cumulative",  true) where metric.name == "vault_spanner_get"
      - set(attributes["storage"], "spanner") where metric.name == "vault_spanner_get_count"
      - set(attributes["storage"], "spanner") where metric.name == "vault_spanner_get_sum"
      - set(metric.name, "vault.storage.operation.get.time") where metric.name == "vault_spanner_get_sum"
      - set(metric.unit, "ms") where metric.name == "vault.storage.operation.get.time"
      - set(metric.description, "The duration of get operations executed against the storage backend.") where metric.name == "vault.storage.operation.get.time"
      - set(metric.name, "vault.storage.operation.get.count") where metric.name == "vault_spanner_get_count"
      - set(metric.unit, "{operations}") where metric.name == "vault.storage.operation.get.count"
      - set(metric.description, "The amount of get operations executed against the storage backend.") where metric.name == "vault.storage.operation.get.count"
      - convert_summary_count_val_to_sum("cumulative",  true) where metric.name == "vault_swift_get"
      - convert_summary_sum_val_to_sum("cumulative",  true) where metric.name == "vault_swift_get"
      - set(attributes["storage"], "swift") where metric.name == "vault_swift_get_count"
      - set(attributes["storage"], "swift") where metric.name == "vault_swift_get_sum"
      - set(metric.name, "vault.storage.operation.get.time") where metric.name == "vault_swift_get_sum"
      - set(metric.unit, "ms") where metric.name == "vault.storage.operation.get.time"
      - set(metric.description, "The duration of get operations executed against the storage backend.") where metric.name == "vault.storage.operation.get.time"
      - set(metric.name, "vault.storage.operation.get.count") where metric.name == "vault_swift_get_count"
      - set(metric.unit, "{operations}") where metric.name == "vault.storage.operation.get.count"
      - set(metric.description, "The amount of get operations executed against the storage backend.") where metric.name == "vault.storage.operation.get.count"
      - convert_summary_count_val_to_sum("cumulative",  true) where metric.name == "vault_zookeeper_get"
      - convert_summary_sum_val_to_sum("cumulative",  true) where metric.name == "vault_zookeeper_get"
      - set(attributes["storage"], "zookeeper") where metric.name == "vault_zookeeper_get_count"
      - set(attributes["storage"], "zookeeper") where metric.name == "vault_zookeeper_get_sum"
      - set(metric.name, "vault.storage.operation.get.time") where metric.name == "vault_zookeeper_get_sum"
      - set(metric.unit, "ms") where metric.name == "vault.storage.operation.get.time"
      - set(metric.description, "The duration of get operations executed against the storage backend.") where metric.name == "vault.storage.operation.get.time"
      - set(metric.name, "vault.storage.operation.get.count") where metric.name == "vault_zookeeper_get_count"
      - set(metric.unit, "{operations}") where metric.name == "vault.storage.operation.get.count"
      - set(metric.description, "The amount of get operations executed against the storage backend.") where metric.name == "vault.storage.operation.get.count"
      - convert_summary_count_val_to_sum("cumulative",  true) where metric.name == "vault_azure_list"
      - convert_summary_sum_val_to_sum("cumulative",  true) where metric.name == "vault_azure_list"
      - set(attributes["storage"], "azure") where metric.name == "vault_azure_list_count"
      - set(attributes["storage"], "azure") where metric.name == "vault_azure_list_sum"
      - set(metric.name, "vault.storage.operation.list.time") where metric.name == "vault_azure_list_sum"
      - set(metric.unit, "ms") where metric.name == "vault.storage.operation.list.time"
      - set(metric.description, "The duration of list operations executed against the storage backend.") where metric.name == "vault.storage.operation.list.time"
      - set(metric.name, "vault.storage.operation.list.count") where metric.name == "vault_azure_list_count"
      - set(metric.unit, "{operations}") where metric.name == "vault.storage.operation.list.count"
      - set(metric.description, "The amount of list operations executed against the storage backend.") where metric.name == "vault.storage.operation.list.count"
      - convert_summary_count_val_to_sum("cumulative",  true) where metric.name == "vault_cassandra_list"
      - convert_summary_sum_val_to_sum("cumulative",  true) where metric.name == "vault_cassandra_list"
      - set(attributes["storage"], "cassandra") where metric.name == "vault_cassandra_list_count"
      - set(attributes["storage"], "cassandra") where metric.name == "vault_cassandra_list_sum"
      - set(metric.name, "vault.storage.operation.list.time") where metric.name == "vault_cassandra_list_sum"
      - set(metric.unit, "ms") where metric.name == "vault.storage.operation.list.time"
      - set(metric.description, "The duration of list operations executed against the storage backend.") where metric.name == "vault.storage.operation.list.time"
      - set(metric.name, "vault.storage.operation.list.count") where metric.name == "vault_cassandra_list_count"
      - set(metric.unit, "{operations}") where metric.name == "vault.storage.operation.list.count"
      - set(metric.description, "The amount of list operations executed against the storage backend.") where metric.name == "vault.storage.operation.list.count"
      - convert_summary_count_val_to_sum("cumulative",  true) where metric.name == "vault_cockroachdb_list"
      - convert_summary_sum_val_to_sum("cumulative",  true) where metric.name == "vault_cockroachdb_list"
      - set(attributes["storage"], "cockroachdb") where metric.name == "vault_cockroachdb_list_count"
      - set(attributes["storage"], "cockroachdb") where metric.name == "vault_cockroachdb_list_sum"
      - set(metric.name, "vault.storage.operation.list.time") where metric.name == "vault_cockroachdb_list_sum"
      - set(metric.unit, "ms") where metric.name == "vault.storage.operation.list.time"
      - set(metric.description, "The duration of list operations executed against the storage backend.") where metric.name == "vault.storage.operation.list.time"
      - set(metric.name, "vault.storage.operation.list.count") where metric.name == "vault_cockroachdb_list_count"
      - set(metric.unit, "{operations}") where metric.name == "vault.storage.operation.list.count"
      - set(metric.description, "The amount of list operations executed against the storage backend.") where metric.name == "vault.storage.operation.list.count"
      - convert_summary_count_val_to_sum("cumulative",  true) where metric.name == "vault_consul_list"
      - convert_summary_sum_val_to_sum("cumulative",  true) where metric.name == "vault_consul_list"
      - set(attributes["storage"], "consul") where metric.name == "vault_consul_list_count"
      - set(attributes["storage"], "consul") where metric.name == "vault_consul_list_sum"
      - set(metric.name, "vault.storage.operation.list.time") where metric.name == "vault_consul_list_sum"
      - set(metric.unit, "ms") where metric.name == "vault.storage.operation.list.time"
      - set(metric.description, "The duration of list operations executed against the storage backend.") where metric.name == "vault.storage.operation.list.time"
      - set(metric.name, "vault.storage.operation.list.count") where metric.name == "vault_consul_list_count"
      - set(metric.unit, "{operations}") where metric.name == "vault.storage.operation.list.count"
      - set(metric.description, "The amount of list operations executed against the storage backend.") where metric.name == "vault.storage.operation.list.count"
      - convert_summary_count_val_to_sum("cumulative",  true) where metric.name == "vault_couchdb_list"
      - convert_summary_sum_val_to_sum("cumulative",  true) where metric.name == "vault_couchdb_list"
      - set(attributes["storage"], "couchdb") where metric.name == "vault_couchdb_list_count"
      - set(attributes["storage"], "couchdb") where metric.name == "vault_couchdb_list_sum"
      - set(metric.name, "vault.storage.operation.list.time") where metric.name == "vault_couchdb_list_sum"
      - set(metric.unit, "ms") where metric.name == "vault.storage.operation.list.time"
      - set(metric.description, "The duration of list operations executed against the storage backend.") where metric.name == "vault.storage.operation.list.time"
      - set(metric.name, "vault.storage.operation.list.count") where metric.name == "vault_couchdb_list_count"
      - set(metric.unit, "{operations}") where metric.name == "vault.storage.operation.list.count"
      - set(metric.description, "The amount of list operations executed against the storage backend.") where metric.name == "vault.storage.operation.list.count"
      - convert_summary_count_val_to_sum("cumulative",  true) where metric.name == "vault_dynamodb_list"
      - convert_summary_sum_val_to_sum("cumulative",  true) where metric.name == "vault_dynamodb_list"
      - set(attributes["storage"], "dynamodb") where metric.name == "vault_dynamodb_list_count"
      - set(attributes["storage"], "dynamodb") where metric.name == "vault_dynamodb_list_sum"
      - set(metric.name, "vault.storage.operation.list.time") where metric.name == "vault_dynamodb_list_sum"
      - set(metric.unit, "ms") where metric.name == "vault.storage.operation.list.time"
      - set(metric.description, "The duration of list operations executed against the storage backend.") where metric.name == "vault.storage.operation.list.time"
      - set(metric.name, "vault.storage.operation.list.count") where metric.name == "vault_dynamodb_list_count"
      - set(metric.unit, "{operations}") where metric.name == "vault.storage.operation.list.count"
      - set(metric.description, "The amount of list operations executed against the storage backend.") where metric.name == "vault.storage.operation.list.count"
      - convert_summary_count_val_to_sum("cumulative",  true) where metric.name == "vault_etcd_list"
      - convert_summary_sum_val_to_sum("cumulative",  true) where metric.name == "vault_etcd_list"
      - set(attributes["storage"], "etcd") where metric.name == "vault_etcd_list_count"
      - set(attributes["storage"], "etcd") where metric.name == "vault_etcd_list_sum"
      - set(metric.name, "vault.storage.operation.list.time") where metric.name == "vault_etcd_list_sum"
      - set(metric.unit, "ms") where metric.name == "vault.storage.operation.list.time"
      - set(metric.description, "The duration of list operations executed against the storage backend.") where metric.name == "vault.storage.operation.list.time"
      - set(metric.name, "vault.storage.operation.list.count") where metric.name == "vault_etcd_list_count"
      - set(metric.unit, "{operations}") where metric.name == "vault.storage.operation.list.count"
      - set(metric.description, "The amount of list operations executed against the storage backend.") where metric.name == "vault.storage.operation.list.count"
      - convert_summary_count_val_to_sum("cumulative",  true) where metric.name == "vault_gcs_list"
      - convert_summary_sum_val_to_sum("cumulative",  true) where metric.name == "vault_gcs_list"
      - set(attributes["storage"], "gcs") where metric.name == "vault_gcs_list_count"
      - set(attributes["storage"], "gcs") where metric.name == "vault_gcs_list_sum"
      - set(metric.name, "vault.storage.operation.list.time") where metric.name == "vault_gcs_list_sum"
      - set(metric.unit, "ms") where metric.name == "vault.storage.operation.list.time"
      - set(metric.description, "The duration of list operations executed against the storage backend.") where metric.name == "vault.storage.operation.list.time"
      - set(metric.name, "vault.storage.operation.list.count") where metric.name == "vault_gcs_list_count"
      - set(metric.unit, "{operations}") where metric.name == "vault.storage.operation.list.count"
      - set(metric.description, "The amount of list operations executed against the storage backend.") where metric.name == "vault.storage.operation.list.count"
      - convert_summary_count_val_to_sum("cumulative",  true) where metric.name == "vault_mssql_list"
      - convert_summary_sum_val_to_sum("cumulative",  true) where metric.name == "vault_mssql_list"
      - set(attributes["storage"], "mssql") where metric.name == "vault_mssql_list_count"
      - set(attributes["storage"], "mssql") where metric.name == "vault_mssql_list_sum"
      - set(metric.name, "vault.storage.operation.list.time") where metric.name == "vault_mssql_list_sum"
      - set(metric.unit, "ms") where metric.name == "vault.storage.operation.list.time"
      - set(metric.description, "The duration of list operations executed against the storage backend.") where metric.name == "vault.storage.operation.list.time"
      - set(metric.name, "vault.storage.operation.list.count") where metric.name == "vault_mssql_list_count"
      - set(metric.unit, "{operations}") where metric.name == "vault.storage.operation.list.count"
      - set(metric.description, "The amount of list operations executed against the storage backend.") where metric.name == "vault.storage.operation.list.count"
      - convert_summary_count_val_to_sum("cumulative",  true) where metric.name == "vault_mysql_list"
      - convert_summary_sum_val_to_sum("cumulative",  true) where metric.name == "vault_mysql_list"
      - set(attributes["storage"], "mysql") where metric.name == "vault_mysql_list_count"
      - set(attributes["storage"], "mysql") where metric.name == "vault_mysql_list_sum"
      - set(metric.name, "vault.storage.operation.list.time") where metric.name == "vault_mysql_list_sum"
      - set(metric.unit, "ms") where metric.name == "vault.storage.operation.list.time"
      - set(metric.description, "The duration of list operations executed against the storage backend.") where metric.name == "vault.storage.operation.list.time"
      - set(metric.name, "vault.storage.operation.list.count") where metric.name == "vault_mysql_list_count"
      - set(metric.unit, "{operations}") where metric.name == "vault.storage.operation.list.count"
      - set(metric.description, "The amount of list operations executed against the storage backend.") where metric.name == "vault.storage.operation.list.count"
      - convert_summary_count_val_to_sum("cumulative",  true) where metric.name == "vault_postgres_list"
      - convert_summary_sum_val_to_sum("cumulative",  true) where metric.name == "vault_postgres_list"
      - set(attributes["storage"], "postgres") where metric.name == "vault_postgres_list_count"
      - set(attributes["storage"], "postgres") where metric.name == "vault_postgres_list_sum"
      - set(metric.name, "vault.storage.operation.list.time") where metric.name == "vault_postgres_list_sum"
      - set(metric.unit, "ms") where metric.name == "vault.storage.operation.list.time"
      - set(metric.description, "The duration of list operations executed against the storage backend.") where metric.name == "vault.storage.operation.list.time"
      - set(metric.name, "vault.storage.operation.list.count") where metric.name == "vault_postgres_list_count"
      - set(metric.unit, "{operations}") where metric.name == "vault.storage.operation.list.count"
      - set(metric.description, "The amount of list operations executed against the storage backend.") where metric.name == "vault.storage.operation.list.count"
      - convert_summary_count_val_to_sum("cumulative",  true) where metric.name == "vault_s3_list"
      - convert_summary_sum_val_to_sum("cumulative",  true) where metric.name == "vault_s3_list"
      - set(attributes["storage"], "s3") where metric.name == "vault_s3_list_count"
      - set(attributes["storage"], "s3") where metric.name == "vault_s3_list_sum"
      - set(metric.name, "vault.storage.operation.list.time") where metric.name == "vault_s3_list_sum"
      - set(metric.unit, "ms") where metric.name == "vault.storage.operation.list.time"
      - set(metric.description, "The duration of list operations executed against the storage backend.") where metric.name == "vault.storage.operation.list.time"
      - set(metric.name, "vault.storage.operation.list.count") where metric.name == "vault_s3_list_count"
      - set(metric.unit, "{operations}") where metric.name == "vault.storage.operation.list.count"
      - set(metric.description, "The amount of list operations executed against the storage backend.") where metric.name == "vault.storage.operation.list.count"
      - convert_summary_count_val_to_sum("cumulative",  true) where metric.name == "vault_spanner_list"
      - convert_summary_sum_val_to_sum("cumulative",  true) where metric.name == "vault_spanner_list"
      - set(attributes["storage"], "spanner") where metric.name == "vault_spanner_list_count"
      - set(attributes["storage"], "spanner") where metric.name == "vault_spanner_list_sum"
      - set(metric.name, "vault.storage.operation.list.time") where metric.name == "vault_spanner_list_sum"
      - set(metric.unit, "ms") where metric.name == "vault.storage.operation.list.time"
      - set(metric.description, "The duration of list operations executed against the storage backend.") where metric.name == "vault.storage.operation.list.time"
      - set(metric.name, "vault.storage.operation.list.count") where metric.name == "vault_spanner_list_count"
      - set(metric.unit, "{operations}") where metric.name == "vault.storage.operation.list.count"
      - set(metric.description, "The amount of list operations executed against the storage backend.") where metric.name == "vault.storage.operation.list.count"
      - convert_summary_count_val_to_sum("cumulative",  true) where metric.name == "vault_swift_list"
      - convert_summary_sum_val_to_sum("cumulative",  true) where metric.name == "vault_swift_list"
      - set(attributes["storage"], "swift") where metric.name == "vault_swift_list_count"
      - set(attributes["storage"], "swift") where metric.name == "vault_swift_list_sum"
      - set(metric.name, "vault.storage.operation.list.time") where metric.name == "vault_swift_list_sum"
      - set(metric.unit, "ms") where metric.name == "vault.storage.operation.list.time"
      - set(metric.description, "The duration of list operations executed against the storage backend.") where metric.name == "vault.storage.operation.list.time"
      - set(metric.name, "vault.storage.operation.list.count") where metric.name == "vault_swift_list_count"
      - set(metric.unit, "{operations}") where metric.name == "vault.storage.operation.list.count"
      - set(metric.description, "The amount of list operations executed against the storage backend.") where metric.name == "vault.storage.operation.list.count"
      - convert_summary_count_val_to_sum("cumulative",  true) where metric.name == "vault_zookeeper_list"
      - convert_summary_sum_val_to_sum("cumulative",  true) where metric.name == "vault_zookeeper_list"
      - set(attributes["storage"], "zookeeper") where metric.name == "vault_zookeeper_list_count"
      - set(attributes["storage"], "zookeeper") where metric.name == "vault_zookeeper_list_sum"
      - set(metric.name, "vault.storage.operation.list.time") where metric.name == "vault_zookeeper_list_sum"
      - set(metric.unit, "ms") where metric.name == "vault.storage.operation.list.time"
      - set(metric.description, "The duration of list operations executed against the storage backend.") where metric.name == "vault.storage.operation.list.time"
      - set(metric.name, "vault.storage.operation.list.count") where metric.name == "vault_zookeeper_list_count"
      - set(metric.unit, "{operations}") where metric.name == "vault.storage.operation.list.count"
      - set(metric.description, "The amount of list operations executed against the storage backend.") where metric.name == "vault.storage.operation.list.count"
      - convert_summary_count_val_to_sum("cumulative",  true) where metric.name == "vault_azure_put"
      - convert_summary_sum_val_to_sum("cumulative",  true) where metric.name == "vault_azure_put"
      - set(attributes["storage"], "azure") where metric.name == "vault_azure_put_count"
      - set(attributes["storage"], "azure") where metric.name == "vault_azure_put_sum"
      - set(metric.name, "vault.storage.operation.put.time") where metric.name == "vault_azure_put_sum"
      - set(metric.unit, "ms") where metric.name == "vault.storage.operation.put.time"
      - set(metric.description, "The duration of put operations executed against the storage backend.") where metric.name == "vault.storage.operation.put.time"
      - set(metric.name, "vault.storage.operation.put.count") where metric.name == "vault_azure_put_count"
      - set(metric.unit, "{operations}") where metric.name == "vault.storage.operation.put.count"
      - set(metric.description, "The amount of put operations executed against the storage backend.") where metric.name == "vault.storage.operation.put.count"
      - convert_summary_count_val_to_sum("cumulative",  true) where metric.name == "vault_cassandra_put"
      - convert_summary_sum_val_to_sum("cumulative",  true) where metric.name == "vault_cassandra_put"
      - set(attributes["storage"], "cassandra") where metric.name == "vault_cassandra_put_count"
      - set(attributes["storage"], "cassandra") where metric.name == "vault_cassandra_put_sum"
      - set(metric.name, "vault.storage.operation.put.time") where metric.name == "vault_cassandra_put_sum"
      - set(metric.unit, "ms") where metric.name == "vault.storage.operation.put.time"
      - set(metric.description, "The duration of put operations executed against the storage backend.") where metric.name == "vault.storage.operation.put.time"
      - set(metric.name, "vault.storage.operation.put.count") where metric.name == "vault_cassandra_put_count"
      - set(metric.unit, "{operations}") where metric.name == "vault.storage.operation.put.count"
      - set(metric.description, "The amount of put operations executed against the storage backend.") where metric.name == "vault.storage.operation.put.count"
      - convert_summary_count_val_to_sum("cumulative",  true) where metric.name == "vault_cockroachdb_put"
      - convert_summary_sum_val_to_sum("cumulative",  true) where metric.name == "vault_cockroachdb_put"
      - set(attributes["storage"], "cockroachdb") where metric.name == "vault_cockroachdb_put_count"
      - set(attributes["storage"], "cockroachdb") where metric.name == "vault_cockroachdb_put_sum"
      - set(metric.name, "vault.storage.operation.put.time") where metric.name == "vault_cockroachdb_put_sum"
      - set(metric.unit, "ms") where metric.name == "vault.storage.operation.put.time"
      - set(metric.description, "The duration of put operations executed against the storage backend.") where metric.name == "vault.storage.operation.put.time"
      - set(metric.name, "vault.storage.operation.put.count") where metric.name == "vault_cockroachdb_put_count"
      - set(metric.unit, "{operations}") where metric.name == "vault.storage.operation.put.count"
      - set(metric.description, "The amount of put operations executed against the storage backend.") where metric.name == "vault.storage.operation.put.count"
      - convert_summary_count_val_to_sum("cumulative",  true) where metric.name == "vault_consul_put"
      - convert_summary_sum_val_to_sum("cumulative",  true) where metric.name == "vault_consul_put"
      - set(attributes["storage"], "consul") where metric.name == "vault_consul_put_count"
      - set(attributes["storage"], "consul") where metric.name == "vault_consul_put_sum"
      - set(metric.name, "vault.storage.operation.put.time") where metric.name == "vault_consul_put_sum"
      - set(metric.unit, "ms") where metric.name == "vault.storage.operation.put.time"
      - set(metric.description, "The duration of put operations executed against the storage backend.") where metric.name == "vault.storage.operation.put.time"
      - set(metric.name, "vault.storage.operation.put.count") where metric.name == "vault_consul_put_count"
      - set(metric.unit, "{operations}") where metric.name == "vault.storage.operation.put.count"
      - set(metric.description, "The amount of put operations executed against the storage backend.") where metric.name == "vault.storage.operation.put.count"
      - convert_summary_count_val_to_sum("cumulative",  true) where metric.name == "vault_couchdb_put"
      - convert_summary_sum_val_to_sum("cumulative",  true) where metric.name == "vault_couchdb_put"
      - set(attributes["storage"], "couchdb") where metric.name == "vault_couchdb_put_count"
      - set(attributes["storage"], "couchdb") where metric.name == "vault_couchdb_put_sum"
      - set(metric.name, "vault.storage.operation.put.time") where metric.name == "vault_couchdb_put_sum"
      - set(metric.unit, "ms") where metric.name == "vault.storage.operation.put.time"
      - set(metric.description, "The duration of put operations executed against the storage backend.") where metric.name == "vault.storage.operation.put.time"
      - set(metric.name, "vault.storage.operation.put.count") where metric.name == "vault_couchdb_put_count"
      - set(metric.unit, "{operations}") where metric.name == "vault.storage.operation.put.count"
      - set(metric.description, "The amount of put operations executed against the storage backend.") where metric.name == "vault.storage.operation.put.count"
      - convert_summary_count_val_to_sum("cumulative",  true) where metric.name == "vault_dynamodb_put"
      - convert_summary_sum_val_to_sum("cumulative",  true) where metric.name == "vault_dynamodb_put"
      - set(attributes["storage"], "dynamodb") where metric.name == "vault_dynamodb_put_count"
      - set(attributes["storage"], "dynamodb") where metric.name == "vault_dynamodb_put_sum"
      - set(metric.name, "vault.storage.operation.put.time") where metric.name == "vault_dynamodb_put_sum"
      - set(metric.unit, "ms") where metric.name == "vault.storage.operation.put.time"
      - set(metric.description, "The duration of put operations executed against the storage backend.") where metric.name == "vault.storage.operation.put.time"
      - set(metric.name, "vault.storage.operation.put.count") where metric.name == "vault_dynamodb_put_count"
      - set(metric.unit, "{operations}") where metric.name == "vault.storage.operation.put.count"
      - set(metric.description, "The amount of put operations executed against the storage backend.") where metric.name == "vault.storage.operation.put.count"
      - convert_summary_count_val_to_sum("cumulative",  true) where metric.name == "vault_etcd_put"
      - convert_summary_sum_val_to_sum("cumulative",  true) where metric.name == "vault_etcd_put"
      - set(attributes["storage"], "etcd") where metric.name == "vault_etcd_put_count"
      - set(attributes["storage"], "etcd") where metric.name == "vault_etcd_put_sum"
      - set(metric.name, "vault.storage.operation.put.time") where metric.name == "vault_etcd_put_sum"
      - set(metric.unit, "ms") where metric.name == "vault.storage.operation.put.time"
      - set(metric.description, "The duration of put operations executed against the storage backend.") where metric.name == "vault.storage.operation.put.time"
      - set(metric.name, "vault.storage.operation.put.count") where metric.name == "vault_etcd_put_count"
      - set(metric.unit, "{operations}") where metric.name == "vault.storage.operation.put.count"
      - set(metric.description, "The amount of put operations executed against the storage backend.") where metric.name == "vault.storage.operation.put.count"
      - convert_summary_count_val_to_sum("cumulative",  true) where metric.name == "vault_gcs_put"
      - convert_summary_sum_val_to_sum("cumulative",  true) where metric.name == "vault_gcs_put"
      - set(attributes["storage"], "gcs") where metric.name == "vault_gcs_put_count"
      - set(attributes["storage"], "gcs") where metric.name == "vault_gcs_put_sum"
      - set(metric.name, "vault.storage.operation.put.time") where metric.name == "vault_gcs_put_sum"
      - set(metric.unit, "ms") where metric.name == "vault.storage.operation.put.time"
      - set(metric.description, "The duration of put operations executed against the storage backend.") where metric.name == "vault.storage.operation.put.time"
      - set(metric.name, "vault.storage.operation.put.count") where metric.name == "vault_gcs_put_count"
      - set(metric.unit, "{operations}") where metric.name == "vault.storage.operation.put.count"
      - set(metric.description, "The amount of put operations executed against the storage backend.") where metric.name == "vault.storage.operation.put.count"
      - convert_summary_count_val_to_sum("cumulative",  true) where metric.name == "vault_mssql_put"
      - convert_summary_sum_val_to_sum("cumulative",  true) where metric.name == "vault_mssql_put"
      - set(attributes["storage"], "mssql") where metric.name == "vault_mssql_put_count"
      - set(attributes["storage"], "mssql") where metric.name == "vault_mssql_put_sum"
      - set(metric.name, "vault.storage.operation.put.time") where metric.name == "vault_mssql_put_sum"
      - set(metric.unit, "ms") where metric.name == "vault.storage.operation.put.time"
      - set(metric.description, "The duration of put operations executed against the storage backend.") where metric.name == "vault.storage.operation.put.time"
      - set(metric.name, "vault.storage.operation.put.count") where metric.name == "vault_mssql_put_count"
      - set(metric.unit, "{operations}") where metric.name == "vault.storage.operation.put.count"
      - set(metric.description, "The amount of put operations executed against the storage backend.") where metric.name == "vault.storage.operation.put.count"
      - convert_summary_count_val_to_sum("cumulative",  true) where metric.name == "vault_mysql_put"
      - convert_summary_sum_val_to_sum("cumulative",  true) where metric.name == "vault_mysql_put"
      - set(attributes["storage"], "mysql") where metric.name == "vault_mysql_put_count"
      - set(attributes["storage"], "mysql") where metric.name == "vault_mysql_put_sum"
      - set(metric.name, "vault.storage.operation.put.time") where metric.name == "vault_mysql_put_sum"
      - set(metric.unit, "ms") where metric.name == "vault.storage.operation.put.time"
      - set(metric.description, "The duration of put operations executed against the storage backend.") where metric.name == "vault.storage.operation.put.time"
      - set(metric.name, "vault.storage.operation.put.count") where metric.name == "vault_mysql_put_count"
      - set(metric.unit, "{operations}") where metric.name == "vault.storage.operation.put.count"
      - set(metric.description, "The amount of put operations executed against the storage backend.") where metric.name == "vault.storage.operation.put.count"
      - convert_summary_count_val_to_sum("cumulative",  true) where metric.name == "vault_postgres_put"
      - convert_summary_sum_val_to_sum("cumulative",  true) where metric.name == "vault_postgres_put"
      - set(attributes["storage"], "postgres") where metric.name == "vault_postgres_put_count"
      - set(attributes["storage"], "postgres") where metric.name == "vault_postgres_put_sum"
      - set(metric.name, "vault.storage.operation.put.time") where metric.name == "vault_postgres_put_sum"
      - set(metric.unit, "ms") where metric.name == "vault.storage.operation.put.time"
      - set(metric.description, "The duration of put operations executed against the storage backend.") where metric.name == "vault.storage.operation.put.time"
      - set(metric.name, "vault.storage.operation.put.count") where metric.name == "vault_postgres_put_count"
      - set(metric.unit, "{operations}") where metric.name == "vault.storage.operation.put.count"
      - set(metric.description, "The amount of put operations executed against the storage backend.") where metric.name == "vault.storage.operation.put.count"
      - convert_summary_count_val_to_sum("cumulative",  true) where metric.name == "vault_s3_put"
      - convert_summary_sum_val_to_sum("cumulative",  true) where metric.name == "vault_s3_put"
      - set(attributes["storage"], "s3") where metric.name == "vault_s3_put_count"
      - set(attributes["storage"], "s3") where metric.name == "vault_s3_put_sum"
      - set(metric.name, "vault.storage.operation.put.time") where metric.name == "vault_s3_put_sum"
      - set(metric.unit, "ms") where metric.name == "vault.storage.operation.put.time"
      - set(metric.description, "The duration of put operations executed against the storage backend.") where metric.name == "vault.storage.operation.put.time"
      - set(metric.name, "vault.storage.operation.put.count") where metric.name == "vault_s3_put_count"
      - set(metric.unit, "{operations}") where metric.name == "vault.storage.operation.put.count"
      - set(metric.description, "The amount of put operations executed against the storage backend.") where metric.name == "vault.storage.operation.put.count"
      - convert_summary_count_val_to_sum("cumulative",  true) where metric.name == "vault_spanner_put"
      - convert_summary_sum_val_to_sum("cumulative",  true) where metric.name == "vault_spanner_put"
      - set(attributes["storage"], "spanner") where metric.name == "vault_spanner_put_count"
      - set(attributes["storage"], "spanner") where metric.name == "vault_spanner_put_sum"
      - set(metric.name, "vault.storage.operation.put.time") where metric.name == "vault_spanner_put_sum"
      - set(metric.unit, "ms") where metric.name == "vault.storage.operation.put.time"
      - set(metric.description, "The duration of put operations executed against the storage backend.") where metric.name == "vault.storage.operation.put.time"
      - set(metric.name, "vault.storage.operation.put.count") where metric.name == "vault_spanner_put_count"
      - set(metric.unit, "{operations}") where metric.name == "vault.storage.operation.put.count"
      - set(metric.description, "The amount of put operations executed against the storage backend.") where metric.name == "vault.storage.operation.put.count"
      - convert_summary_count_val_to_sum("cumulative",  true) where metric.name == "vault_swift_put"
      - convert_summary_sum_val_to_sum("cumulative",  true) where metric.name == "vault_swift_put"
      - set(attributes["storage"], "swift") where metric.name == "vault_swift_put_count"
      - set(attributes["storage"], "swift") where metric.name == "vault_swift_put_sum"
      - set(metric.name, "vault.storage.operation.put.time") where metric.name == "vault_swift_put_sum"
      - set(metric.unit, "ms") where metric.name == "vault.storage.operation.put.time"
      - set(metric.description, "The duration of put operations executed against the storage backend.") where metric.name == "vault.storage.operation.put.time"
      - set(metric.name, "vault.storage.operation.put.count") where metric.name == "vault_swift_put_count"
      - set(metric.unit, "{operations}") where metric.name == "vault.storage.operation.put.count"
      - set(metric.description, "The amount of put operations executed against the storage backend.") where metric.name == "vault.storage.operation.put.count"
      - convert_summary_count_val_to_sum("cumulative",  true) where metric.name == "vault_zookeeper_put"
      - convert_summary_sum_val_to_sum("cumulative",  true) where metric.name == "vault_zookeeper_put"
      - set(attributes["storage"], "zookeeper") where metric.name == "vault_zookeeper_put_count"
      - set(attributes["storage"], "zookeeper") where metric.name == "vault_zookeeper_put_sum"
      - set(metric.name, "vault.storage.operation.put.time") where metric.name == "vault_zookeeper_put_sum"
      - set(metric.unit, "ms") where metric.name == "vault.storage.operation.put.time"
      - set(metric.description, "The duration of put operations executed against the storage backend.") where metric.name == "vault.storage.operation.put.time"
      - set(metric.name, "vault.storage.operation.put.count") where metric.name == "vault_zookeeper_put_count"
      - set(metric.unit, "{operations}") where metric.name == "vault.storage.operation.put.count"
      - set(metric.description, "The amount of put operations executed against the storage backend.") where metric.name == "vault.storage.operation.put.count"
      - convert_summary_sum_val_to_sum("cumulative",  true) where metric.name == "vault_expire_revoke"
      - set(metric.name, "vault.token.revoke.time") where metric.name == "vault_expire_revoke_sum"
      - set(metric.unit, "vault.token.revoke.time") where metric.name == "vault.token.revoke.time"
      - set(metric.description, "The average time taken to revoke a token.") where metric.name == "vault.token.revoke.time"
      - convert_summary_sum_val_to_sum("cumulative",  true) where metric.name == "vault_expire_renew"
      - set(metric.name, "vault.token.renew.time") where metric.name == "vault_expire_renew_sum"
      - set(metric.unit, "vault.token.renew.time") where metric.name == "vault.token.renew.time"
      - set(metric.description, "The average time taken to renew a token.") where metric.name == "vault.token.renew.time"
      - convert_summary_sum_val_to_sum("cumulative",  false) where metric.name == "vault_core_leadership_lost"
      - set(metric.name, "vault.core.leader.duration") where metric.name == "vault_core_leadership_lost_sum"
      - set(metric.unit, "vault.core.leader.duration") where metric.name == "vault.core.leader.duration"
      - set(metric.description, "The amount of time a core was the leader in high availability mode.") where metric.name == "vault.core.leader.duration"
      - set(metric.name, "vault.core.request.count") where metric.name == "vault_core_in_flight_requests"
      - set(metric.description, "The number of requests handled by the Vault core.") where metric.name == "vault.core.request.count"
      - set(metric.unit, "{requests}") where metric.name == "vault.core.request.count"
      - set(metric.name, "vault.token.lease.count") where metric.name == "vault_expire_num_leases"
      - set(metric.description, "The number of tokens that are leased for eventual expiration.") where metric.name == "vault.token.lease.count"
      - set(metric.unit, "{tokens}") where metric.name == "vault.token.lease.count"
      - set(metric.name, "vault.audit.request.failed") where metric.name == "vault_audit_log_request_failure"
      - set(metric.description, "The number of audit log requests that have failed.") where metric.name == "vault.audit.request.failed"
      - set(metric.unit, "{requests}") where metric.name == "vault.audit.request.failed"
      - set(metric.name, "vault.audit.response.failed") where metric.name == "vault_audit_log_response_failure"
      - set(metric.description, "The number of audit log responses that have failed.") where metric.name == "vault.audit.response.failed"
      - set(metric.unit, "{responses}") where metric.name == "vault.audit.response.failed"
      - set(metric.name, "vault.memory.usage") where metric.name == "vault_runtime_sys_bytes"
      - set(metric.description, "The amount of memory used by Vault.") where metric.name == "vault.memory.usage"
      - set(metric.unit, "bytes") where metric.name == "vault.memory.usage"
      - set(metric.name, "vault.token.count") where metric.name == "vault_token_count"
      - set(metric.description, "The number of tokens created.") where metric.name == "vault.token.count"
      - set(metric.unit, "{tokens}") where metric.name == "vault.token.count"
receivers:
  hostmetrics/hostmetrics:
    collection_interval: 60s
    scrapers:
      cpu: {}
      disk: {}
      filesystem: {}
      load: {}
      memory: {}
      network: {}
      paging: {}
      process:
        mute_process_exe_error: true
        mute_process_name_error: true
      processes: {}
  nvml/hostmetrics_1:
    collection_interval: 60s
  prometheus/fluentbit:
    config:
      scrape_configs:
      - job_name: logging-collector
        metrics_path: /metrics
        scrape_interval: 1m
        static_configs:
        - targets:
          - 0.0.0.0:20202
  prometheus/otel:
    config:
      scrape_configs:
      - job_name: otel-collector
        scrape_interval: 1m
        static_configs:
        - targets:
          - 0.0.0.0:20201
  prometheus/vault:
    config:
      scrape_configs:
      - job_name: vault
        metrics_path: /v1/sys/metrics
        scheme: https
        scrape_interval: 30s
        static_configs:
        - targets:
          - localhost:8200
        tls_config: {}
service:
  pipelines:
    metrics/default__pipeline_hostmetrics:
      exporters:
      - googlecloud
      processors:
      - agentmetrics/hostmetrics_0
      - filter/hostmetrics_1
      - metricstransform/hostmetrics_2
      - filter/default__pipeline_hostmetrics_0
      - resourcedetection/_global_0
      receivers:
      - hostmetrics/hostmetrics
    metrics/default__pipeline_hostmetrics_1:
      exporters:
      - googlecloud
      processors:
      - metricstransform/hostmetrics_1_0
      - filter/default__pipeline_hostmetrics_1_0
      - resourcedetection/_global_0
      receivers:
      - nvml/hostmetrics_1
    metrics/fluentbit:
      exporters:
      - googlecloud
      processors:
      - filter/fluentbit_0
      - metricstransform/fluentbit_1
      - resourcedetection/_global_0
      receivers:
      - prometheus/fluentbit
    metrics/otel:
      exporters:
      - googlecloud
      processors:
      - filter/otel_0
      - transform/otel_1
      - filter/otel_2
      - metricstransform/otel_3
      - resourcedetection/_global_0
      receivers:
      - prometheus/otel
    metrics/vault_vault:
      exporters:
      - googlecloud/otel
      processors:
      - transform/vault_0
      - filter/vault_1
      - metricstransform/vault_2
      - normalizesums/vault_3
      - metricstransform/vault_4
      - modifyscope/vault_5
      - resourcedetection/_global_0
      receivers:
      - prometheus/vault
  telemetry:
    metrics:
      address: 0.0.0.0:20201
