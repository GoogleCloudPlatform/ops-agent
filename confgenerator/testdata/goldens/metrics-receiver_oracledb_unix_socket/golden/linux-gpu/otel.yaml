exporters:
  googlecloud:
    metric:
      instrumentation_library_labels: false
      prefix: ""
      resource_filters: []
      service_resource_labels: false
      skip_create_descriptor: true
    user_agent: Google-Cloud-Ops-Agent-Metrics/latest (BuildDistro=build_distro;Platform=linux;ShortName=linux_platform;ShortVersion=linux_platform_version)
  googlecloud/otel:
    metric:
      instrumentation_library_labels: true
      prefix: ""
      resource_filters: []
      service_resource_labels: false
      skip_create_descriptor: true
    user_agent: Google-Cloud-Ops-Agent-Metrics/latest (BuildDistro=build_distro;Platform=linux;ShortName=linux_platform;ShortVersion=linux_platform_version)
processors:
  agentmetrics/hostmetrics_0:
    blank_label_metrics:
    - system.cpu.utilization
  filter/default__pipeline_hostmetrics_0:
    metrics:
      exclude:
        match_type: regexp
        metric_names: []
  filter/default__pipeline_hostmetrics_1_0:
    metrics:
      exclude:
        match_type: regexp
        metric_names: []
  filter/fluentbit_0:
    metrics:
      include:
        match_type: strict
        metric_names:
        - fluentbit_uptime
        - fluentbit_stackdriver_requests_total
        - fluentbit_stackdriver_proc_records_total
        - fluentbit_stackdriver_retried_records_total
  filter/hostmetrics_1:
    metrics:
      exclude:
        match_type: strict
        metric_names:
        - system.cpu.time
        - system.network.dropped
        - system.filesystem.inodes.usage
        - system.paging.faults
        - system.disk.operation_time
  filter/otel_0:
    metrics:
      include:
        match_type: strict
        metric_names:
        - otelcol_process_uptime
        - otelcol_process_memory_rss
        - grpc_client_attempt_duration
        - googlecloudmonitoring_point_count
  filter/otel_2:
    metrics:
      include:
        match_type: strict
        metric_names:
        - otelcol_process_uptime
        - otelcol_process_memory_rss
        - grpc_client_attempt_duration_count
        - googlecloudmonitoring_point_count
  metricstransform/fluentbit_1:
    transforms:
    - action: update
      include: fluentbit_uptime
      new_name: agent/uptime
      operations:
      - action: toggle_scalar_data_type
      - action: add_label
        new_label: version
        new_value: google-cloud-ops-agent-logging/latest-build_distro
      - action: aggregate_labels
        aggregation_type: sum
        label_set:
        - version
    - action: update
      include: fluentbit_stackdriver_requests_total
      new_name: agent/request_count
      operations:
      - action: toggle_scalar_data_type
      - action: update_label
        label: status
        new_label: response_code
      - action: aggregate_labels
        aggregation_type: sum
        label_set:
        - response_code
    - action: update
      include: fluentbit_stackdriver_proc_records_total
      new_name: agent/log_entry_count
      operations:
      - action: toggle_scalar_data_type
      - action: update_label
        label: status
        new_label: response_code
      - action: aggregate_labels
        aggregation_type: sum
        label_set:
        - response_code
    - action: update
      include: fluentbit_stackdriver_retried_records_total
      new_name: agent/log_entry_retry_count
      operations:
      - action: toggle_scalar_data_type
      - action: update_label
        label: status
        new_label: response_code
      - action: aggregate_labels
        aggregation_type: sum
        label_set:
        - response_code
    - action: update
      include: ^(.*)$$
      match_type: regexp
      new_name: agent.googleapis.com/$${1}
  metricstransform/hostmetrics_1_0:
    transforms:
    - action: update
      include: nvml.gpu.utilization
      new_name: gpu/utilization
      operations:
      - action: experimental_scale_value
        experimental_scale: 100.0
    - action: update
      include: nvml.gpu.memory.bytes_used
      new_name: gpu/memory/bytes_used
    - action: update
      include: nvml.gpu.processes.utilization
      new_name: gpu/processes/utilization
      operations:
      - action: experimental_scale_value
        experimental_scale: 100.0
    - action: update
      include: nvml.gpu.processes.max_bytes_used
      new_name: gpu/processes/max_bytes_used
    - action: update
      include: ^(.*)$$
      match_type: regexp
      new_name: agent.googleapis.com/$${1}
  metricstransform/hostmetrics_2:
    transforms:
    - action: update
      include: system.cpu.time
      new_name: cpu/usage_time
      operations:
      - action: toggle_scalar_data_type
      - action: update_label
        label: cpu
        new_label: cpu_number
      - action: update_label
        label: state
        new_label: cpu_state
    - action: update
      include: system.cpu.utilization
      new_name: cpu/utilization
      operations:
      - action: aggregate_labels
        aggregation_type: mean
        label_set:
        - state
        - blank
      - action: update_label
        label: blank
        new_label: cpu_number
      - action: update_label
        label: state
        new_label: cpu_state
    - action: update
      include: system.cpu.load_average.1m
      new_name: cpu/load_1m
    - action: update
      include: system.cpu.load_average.5m
      new_name: cpu/load_5m
    - action: update
      include: system.cpu.load_average.15m
      new_name: cpu/load_15m
    - action: update
      include: system.disk.read_io
      new_name: disk/read_bytes_count
    - action: update
      include: system.disk.write_io
      new_name: disk/write_bytes_count
    - action: update
      include: system.disk.operations
      new_name: disk/operation_count
    - action: update
      include: system.disk.io_time
      new_name: disk/io_time
      operations:
      - action: experimental_scale_value
        experimental_scale: 1000.0
      - action: toggle_scalar_data_type
    - action: update
      include: system.disk.weighted_io_time
      new_name: disk/weighted_io_time
      operations:
      - action: experimental_scale_value
        experimental_scale: 1000.0
      - action: toggle_scalar_data_type
    - action: update
      include: system.disk.average_operation_time
      new_name: disk/operation_time
      operations:
      - action: experimental_scale_value
        experimental_scale: 1000.0
      - action: toggle_scalar_data_type
    - action: update
      include: system.disk.pending_operations
      new_name: disk/pending_operations
      operations:
      - action: toggle_scalar_data_type
    - action: update
      include: system.disk.merged
      new_name: disk/merged_operations
    - action: update
      include: system.filesystem.usage
      new_name: disk/bytes_used
      operations:
      - action: toggle_scalar_data_type
      - action: aggregate_labels
        aggregation_type: max
        label_set:
        - device
        - state
    - action: update
      include: system.filesystem.utilization
      new_name: disk/percent_used
      operations:
      - action: aggregate_labels
        aggregation_type: max
        label_set:
        - device
        - state
    - action: update
      include: system.memory.usage
      new_name: memory/bytes_used
      operations:
      - action: toggle_scalar_data_type
      - action: aggregate_label_values
        aggregated_values:
        - slab_reclaimable
        - slab_unreclaimable
        aggregation_type: sum
        label: state
        new_value: slab
    - action: update
      include: system.memory.utilization
      new_name: memory/percent_used
      operations:
      - action: aggregate_label_values
        aggregated_values:
        - slab_reclaimable
        - slab_unreclaimable
        aggregation_type: sum
        label: state
        new_value: slab
    - action: update
      include: system.network.io
      new_name: interface/traffic
      operations:
      - action: update_label
        label: interface
        new_label: device
      - action: update_label
        label: direction
        value_actions:
        - new_value: rx
          value: receive
        - new_value: tx
          value: transmit
    - action: update
      include: system.network.errors
      new_name: interface/errors
      operations:
      - action: update_label
        label: interface
        new_label: device
      - action: update_label
        label: direction
        value_actions:
        - new_value: rx
          value: receive
        - new_value: tx
          value: transmit
    - action: update
      include: system.network.packets
      new_name: interface/packets
      operations:
      - action: update_label
        label: interface
        new_label: device
      - action: update_label
        label: direction
        value_actions:
        - new_value: rx
          value: receive
        - new_value: tx
          value: transmit
    - action: update
      include: system.network.connections
      new_name: network/tcp_connections
      operations:
      - action: toggle_scalar_data_type
      - action: delete_label_value
        label: protocol
        label_value: udp
      - action: update_label
        label: state
        new_label: tcp_state
      - action: aggregate_labels
        aggregation_type: sum
        label_set:
        - tcp_state
      - action: add_label
        new_label: port
        new_value: all
    - action: update
      include: system.processes.created
      new_name: processes/fork_count
    - action: update
      include: system.processes.count
      new_name: processes/count_by_state
      operations:
      - action: toggle_scalar_data_type
      - action: update_label
        label: status
        new_label: state
    - action: update
      include: system.paging.usage
      new_name: swap/bytes_used
      operations:
      - action: toggle_scalar_data_type
    - action: update
      include: system.paging.utilization
      new_name: swap/percent_used
    - action: insert
      include: swap/percent_used
      new_name: pagefile/percent_used
      operations:
      - action: aggregate_labels
        aggregation_type: sum
        label_set:
        - state
    - action: update
      include: system.paging.operations
      new_name: swap/io
      operations:
      - action: aggregate_labels
        aggregation_type: sum
        label_set:
        - direction
      - action: update_label
        label: direction
        value_actions:
        - new_value: in
          value: page_in
        - new_value: out
          value: page_out
    - action: update
      include: process.cpu.time
      new_name: processes/cpu_time
      operations:
      - action: experimental_scale_value
        experimental_scale: 1e+06
      - action: toggle_scalar_data_type
      - action: add_label
        new_label: process
        new_value: all
      - action: delete_label_value
        label: state
        label_value: wait
      - action: update_label
        label: state
        new_label: user_or_syst
      - action: update_label
        label: user_or_syst
        value_actions:
        - new_value: syst
          value: system
    - action: update
      include: process.disk.read_io
      new_name: processes/disk/read_bytes_count
      operations:
      - action: add_label
        new_label: process
        new_value: all
    - action: update
      include: process.disk.write_io
      new_name: processes/disk/write_bytes_count
      operations:
      - action: add_label
        new_label: process
        new_value: all
    - action: update
      include: process.memory.usage
      new_name: processes/rss_usage
      operations:
      - action: toggle_scalar_data_type
      - action: add_label
        new_label: process
        new_value: all
    - action: update
      include: process.memory.virtual
      new_name: processes/vm_usage
      operations:
      - action: toggle_scalar_data_type
      - action: add_label
        new_label: process
        new_value: all
    - action: update
      include: ^(.*)$$
      match_type: regexp
      new_name: agent.googleapis.com/$${1}
  metricstransform/oracledb_1:
    transforms:
    - action: update
      include: ^(.*)$$
      match_type: regexp
      new_name: workload.googleapis.com/$${1}
      operations:
      - action: update_label
        label: DATABASE_ID
        new_label: database_id
      - action: update_label
        label: GLOBAL_NAME
        new_label: global_name
      - action: update_label
        label: INSTANCE_ID
        new_label: instance_id
      - action: update_label
        label: TABLESPACE_NAME
        new_label: tablespace_name
      - action: update_label
        label: CONTENTS
        new_label: contents
      - action: update_label
        label: STATUS
        new_label: status
      - action: update_label
        label: PROGRAM
        new_label: program
      - action: update_label
        label: WAIT_CLASS
        new_label: wait_class
  metricstransform/otel_3:
    transforms:
    - action: update
      include: otelcol_process_uptime
      new_name: agent/uptime
      operations:
      - action: toggle_scalar_data_type
      - action: add_label
        new_label: version
        new_value: google-cloud-ops-agent-metrics/latest-build_distro
      - action: aggregate_labels
        aggregation_type: sum
        label_set:
        - version
    - action: update
      include: otelcol_process_memory_rss
      new_name: agent/memory_usage
      operations:
      - action: aggregate_labels
        aggregation_type: sum
        label_set: []
    - action: update
      include: grpc_client_attempt_duration_count
      new_name: agent/api_request_count
      operations:
      - action: update_label
        label: grpc_status
        new_label: state
      - action: aggregate_labels
        aggregation_type: sum
        label_set:
        - state
    - action: update
      include: googlecloudmonitoring_point_count
      new_name: agent/monitoring/point_count
      operations:
      - action: toggle_scalar_data_type
      - action: aggregate_labels
        aggregation_type: sum
        label_set:
        - status
    - action: update
      include: ^(.*)$$
      match_type: regexp
      new_name: agent.googleapis.com/$${1}
  modifyscope/oracledb_2:
    override_scope_name: agent.googleapis.com/oracledb
    override_scope_version: "1.0"
  normalizesums/oracledb_0: {}
  resourcedetection/_global_0:
    detectors:
    - gcp
  transform/otel_1:
    error_mode: ignore
    metric_statements:
    - context: metric
      statements:
      - extract_count_metric(true) where name == "grpc_client_attempt_duration"
receivers:
  hostmetrics/hostmetrics:
    collection_interval: 60s
    scrapers:
      cpu: {}
      disk: {}
      filesystem: {}
      load: {}
      memory: {}
      network: {}
      paging: {}
      process:
        mute_process_exe_error: true
        mute_process_name_error: true
      processes: {}
  nvml/hostmetrics_1:
    collection_interval: 60s
  prometheus/fluentbit:
    config:
      scrape_configs:
      - job_name: logging-collector
        metrics_path: /metrics
        scrape_interval: 1m
        static_configs:
        - targets:
          - 0.0.0.0:20202
  prometheus/otel:
    config:
      scrape_configs:
      - job_name: otel-collector
        scrape_interval: 1m
        static_configs:
        - targets:
          - 0.0.0.0:20201
  sqlquery/oracledb:
    collection_interval: 60s
    datasource: oracle://@localhost:1521/?SID=db19c&UNIX+SOCKET=%2Ftmp%2Foracle%2Fsocket
    driver: oracle
    queries:
    - metrics:
      - attribute_columns:
        - DATABASE_ID
        - GLOBAL_NAME
        - TABLESPACE_NAME
        - CONTENTS
        data_type: sum
        description: The size of tablespaces in the database.
        metric_name: oracle.tablespace.size
        monotonic: false
        static_attributes:
          db.system: oracle
          state: free
        unit: by
        value_column: FREE_SPACE
        value_type: int
      - attribute_columns:
        - DATABASE_ID
        - GLOBAL_NAME
        - TABLESPACE_NAME
        - CONTENTS
        data_type: sum
        description: The size of tablespaces in the database.
        metric_name: oracle.tablespace.size
        monotonic: false
        static_attributes:
          db.system: oracle
          state: used
        unit: by
        value_column: USED_SPACE
        value_type: int
      sql: "SELECT (SELECT DBID FROM SYS.GV_$$DATABASE) DATABASE_ID, (SELECT GLOBAL_NAME FROM sys.GLOBAL_NAME) GLOBAL_NAME, ts.TABLESPACE_NAME, ts.CONTENTS,\n\t\t\t\t(select sum(df.bytes) from sys.dba_data_files df where df.tablespace_name=ts.tablespace_name)-(select sum(fs.bytes) from sys.dba_free_space fs where fs.tablespace_name=ts.tablespace_name) AS USED_SPACE,\n\t\t\t\t(select sum(fs.bytes) from sys.dba_free_space fs where fs.tablespace_name=ts.tablespace_name) AS FREE_SPACE\n\t\t\tFROM sys.dba_tablespaces ts \n\t\t\tWHERE ts.contents <> 'TEMPORARY'\n\t\t\tUNION ALL\n\t\t\tSELECT (SELECT DBID FROM SYS.GV_$$DATABASE) DATABASE_ID, (SELECT GLOBAL_NAME FROM sys.GLOBAL_NAME) GLOBAL_NAME, ts.NAME TABLESPACE_NAME, 'TEMPORARY' as CONTENTS,\n\t\t\t\t\tSUM(ss.USED_BLOCKS * t.BLOCK_SIZE) USED_SPACE, \n\t\t\t\t\tSUM(t.BYTES) - SUM(ss.USED_BLOCKS * t.BLOCK_SIZE) FREE_SPACE\n\t\t\tFROM SYS.V_$$sort_segment ss\n\t\t\tJOIN sys.v_$$tablespace ts\n\t\t\tON ss.TABLESPACE_NAME = ts.NAME\n\t\t\tJOIN sys.v_$$tempfile t\n\t\t\tON t.TS# = ss.TS#\n\t\t\tGROUP BY ts.NAME"
    - metrics:
      - attribute_columns:
        - DATABASE_ID
        - GLOBAL_NAME
        - STATUS
        - CONTENTS
        data_type: sum
        description: The number of tablespaces in the database.
        metric_name: oracle.tablespace.count
        monotonic: false
        static_attributes:
          db.system: oracle
        unit: "{tablespaces}"
        value_column: COUNT
        value_type: int
      sql: SELECT (SELECT DBID FROM SYS.GV_$$DATABASE) DATABASE_ID, (SELECT GLOBAL_NAME FROM sys.GLOBAL_NAME) GLOBAL_NAME, CONTENTS, STATUS, COUNT(*) COUNT FROM sys.dba_tablespaces GROUP BY STATUS, CONTENTS
    - metrics:
      - attribute_columns:
        - DATABASE_ID
        - GLOBAL_NAME
        data_type: sum
        description: The number of seconds since the last RMAN backup.
        metric_name: oracle.backup.latest
        monotonic: true
        static_attributes:
          db.system: oracle
        unit: s
        value_column: LATEST_BACKUP
        value_type: int
      sql: SELECT (SELECT DBID FROM SYS.GV_$$DATABASE) DATABASE_ID, (SELECT GLOBAL_NAME FROM sys.GLOBAL_NAME) GLOBAL_NAME, (SELECT round(case when max(start_time) is null then -1 when sysdate - max(start_time) > 0 then (sysdate - max(start_time)) * 86400 else 0 end) FROM SYS.V_$$rman_backup_job_details ) LATEST_BACKUP FROM DUAL
    - metrics:
      - attribute_columns:
        - DATABASE_ID
        - GLOBAL_NAME
        - INSTANCE_ID
        data_type: sum
        description: The current number of processes.
        metric_name: oracle.process.count
        monotonic: false
        static_attributes:
          db.system: oracle
        unit: "{processes}"
        value_column: PROCESSES_UTIL
        value_type: int
      - attribute_columns:
        - DATABASE_ID
        - GLOBAL_NAME
        - INSTANCE_ID
        data_type: sum
        description: The maximum number of processes allowed.
        metric_name: oracle.process.limit
        monotonic: false
        static_attributes:
          db.system: oracle
        unit: "{processes}"
        value_column: PROCESSES_LIMIT_VAL
        value_type: int
      - attribute_columns:
        - DATABASE_ID
        - GLOBAL_NAME
        - INSTANCE_ID
        data_type: sum
        description: The current number of sessions.
        metric_name: oracle.session.count
        monotonic: false
        static_attributes:
          db.system: oracle
        unit: "{sessions}"
        value_column: SESSIONS_UTIL
        value_type: int
      - attribute_columns:
        - DATABASE_ID
        - GLOBAL_NAME
        - INSTANCE_ID
        data_type: sum
        description: The maximum number of sessions allowed.
        metric_name: oracle.session.limit
        monotonic: false
        static_attributes:
          db.system: oracle
        unit: "{sessions}"
        value_column: SESSIONS_LIMIT_VAL
        value_type: int
      sql: |-
        SELECT DATABASE_ID, GLOBAL_NAME, INST_ID INSTANCE_ID, MAX(PROCESSES_UTIL) PROCESSES_UTIL, MAX(PROCESSES_LIMIT_VAL) PROCESSES_LIMIT_VAL, MAX(SESSIONS_UTIL) SESSIONS_UTIL, MAX(SESSIONS_LIMIT_VAL) SESSIONS_LIMIT_VAL
        			FROM (SELECT (SELECT DBID FROM SYS.GV_$$DATABASE) DATABASE_ID, (SELECT GLOBAL_NAME FROM sys.GLOBAL_NAME) GLOBAL_NAME, INST_ID, PROCESSES_UTIL, PROCESSES_LIMIT_VAL, SESSIONS_UTIL, SESSIONS_LIMIT_VAL 
        			FROM (SELECT * FROM SYS.GV_$$resource_limit
        				WHERE RESOURCE_NAME IN ('processes', 'sessions'))
        				PIVOT(
        					MAX(TRIM(CURRENT_UTILIZATION)) UTIL,
        					MAX(TRIM(LIMIT_VALUE)) LIMIT_VAL
        					FOR RESOURCE_NAME
        					IN (
        						'processes' PROCESSES,
        						'sessions' SESSIONS
        					)
        				)
        			)
        			GROUP BY DATABASE_ID, GLOBAL_NAME, INST_ID
    - metrics:
      - attribute_columns:
        - DATABASE_ID
        - GLOBAL_NAME
        - INSTANCE_ID
        - PROGRAM
        data_type: sum
        description: The programmable global area memory allocated by process.
        metric_name: oracle.process.pga_memory.size
        monotonic: false
        static_attributes:
          db.system: oracle
          state: used
        unit: by
        value_column: USED_MEM
        value_type: int
      - attribute_columns:
        - DATABASE_ID
        - GLOBAL_NAME
        - INSTANCE_ID
        - PROGRAM
        data_type: sum
        description: The programmable global area memory allocated by process.
        metric_name: oracle.process.pga_memory.size
        monotonic: false
        static_attributes:
          db.system: oracle
          state: free
        unit: by
        value_column: FREE_MEM
        value_type: int
      sql: SELECT (SELECT DBID FROM SYS.GV_$$DATABASE) DATABASE_ID, (SELECT GLOBAL_NAME FROM sys.GLOBAL_NAME) GLOBAL_NAME, INST_ID INSTANCE_ID, PROGRAM, SUM(PGA_USED_MEM) USED_MEM, SUM(PGA_ALLOC_MEM) - SUM(PGA_USED_MEM) FREE_MEM FROM SYS.GV_$$PROCESS WHERE PROGRAM <> 'PSEUDO' GROUP BY PROGRAM, INST_ID
    - metrics:
      - attribute_columns:
        - DATABASE_ID
        - GLOBAL_NAME
        - INSTANCE_ID
        - WAIT_CLASS
        data_type: sum
        description: The number of wait events experienced.
        metric_name: oracle.wait.count
        monotonic: true
        static_attributes:
          db.system: oracle
          type: foreground
        unit: "{events}"
        value_column: TOTAL_WAITS_FG
        value_type: int
      - attribute_columns:
        - DATABASE_ID
        - GLOBAL_NAME
        - INSTANCE_ID
        - WAIT_CLASS
        data_type: sum
        description: The number of wait events experienced.
        metric_name: oracle.wait.count
        monotonic: true
        static_attributes:
          db.system: oracle
          type: background
        unit: "{events}"
        value_column: TOTAL_WAITS_BG
        value_type: int
      - attribute_columns:
        - DATABASE_ID
        - GLOBAL_NAME
        - INSTANCE_ID
        - WAIT_CLASS
        data_type: sum
        description: The amount of time waited for wait events.
        metric_name: oracle.wait.time
        monotonic: true
        static_attributes:
          db.system: oracle
          type: foreground
        unit: cs
        value_column: TIME_WAITED_FG
        value_type: int
      - attribute_columns:
        - DATABASE_ID
        - GLOBAL_NAME
        - INSTANCE_ID
        - WAIT_CLASS
        data_type: sum
        description: The amount of time waited for wait events.
        metric_name: oracle.wait.time
        monotonic: true
        static_attributes:
          db.system: oracle
          type: background
        unit: cs
        value_column: TIME_WAITED_BG
        value_type: int
      - attribute_columns:
        - DATABASE_ID
        - GLOBAL_NAME
        - INSTANCE_ID
        - WAIT_CLASS
        data_type: sum
        description: The number of timeouts for wait events.
        metric_name: oracle.wait.timeouts
        monotonic: true
        static_attributes:
          db.system: oracle
          type: foreground
        unit: "{timeouts}"
        value_column: TOTAL_TIMEOUTS_FG
        value_type: int
      - attribute_columns:
        - DATABASE_ID
        - GLOBAL_NAME
        - INSTANCE_ID
        - WAIT_CLASS
        data_type: sum
        description: The number of timeouts for wait events.
        metric_name: oracle.wait.timeouts
        monotonic: true
        static_attributes:
          db.system: oracle
          type: background
        unit: "{timeouts}"
        value_column: TOTAL_TIMEOUTS_BG
        value_type: int
      sql: SELECT (SELECT DBID FROM SYS.GV_$$DATABASE) DATABASE_ID, (SELECT GLOBAL_NAME FROM sys.GLOBAL_NAME) GLOBAL_NAME, INST_ID INSTANCE_ID, WAIT_CLASS, SUM(total_waits_fg) AS TOTAL_WAITS_FG, SUM(total_waits)-SUM(total_waits_fg) AS TOTAL_WAITS_BG, SUM(total_timeouts_fg) AS TOTAL_TIMEOUTS_FG, SUM(total_timeouts)-SUM(TOTAL_TIMEOUTS_FG) AS TOTAL_TIMEOUTS_BG, SUM(time_waited_fg) AS TIME_WAITED_FG, SUM(time_waited)-SUM(TIME_WAITED_FG) AS TIME_WAITED_BG FROM SYS.GV_$$system_event WHERE wait_class <> 'Idle' GROUP BY INST_ID, WAIT_CLASS
    - metrics:
      - attribute_columns:
        - DATABASE_ID
        - GLOBAL_NAME
        - INSTANCE_ID
        data_type: gauge
        description: The average sql service response time.
        metric_name: oracle.service.response_time
        static_attributes:
          db.system: oracle
        unit: cs
        value_column: RESPONSE_TIME
        value_type: double
      - attribute_columns:
        - DATABASE_ID
        - GLOBAL_NAME
        - INSTANCE_ID
        data_type: gauge
        description: Ratio of buffer cache hits to requests.
        metric_name: oracle.buffer.cache.ratio
        static_attributes:
          db.system: oracle
        unit: "%"
        value_column: BUFFER_HIT_RATIO
        value_type: double
      - attribute_columns:
        - DATABASE_ID
        - GLOBAL_NAME
        - INSTANCE_ID
        data_type: gauge
        description: Ratio of row cache hits to requests.
        metric_name: oracle.row.cache.ratio
        static_attributes:
          db.system: oracle
        unit: "%"
        value_column: ROW_HIT_RATIO
        value_type: double
      sql: |-
        SELECT DATABASE_ID, GLOBAL_NAME, INST_ID INSTANCE_ID, MAX(RESPONSE_TIME) RESPONSE_TIME, MAX(BUFFER_HIT_RATIO) BUFFER_HIT_RATIO, MAX(ROW_HIT_RATIO) ROW_HIT_RATIO 
        			FROM (SELECT (SELECT DBID FROM SYS.GV_$$DATABASE) DATABASE_ID, (SELECT GLOBAL_NAME FROM sys.GLOBAL_NAME) GLOBAL_NAME, INST_ID, END_TIME, RESPONSE_TIME, BUFFER_HIT_RATIO, ROW_HIT_RATIO 
        			FROM (SELECT * FROM SYS.GV_$$sysmetric
        				WHERE METRIC_NAME IN ('SQL Service Response Time', 'Buffer Cache Hit Ratio', 'Row Cache Hit Ratio')
        				AND GROUP_ID = 2)
        				PIVOT(
        					MAX(VALUE)
        					FOR METRIC_NAME
        					IN (
        						'SQL Service Response Time' RESPONSE_TIME,
        						'Buffer Cache Hit Ratio' BUFFER_HIT_RATIO,
        						'Row Cache Hit Ratio' ROW_HIT_RATIO
        					)
        				)
        			)
        			GROUP BY DATABASE_ID, GLOBAL_NAME, INST_ID
    - metrics:
      - attribute_columns:
        - DATABASE_ID
        - GLOBAL_NAME
        - INSTANCE_ID
        data_type: sum
        description: The total number of cursors.
        metric_name: oracle.cursor.count
        monotonic: true
        static_attributes:
          db.system: oracle
        unit: "{cursors}"
        value_column: CURSORS_CUMULATIVE
        value_type: int
      - attribute_columns:
        - DATABASE_ID
        - GLOBAL_NAME
        - INSTANCE_ID
        data_type: sum
        description: The current number of cursors.
        metric_name: oracle.cursor.current
        monotonic: false
        static_attributes:
          db.system: oracle
        unit: "{cursors}"
        value_column: CURSORS_CURRENT
        value_type: int
      - attribute_columns:
        - DATABASE_ID
        - GLOBAL_NAME
        - INSTANCE_ID
        data_type: sum
        description: The total number of logons.
        metric_name: oracle.logon.count
        monotonic: true
        static_attributes:
          db.system: oracle
        unit: "{logons}"
        value_column: LOGONS_CUMULATIVE
        value_type: int
      - attribute_columns:
        - DATABASE_ID
        - GLOBAL_NAME
        - INSTANCE_ID
        data_type: sum
        description: The current number of logons.
        metric_name: oracle.logon.current
        monotonic: false
        static_attributes:
          db.system: oracle
        unit: "{logons}"
        value_column: LOGONS_CURRENT
        value_type: int
      - attribute_columns:
        - DATABASE_ID
        - GLOBAL_NAME
        - INSTANCE_ID
        data_type: sum
        description: The total number of sorts.
        metric_name: oracle.sort.count
        monotonic: true
        static_attributes:
          db.system: oracle
          type: memory
        unit: "{sorts}"
        value_column: SORTS_MEM
        value_type: int
      - attribute_columns:
        - DATABASE_ID
        - GLOBAL_NAME
        - INSTANCE_ID
        data_type: sum
        description: The total number of sorts.
        metric_name: oracle.sort.count
        monotonic: true
        static_attributes:
          db.system: oracle
          type: disk
        unit: "{sorts}"
        value_column: SORTS_DISK
        value_type: int
      - attribute_columns:
        - DATABASE_ID
        - GLOBAL_NAME
        - INSTANCE_ID
        data_type: sum
        description: The total number of rows sorted.
        metric_name: oracle.sort.row.count
        monotonic: true
        static_attributes:
          db.system: oracle
        unit: "{rows}"
        value_column: SORTS_ROWS
        value_type: int
      - attribute_columns:
        - DATABASE_ID
        - GLOBAL_NAME
        - INSTANCE_ID
        data_type: sum
        description: The number of physical disk operations.
        metric_name: oracle.disk.operation.count
        monotonic: true
        static_attributes:
          db.system: oracle
          direction: read
        unit: "{operations}"
        value_column: READ_TOTAL
        value_type: int
      - attribute_columns:
        - DATABASE_ID
        - GLOBAL_NAME
        - INSTANCE_ID
        data_type: sum
        description: The number of bytes affected by physical disk operations.
        metric_name: oracle.disk.operation.size
        monotonic: true
        static_attributes:
          db.system: oracle
          direction: read
        unit: by
        value_column: READ_TOTAL_BY
        value_type: int
      - attribute_columns:
        - DATABASE_ID
        - GLOBAL_NAME
        - INSTANCE_ID
        data_type: sum
        description: The number of physical disk operations.
        metric_name: oracle.disk.operation.count
        monotonic: true
        static_attributes:
          db.system: oracle
          direction: write
        unit: "{operations}"
        value_column: WRITE_TOTAL
        value_type: int
      - attribute_columns:
        - DATABASE_ID
        - GLOBAL_NAME
        - INSTANCE_ID
        data_type: sum
        description: The number of bytes affected by physical disk operations.
        metric_name: oracle.disk.operation.size
        monotonic: true
        static_attributes:
          db.system: oracle
          direction: write
        unit: by
        value_column: WRITE_TOTAL_BY
        value_type: int
      - attribute_columns:
        - DATABASE_ID
        - GLOBAL_NAME
        - INSTANCE_ID
        data_type: sum
        description: The total number of bytes communicated on the network.
        metric_name: oracle.network.data
        monotonic: true
        static_attributes:
          db.system: oracle
          direction: received
          target: client
        unit: by
        value_column: CLIENT_RECV_BY
        value_type: int
      - attribute_columns:
        - DATABASE_ID
        - GLOBAL_NAME
        - INSTANCE_ID
        data_type: sum
        description: The total number of bytes communicated on the network.
        metric_name: oracle.network.data
        monotonic: true
        static_attributes:
          db.system: oracle
          direction: sent
          target: client
        unit: by
        value_column: CLIENT_SENT_BY
        value_type: int
      - attribute_columns:
        - DATABASE_ID
        - GLOBAL_NAME
        - INSTANCE_ID
        data_type: sum
        description: The total number of bytes communicated on the network.
        metric_name: oracle.network.data
        monotonic: true
        static_attributes:
          db.system: oracle
          direction: received
          target: dblink
        unit: by
        value_column: DBLINK_RECV_BY
        value_type: int
      - attribute_columns:
        - DATABASE_ID
        - GLOBAL_NAME
        - INSTANCE_ID
        data_type: sum
        description: The total number of bytes communicated on the network.
        metric_name: oracle.network.data
        monotonic: true
        static_attributes:
          db.system: oracle
          direction: sent
          target: dblink
        unit: by
        value_column: DBLINK_SENT_BY
        value_type: int
      - attribute_columns:
        - DATABASE_ID
        - GLOBAL_NAME
        - INSTANCE_ID
        data_type: sum
        description: The total number of user calls such as login, parse, fetch, or execute.
        metric_name: oracle.user.calls
        monotonic: true
        static_attributes:
          db.system: oracle
        unit: "{calls}"
        value_column: USER_CALLS
        value_type: int
      - attribute_columns:
        - DATABASE_ID
        - GLOBAL_NAME
        - INSTANCE_ID
        data_type: sum
        description: The total number of user transaction commits.
        metric_name: oracle.user.commits
        monotonic: true
        static_attributes:
          db.system: oracle
        unit: "{commits}"
        value_column: USER_COMMITS
        value_type: int
      - attribute_columns:
        - DATABASE_ID
        - GLOBAL_NAME
        - INSTANCE_ID
        data_type: sum
        description: The total number of times users manually issue the ROLLBACK statement or an error occurs during a user's transactions
        metric_name: oracle.user.rollbacks
        monotonic: true
        static_attributes:
          db.system: oracle
        unit: "{rollbacks}"
        value_column: USER_ROLLBACKS
        value_type: int
      sql: |-
        SELECT DATABASE_ID, GLOBAL_NAME, INST_ID INSTANCE_ID, MAX(CURSORS_CUMULATIVE) CURSORS_CUMULATIVE, MAX(CURSORS_CURRENT) CURSORS_CURRENT, MAX(SORTS_MEM) SORTS_MEM, MAX(SORTS_DISK) SORTS_DISK, MAX(SORTS_ROWS) SORTS_ROWS, MAX(READ_TOTAL) READ_TOTAL, MAX(WRITE_TOTAL) WRITE_TOTAL, MAX(READ_TOTAL_BY) READ_TOTAL_BY, MAX(WRITE_TOTAL_BY) WRITE_TOTAL_BY, MAX(LOGONS_CURRENT) LOGONS_CURRENT, MAX(CLIENT_RECV_BY) CLIENT_RECV_BY, MAX(DBLINK_RECV_BY) DBLINK_RECV_BY, MAX(CLIENT_SENT_BY) CLIENT_SENT_BY, MAX(DBLINK_SENT_BY) DBLINK_SENT_BY, MAX(LOGONS_CUMULATIVE) LOGONS_CUMULATIVE, MAX(USER_CALLS) USER_CALLS, MAX(USER_COMMITS) USER_COMMITS, MAX(USER_ROLLBACKS) USER_ROLLBACKS 
        			FROM (SELECT (SELECT DBID FROM SYS.GV_$$DATABASE) DATABASE_ID, (SELECT GLOBAL_NAME FROM sys.GLOBAL_NAME) GLOBAL_NAME, INST_ID, CURSORS_CUMULATIVE, CURSORS_CURRENT, SORTS_MEM, SORTS_DISK, SORTS_ROWS, READ_TOTAL, WRITE_TOTAL, READ_TOTAL_BY, WRITE_TOTAL_BY, LOGONS_CURRENT, CLIENT_RECV_BY, DBLINK_RECV_BY, CLIENT_SENT_BY, DBLINK_SENT_BY, LOGONS_CUMULATIVE, USER_CALLS, USER_COMMITS, USER_ROLLBACKS 
        			FROM (SELECT * FROM SYS.GV_$$sysstat
        				WHERE NAME IN ('opened cursors cumulative', 'opened cursors current', 'sorts (memory)', 'sorts (disk)', 'sorts (rows)', 'physical read total IO requests', 'physical write total IO requests', 'physical read total bytes', 'physical write total bytes', 'logons current', 'bytes received via SQL*Net from client', 'bytes received via SQL*Net from dblink', 'bytes sent via SQL*Net to client', 'bytes sent via SQL*Net to dblink', 'logons cumulative', 'user calls', 'user commits', 'user rollbacks')
        				)
        				PIVOT(
        					MAX(VALUE)
        					FOR NAME
        					IN (
        						'opened cursors cumulative' CURSORS_CUMULATIVE,
        						'opened cursors current' CURSORS_CURRENT,
        						'logons cumulative' LOGONS_CUMULATIVE,
        						'logons current' LOGONS_CURRENT,
        						'sorts (memory)' SORTS_MEM,
        						'sorts (disk)' SORTS_DISK,
        						'sorts (rows)' SORTS_ROWS,
        						'physical read total IO requests' READ_TOTAL,
        						'physical write total IO requests' WRITE_TOTAL,
        						'physical read total bytes' READ_TOTAL_BY,
        						'physical write total bytes' WRITE_TOTAL_BY,
        						'bytes received via SQL*Net from client' CLIENT_RECV_BY,
        						'bytes received via SQL*Net from dblink' DBLINK_RECV_BY,
        						'bytes sent via SQL*Net to client' CLIENT_SENT_BY,
        						'bytes sent via SQL*Net to dblink' DBLINK_SENT_BY,
        						'user calls' USER_CALLS,
        						'user commits' USER_COMMITS,
        						'user rollbacks' USER_ROLLBACKS
        					)
        				)
        			)
        			GROUP BY DATABASE_ID, GLOBAL_NAME, INST_ID
service:
  pipelines:
    metrics/default__pipeline_hostmetrics:
      exporters:
      - googlecloud
      processors:
      - agentmetrics/hostmetrics_0
      - filter/hostmetrics_1
      - metricstransform/hostmetrics_2
      - filter/default__pipeline_hostmetrics_0
      - resourcedetection/_global_0
      receivers:
      - hostmetrics/hostmetrics
    metrics/default__pipeline_hostmetrics_1:
      exporters:
      - googlecloud
      processors:
      - metricstransform/hostmetrics_1_0
      - filter/default__pipeline_hostmetrics_1_0
      - resourcedetection/_global_0
      receivers:
      - nvml/hostmetrics_1
    metrics/fluentbit:
      exporters:
      - googlecloud
      processors:
      - filter/fluentbit_0
      - metricstransform/fluentbit_1
      - resourcedetection/_global_0
      receivers:
      - prometheus/fluentbit
    metrics/oracledb_oracledb:
      exporters:
      - googlecloud/otel
      processors:
      - normalizesums/oracledb_0
      - metricstransform/oracledb_1
      - modifyscope/oracledb_2
      - resourcedetection/_global_0
      receivers:
      - sqlquery/oracledb
    metrics/otel:
      exporters:
      - googlecloud
      processors:
      - filter/otel_0
      - transform/otel_1
      - filter/otel_2
      - metricstransform/otel_3
      - resourcedetection/_global_0
      receivers:
      - prometheus/otel
  telemetry:
    metrics:
      address: 0.0.0.0:20201
