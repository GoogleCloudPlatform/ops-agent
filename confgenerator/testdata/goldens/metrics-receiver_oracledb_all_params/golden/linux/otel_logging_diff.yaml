  strings.Join({
  	... // 19332 identical bytes
  	"ements:\n    - context: metric\n      statements:\n      - extract_",
  	"count_metric(true) where name == \"grpc.client.attempt.duration\"\n",
- 	"receivers:\n  hostmetrics/hostmetrics:\n    collection_interval: 6",
- 	"0s\n    scrapers:\n      cpu: {}\n      disk: {}\n      filesystem: ",
- 	"{}\n      load: {}\n      memory: {}\n      network: {}\n      pagin",
- 	"g: {}\n      process:\n        mute_process_all_errors: true\n     ",
- 	"   mute_process_exe_error: true\n        mute_process_name_error:",
- 	" true\n      processes: {}\n  otlpjsonfile/ops_agent:\n    include:",
- 	"\n    - enabled_receivers_otlp.json\n    - feature_tracking_otlp.j",
- 	"son\n    poll_interval: 1m0s\n    replay_file: true\n  prometheus/a",
- 	"gent_prometheus:\n    config:\n      scrape_configs:\n      - job_n",
- 	"ame: logging-collector\n        metrics_path: /metrics\n        sc",
- 	"rape_interval: 1m\n        static_configs:\n        - targets:\n   ",
- 	"       - 0.0.0.0:20202\n      - job_name: otel-collector\n        ",
- 	"scrape_interval: 1m\n        static_configs:\n        - targets:\n ",
- 	"         - 0.0.0.0:20201\n  sqlquery/oracledb:\n    collection_int",
- 	"erval: 60s\n    datasource: oracle://sys:p%40ssword@myhost.domain",
- 	":1111/db19c.domain?SSL=ENABLE&SSL+VERIFY=ENABLE&WALLET=%2Fmy%2Fo",
- 	"racle%2Fwallet%2Fpath+here%2F\n    driver: oracle\n    queries:\n  ",
- 	"  - metrics:\n      - attribute_columns:\n        - DATABASE_ID\n  ",
- 	"      - GLOBAL_NAME\n        - TABLESPACE_NAME\n        - CONTENTS",
- 	"\n        data_type: sum\n        description: The size of tablesp",
- 	"aces in the database.\n        metric_name: oracle.tablespace.siz",
- 	"e\n        monotonic: false\n        static_attributes:\n          ",
- 	"db.system: oracle\n          state: free\n        unit: by\n       ",
- 	" value_column: FREE_SPACE\n        value_type: int\n      - attrib",
- 	"ute_columns:\n        - DATABASE_ID\n        - GLOBAL_NAME\n       ",
- 	" - TABLESPACE_NAME\n        - CONTENTS\n        data_type: sum\n   ",
- 	"     description: The size of tablespaces in the database.\n     ",
- 	"   metric_name: oracle.tablespace.size\n        monotonic: false\n",
- 	"        static_attributes:\n          db.system: oracle\n         ",
- 	" state: used\n        unit: by\n        value_column: USED_SPACE\n ",
- 	"       value_type: int\n      sql: \"SELECT (SELECT DBID FROM SYS.",
- 	"GV_$$DATABASE) DATABASE_ID, (SELECT GLOBAL_NAME FROM sys.GLOBAL_",
- 	`NAME) GLOBAL_NAME, ts.TABLESPACE_NAME, ts.CONTENTS,\n\t\t\t\t(se`,
- 	"lect sum(df.bytes) from sys.dba_data_files df where df.tablespac",
- 	"e_name=ts.tablespace_name)-(select sum(fs.bytes) from sys.dba_fr",
- 	"ee_space fs where fs.tablespace_name=ts.tablespace_name) AS USED",
- 	`_SPACE,\n\t\t\t\t(select sum(fs.bytes) from sys.dba_free_space f`,
- 	`s where fs.tablespace_name=ts.tablespace_name) AS FREE_SPACE\n\t`,
- 	`\t\tFROM sys.dba_tablespaces ts\n\t\t\tWHERE ts.contents <> 'TEM`,
- 	`PORARY'\n\t\t\tUNION ALL\n\t\t\tSELECT (SELECT DBID FROM SYS.GV_`,
- 	"$$DATABASE) DATABASE_ID, (SELECT GLOBAL_NAME FROM sys.GLOBAL_NAM",
- 	"E) GLOBAL_NAME, ts.NAME TABLESPACE_NAME, 'TEMPORARY' as CONTENTS",
- 	`,\n\t\t\t\t\tSUM(ss.USED_BLOCKS * t.BLOCK_SIZE) USED_SPACE,\n\t\`,
- 	`t\t\t\tSUM(t.BYTES) - SUM(ss.USED_BLOCKS * t.BLOCK_SIZE) FREE_SP`,
- 	`ACE\n\t\t\tFROM SYS.V_$$sort_segment ss\n\t\t\tJOIN sys.v_$$tabl`,
- 	`espace ts\n\t\t\tON ss.TABLESPACE_NAME = ts.NAME\n\t\t\tJOIN sys`,
- 	`.v_$$tempfile t\n\t\t\tON t.TS# = ss.TS#\n\t\t\tGROUP BY ts.NAME`,
- 	"\"\n    - metrics:\n      - attribute_columns:\n        - DATABASE_I",
- 	"D\n        - GLOBAL_NAME\n        - STATUS\n        - CONTENTS\n    ",
- 	"    data_type: sum\n        description: The number of tablespace",
- 	"s in the database.\n        metric_name: oracle.tablespace.count\n",
- 	"        monotonic: false\n        static_attributes:\n          db",
- 	".system: oracle\n        unit: \"{tablespaces}\"\n        value_colu",
- 	"mn: COUNT\n        value_type: int\n      sql: SELECT (SELECT DBID",
- 	" FROM SYS.GV_$$DATABASE) DATABASE_ID, (SELECT GLOBAL_NAME FROM s",
- 	"ys.GLOBAL_NAME) GLOBAL_NAME, CONTENTS, STATUS, COUNT(*) COUNT FR",
- 	"OM sys.dba_tablespaces GROUP BY STATUS, CONTENTS\n    - metrics:\n",
- 	"      - attribute_columns:\n        - DATABASE_ID\n        - GLOBA",
- 	"L_NAME",
+ 	"  transform/syslog_0:\n    error_mode: ignore\n    log_statements:",
+ 	"\n    - context: log\n      statements:\n      - delete_key(cache, ",
+ 	"\"__field_0\") where (cache != nil and cache[\"__field_0\"] != nil)\n",
+ 	`      - set(cache["__field_0"], attributes["compute.googleapis.c`,
+ 	`om/instance_group_manager/name"]) where (attributes != nil and a`,
+ 	`ttributes["compute.googleapis.com/instance_group_manager/name"] `,
+ 	"!= nil)\n      - delete_key(cache, \"__field_1\") where (cache != n",
+ 	"il and cache[\"__field_1\"] != nil)\n      - set(cache[\"__field_1\"]",
+ 	`, attributes["compute.googleapis.com/instance_group_manager/zone`,
+ 	`"]) where (attributes != nil and attributes["compute.googleapis.`,
+ 	"com/instance_group_manager/zone\"] != nil)\n      - delete_key(cac",
+ 	`he, "__field_2") where (cache != nil and cache["__field_2"] != n`,
+ 	"il)\n      - set(cache[\"__field_2\"], attributes[\"compute.googleap",
+ 	`is.com/resource_name"]) where (attributes != nil and attributes[`,
+ 	"\"compute.googleapis.com/resource_name\"] != nil)\n      - delete_k",
+ 	`ey(cache, "__field_3") where (cache != nil and cache["__field_3"`,
+ 	"] != nil)\n      - set(cache[\"__field_3\"], attributes[\"gcp.log_na",
+ 	`me"]) where (attributes != nil and attributes["gcp.log_name"] !=`,
+ 	" nil)\n      - delete_key(cache, \"value\") where (cache != nil and",
+ 	" cache[\"value\"] != nil)\n      - set(cache[\"value\"], cache[\"__fie",
+ 	"ld_0\"])\n      - set(cache[\"value\"], \"test-mig\") where cache[\"val",
+ 	"ue\"] == nil\n      - set(attributes[\"compute.googleapis.com/insta",
+ 	`nce_group_manager/name"], cache["value"]) where (cache != nil an`,
+ 	"d cache[\"value\"] != nil)\n      - delete_key(cache, \"value\") wher",
+ 	"e (cache != nil and cache[\"value\"] != nil)\n      - set(cache[\"va",
+ 	"lue\"], cache[\"__field_1\"])\n      - set(cache[\"value\"], \"test-zon",
+ 	"e\") where cache[\"value\"] == nil\n      - set(attributes[\"compute.",
+ 	`googleapis.com/instance_group_manager/zone"], cache["value"]) wh`,
+ 	"ere (cache != nil and cache[\"value\"] != nil)\n      - delete_key(",
+ 	"cache, \"value\") where (cache != nil and cache[\"value\"] != nil)\n ",
+ 	"     - set(cache[\"value\"], cache[\"__field_2\"])\n      - set(cache",
+ 	"[\"value\"], \"\") where cache[\"value\"] == nil\n      - set(attribute",
+ 	`s["compute.googleapis.com/resource_name"], cache["value"]) where`,
+ 	" (cache != nil and cache[\"value\"] != nil)\n      - delete_key(cac",
+ 	"he, \"value\") where (cache != nil and cache[\"value\"] != nil)\n    ",
+ 	"  - set(cache[\"value\"], cache[\"__field_3\"])\n      - set(cache[\"v",
+ 	"alue\"], \"syslog\") where cache[\"value\"] == nil\n      - set(attrib",
+ 	`utes["gcp.log_name"], cache["value"]) where (cache != nil and ca`,
+ 	"che[\"value\"] != nil)\nreceivers:\n  filelog/syslog:\n    exclude: [",
+ 	"]\n    include:\n    - /var/log/messages\n    - /var/log/syslog\n   ",
+ 	" include_file_name: false\n    operators:\n    - from: body\n      ",
+ 	"id: body\n      to: body.message\n      type: move\n    start_at: b",
+ 	"eginning\n  hostmetrics/hostmetrics:\n    collection_interval: 60s",
+ 	"\n    scrapers:\n      cpu: {}\n      disk: {}\n      filesystem: {}",
+ 	"\n      load: {}\n      memory: {}\n      network: {}\n      paging:",
+ 	" {}\n      process:\n        mute_process_all_errors: true\n       ",
+ 	" mute_process_exe_error: true\n        mute_process_name_error: t",
+ 	"rue\n      processes: {}\n  otlpjsonfile/ops_agent:\n    include:\n ",
+ 	"   - enabled_receivers_otlp.json\n    - feature_tracking_otlp.jso",
+ 	"n\n    poll_interval: 1m0s\n    replay_file: true\n  prometheus/age",
+ 	"nt_prometheus:\n    config:\n      scrape_configs:\n      - job_nam",
+ 	"e: logging-collector\n        metrics_path: /metrics\n        scra",
+ 	"pe_interval: 1m\n        static_configs:\n        - targets:\n     ",
+ 	"     - 0.0.0.0:20202\n      - job_name: otel-collector\n        sc",
+ 	"rape_interval: 1m\n        static_configs:\n        - targets:\n   ",
+ 	"       - 0.0.0.0:20201\n  sqlquery/oracledb:\n    collection_inter",
+ 	"val: 60s\n    datasource: oracle://sys:p%40ssword@myhost.domain:1",
+ 	"111/db19c.domain?SSL=ENABLE&SSL+VERIFY=ENABLE&WALLET=%2Fmy%2Fora",
+ 	"cle%2Fwallet%2Fpath+here%2F\n    driver: oracle\n    queries:\n    ",
+ 	"- metrics:\n      - attribute_columns:\n        - DATABASE_ID\n    ",
+ 	"    - GLOBAL_NAME\n        - TABLESPACE_NAME\n        - CONTENTS",
  	... // 19136 identical, 2704 removed, and 5409 inserted bytes
  }, "")
