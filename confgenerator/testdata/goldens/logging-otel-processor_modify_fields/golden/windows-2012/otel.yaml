exporters:
  googlecloud:
    metric:
      instrumentation_library_labels: false
      prefix: ""
      resource_filters: []
      service_resource_labels: false
      skip_create_descriptor: true
    user_agent: Google-Cloud-Ops-Agent-Metrics/latest (BuildDistro=build_distro;Platform=windows;ShortName=win_platform;ShortVersion=win_platform_version)
  googlecloud/otel:
    metric:
      instrumentation_library_labels: true
      prefix: ""
      resource_filters: []
      service_resource_labels: false
      skip_create_descriptor: true
    user_agent: Google-Cloud-Ops-Agent-Metrics/latest (BuildDistro=build_distro;Platform=windows;ShortName=win_platform;ShortVersion=win_platform_version)
processors:
  agentmetrics/hostmetrics_0:
    blank_label_metrics:
    - system.cpu.utilization
  casttosum/iis_1:
    metrics:
    - agent.googleapis.com/iis/network/transferred_bytes_count
    - agent.googleapis.com/iis/new_connection_count
    - agent.googleapis.com/iis/request_count
  filter/default__pipeline_hostmetrics_0:
    metrics:
      exclude:
        match_type: regexp
        metric_names: []
  filter/default__pipeline_iis_0:
    metrics:
      exclude:
        match_type: regexp
        metric_names: []
  filter/default__pipeline_mssql_0:
    metrics:
      exclude:
        match_type: regexp
        metric_names: []
  filter/fluentbit_0:
    metrics:
      include:
        match_type: strict
        metric_names:
        - fluentbit_uptime
        - fluentbit_stackdriver_requests_total
        - fluentbit_stackdriver_proc_records_total
        - fluentbit_stackdriver_retried_records_total
  filter/hostmetrics_1:
    metrics:
      exclude:
        match_type: strict
        metric_names:
        - system.cpu.time
        - system.network.dropped
        - system.filesystem.inodes.usage
        - system.paging.faults
        - system.disk.operation_time
  filter/otel_0:
    metrics:
      include:
        match_type: strict
        metric_names:
        - otelcol_process_uptime
        - otelcol_process_memory_rss
        - grpc_client_attempt_duration
        - googlecloudmonitoring_point_count
  filter/otel_2:
    metrics:
      include:
        match_type: strict
        metric_names:
        - otelcol_process_uptime
        - otelcol_process_memory_rss
        - grpc_client_attempt_duration_count
        - googlecloudmonitoring_point_count
  metricstransform/fluentbit_1:
    transforms:
    - action: update
      include: fluentbit_uptime
      new_name: agent/uptime
      operations:
      - action: toggle_scalar_data_type
      - action: add_label
        new_label: version
        new_value: google-cloud-ops-agent-logging/latest-build_distro
      - action: aggregate_labels
        aggregation_type: sum
        label_set:
        - version
    - action: update
      include: fluentbit_stackdriver_requests_total
      new_name: agent/request_count
      operations:
      - action: toggle_scalar_data_type
      - action: update_label
        label: status
        new_label: response_code
      - action: aggregate_labels
        aggregation_type: sum
        label_set:
        - response_code
    - action: update
      include: fluentbit_stackdriver_proc_records_total
      new_name: agent/log_entry_count
      operations:
      - action: toggle_scalar_data_type
      - action: update_label
        label: status
        new_label: response_code
      - action: aggregate_labels
        aggregation_type: sum
        label_set:
        - response_code
    - action: update
      include: fluentbit_stackdriver_retried_records_total
      new_name: agent/log_entry_retry_count
      operations:
      - action: toggle_scalar_data_type
      - action: update_label
        label: status
        new_label: response_code
      - action: aggregate_labels
        aggregation_type: sum
        label_set:
        - response_code
    - action: update
      include: ^(.*)$$
      match_type: regexp
      new_name: agent.googleapis.com/$${1}
  metricstransform/hostmetrics_2:
    transforms:
    - action: update
      include: system.cpu.time
      new_name: cpu/usage_time
      operations:
      - action: toggle_scalar_data_type
      - action: update_label
        label: cpu
        new_label: cpu_number
      - action: update_label
        label: state
        new_label: cpu_state
    - action: update
      include: system.cpu.utilization
      new_name: cpu/utilization
      operations:
      - action: aggregate_labels
        aggregation_type: mean
        label_set:
        - state
        - blank
      - action: update_label
        label: blank
        new_label: cpu_number
      - action: update_label
        label: state
        new_label: cpu_state
    - action: update
      include: system.cpu.load_average.1m
      new_name: cpu/load_1m
    - action: update
      include: system.cpu.load_average.5m
      new_name: cpu/load_5m
    - action: update
      include: system.cpu.load_average.15m
      new_name: cpu/load_15m
    - action: update
      include: system.disk.read_io
      new_name: disk/read_bytes_count
    - action: update
      include: system.disk.write_io
      new_name: disk/write_bytes_count
    - action: update
      include: system.disk.operations
      new_name: disk/operation_count
    - action: update
      include: system.disk.io_time
      new_name: disk/io_time
      operations:
      - action: experimental_scale_value
        experimental_scale: 1000.0
      - action: toggle_scalar_data_type
    - action: update
      include: system.disk.weighted_io_time
      new_name: disk/weighted_io_time
      operations:
      - action: experimental_scale_value
        experimental_scale: 1000.0
      - action: toggle_scalar_data_type
    - action: update
      include: system.disk.average_operation_time
      new_name: disk/operation_time
      operations:
      - action: experimental_scale_value
        experimental_scale: 1000.0
      - action: toggle_scalar_data_type
    - action: update
      include: system.disk.pending_operations
      new_name: disk/pending_operations
      operations:
      - action: toggle_scalar_data_type
    - action: update
      include: system.disk.merged
      new_name: disk/merged_operations
    - action: update
      include: system.filesystem.usage
      new_name: disk/bytes_used
      operations:
      - action: toggle_scalar_data_type
      - action: aggregate_labels
        aggregation_type: max
        label_set:
        - device
        - state
    - action: update
      include: system.filesystem.utilization
      new_name: disk/percent_used
      operations:
      - action: aggregate_labels
        aggregation_type: max
        label_set:
        - device
        - state
    - action: update
      include: system.memory.usage
      new_name: memory/bytes_used
      operations:
      - action: toggle_scalar_data_type
      - action: aggregate_label_values
        aggregated_values:
        - slab_reclaimable
        - slab_unreclaimable
        aggregation_type: sum
        label: state
        new_value: slab
    - action: update
      include: system.memory.utilization
      new_name: memory/percent_used
      operations:
      - action: aggregate_label_values
        aggregated_values:
        - slab_reclaimable
        - slab_unreclaimable
        aggregation_type: sum
        label: state
        new_value: slab
    - action: update
      include: system.network.io
      new_name: interface/traffic
      operations:
      - action: update_label
        label: interface
        new_label: device
      - action: update_label
        label: direction
        value_actions:
        - new_value: rx
          value: receive
        - new_value: tx
          value: transmit
    - action: update
      include: system.network.errors
      new_name: interface/errors
      operations:
      - action: update_label
        label: interface
        new_label: device
      - action: update_label
        label: direction
        value_actions:
        - new_value: rx
          value: receive
        - new_value: tx
          value: transmit
    - action: update
      include: system.network.packets
      new_name: interface/packets
      operations:
      - action: update_label
        label: interface
        new_label: device
      - action: update_label
        label: direction
        value_actions:
        - new_value: rx
          value: receive
        - new_value: tx
          value: transmit
    - action: update
      include: system.network.connections
      new_name: network/tcp_connections
      operations:
      - action: toggle_scalar_data_type
      - action: delete_label_value
        label: protocol
        label_value: udp
      - action: update_label
        label: state
        new_label: tcp_state
      - action: aggregate_labels
        aggregation_type: sum
        label_set:
        - tcp_state
      - action: add_label
        new_label: port
        new_value: all
    - action: update
      include: system.processes.created
      new_name: processes/fork_count
    - action: update
      include: system.processes.count
      new_name: processes/count_by_state
      operations:
      - action: toggle_scalar_data_type
      - action: update_label
        label: status
        new_label: state
    - action: update
      include: system.paging.usage
      new_name: swap/bytes_used
      operations:
      - action: toggle_scalar_data_type
    - action: update
      include: system.paging.utilization
      new_name: swap/percent_used
    - action: insert
      include: swap/percent_used
      new_name: pagefile/percent_used
      operations:
      - action: aggregate_labels
        aggregation_type: sum
        label_set:
        - state
    - action: update
      include: system.paging.operations
      new_name: swap/io
      operations:
      - action: aggregate_labels
        aggregation_type: sum
        label_set:
        - direction
      - action: update_label
        label: direction
        value_actions:
        - new_value: in
          value: page_in
        - new_value: out
          value: page_out
    - action: update
      include: process.cpu.time
      new_name: processes/cpu_time
      operations:
      - action: experimental_scale_value
        experimental_scale: 1e+06
      - action: toggle_scalar_data_type
      - action: add_label
        new_label: process
        new_value: all
      - action: delete_label_value
        label: state
        label_value: wait
      - action: update_label
        label: state
        new_label: user_or_syst
      - action: update_label
        label: user_or_syst
        value_actions:
        - new_value: syst
          value: system
    - action: update
      include: process.disk.read_io
      new_name: processes/disk/read_bytes_count
      operations:
      - action: add_label
        new_label: process
        new_value: all
    - action: update
      include: process.disk.write_io
      new_name: processes/disk/write_bytes_count
      operations:
      - action: add_label
        new_label: process
        new_value: all
    - action: update
      include: process.memory.usage
      new_name: processes/rss_usage
      operations:
      - action: toggle_scalar_data_type
      - action: add_label
        new_label: process
        new_value: all
    - action: update
      include: process.memory.virtual
      new_name: processes/vm_usage
      operations:
      - action: toggle_scalar_data_type
      - action: add_label
        new_label: process
        new_value: all
    - action: update
      include: process.handles
      new_name: processes/windows/handles
      operations:
      - action: add_label
        new_label: process
        new_value: all
    - action: update
      include: ^(.*)$$
      match_type: regexp
      new_name: agent.googleapis.com/$${1}
  metricstransform/iis_0:
    transforms:
    - action: update
      include: "\\Web Service(_Total)\\Current Connections"
      new_name: iis/current_connections
    - action: combine
      include: "^\\\\Web Service\\(_Total\\)\\\\Total Bytes (?P<direction>.*)$$"
      match_type: regexp
      new_name: iis/network/transferred_bytes_count
      operations:
      - action: toggle_scalar_data_type
      submatch_case: lower
    - action: update
      include: "\\Web Service(_Total)\\Total Connection Attempts (all instances)"
      new_name: iis/new_connection_count
      operations:
      - action: toggle_scalar_data_type
    - action: combine
      include: "^\\\\Web Service\\(_Total\\)\\\\Total (?P<http_method>.*) Requests$$"
      match_type: regexp
      new_name: iis/request_count
      operations:
      - action: toggle_scalar_data_type
      submatch_case: lower
    - action: update
      include: ^(.*)$$
      match_type: regexp
      new_name: agent.googleapis.com/$${1}
  metricstransform/mssql_0:
    transforms:
    - action: update
      include: "\\SQLServer:General Statistics(_Total)\\User Connections"
      new_name: mssql/connections/user
    - action: update
      include: "\\SQLServer:Databases(_Total)\\Transactions/sec"
      new_name: mssql/transaction_rate
    - action: update
      include: "\\SQLServer:Databases(_Total)\\Write Transactions/sec"
      new_name: mssql/write_transaction_rate
    - action: update
      include: ^(.*)$$
      match_type: regexp
      new_name: agent.googleapis.com/$${1}
  metricstransform/otel_3:
    transforms:
    - action: update
      include: otelcol_process_uptime
      new_name: agent/uptime
      operations:
      - action: toggle_scalar_data_type
      - action: add_label
        new_label: version
        new_value: google-cloud-ops-agent-metrics/latest-build_distro
      - action: aggregate_labels
        aggregation_type: sum
        label_set:
        - version
    - action: update
      include: otelcol_process_memory_rss
      new_name: agent/memory_usage
      operations:
      - action: aggregate_labels
        aggregation_type: sum
        label_set: []
    - action: update
      include: grpc_client_attempt_duration_count
      new_name: agent/api_request_count
      operations:
      - action: update_label
        label: grpc_status
        new_label: state
      - action: aggregate_labels
        aggregation_type: sum
        label_set:
        - state
    - action: update
      include: googlecloudmonitoring_point_count
      new_name: agent/monitoring/point_count
      operations:
      - action: toggle_scalar_data_type
      - action: aggregate_labels
        aggregation_type: sum
        label_set:
        - status
    - action: update
      include: ^(.*)$$
      match_type: regexp
      new_name: agent.googleapis.com/$${1}
  modifyscope/iis_3:
    override_scope_name: agent.googleapis.com/iis
    override_scope_version: "1.0"
  modifyscope/mssql_1:
    override_scope_name: agent.googleapis.com/mssql
    override_scope_version: "1.0"
  normalizesums/iis_2: {}
  resourcedetection/_global_0:
    detectors:
    - gcp
  transform/logs_p1_sample__logs_0:
    error_mode: ignore
    log_statements:
    - context: log
      statements:
      - delete_key(cache, "__field_0") where (cache != nil and cache["__field_0"] != nil)
      - set(cache["__field_0"], body["source"]) where (body != nil and body["source"] != nil)
      - delete_key(cache, "__field_1") where (cache != nil and cache["__field_1"] != nil)
      - set(cache["__field_1"], body["default"]) where (body != nil and body["default"] != nil)
      - delete_key(cache, "__field_2") where (cache != nil and cache["__field_2"] != nil)
      - set(cache["__field_2"], body["float"]) where (body != nil and body["float"] != nil)
      - delete_key(cache, "__field_4") where (cache != nil and cache["__field_4"] != nil)
      - set(cache["__field_4"], body["integer"]) where (body != nil and body["integer"] != nil)
      - delete_key(cache, "__field_5") where (cache != nil and cache["__field_5"] != nil)
      - set(cache["__field_5"], body["move_source"]) where (body != nil and body["move_source"] != nil)
      - delete_key(cache, "__field_6") where (cache != nil and cache["__field_6"] != nil)
      - set(cache["__field_6"], body["unnested"]) where (body != nil and body["unnested"] != nil)
      - delete_key(cache, "__field_7") where (cache != nil and cache["__field_7"] != nil)
      - set(cache["__field_7"], body["omitted"]) where (body != nil and body["omitted"] != nil)
      - delete_key(cache, "__field_8") where (cache != nil and cache["__field_8"] != nil)
      - set(cache["__field_8"], attributes["label1"]) where (attributes != nil and attributes["label1"] != nil)
      - delete_key(cache, "__field_9") where (cache != nil and cache["__field_9"] != nil)
      - set(cache["__field_9"], attributes["label3"]) where (attributes != nil and attributes["label3"] != nil)
      - delete_key(cache, "__field_10") where (cache != nil and cache["__field_10"] != nil)
      - set(cache["__field_10"], body) where (body != nil)
      - delete_key(cache, "__field_11") where (cache != nil and cache["__field_11"] != nil)
      - set(cache["__field_11"], body["level"]) where (body != nil and body["level"] != nil)
      - delete_key(cache, "__field_13") where (cache != nil and cache["__field_13"] != nil)
      - set(cache["__field_13"], body["trace"]) where (body != nil and body["trace"] != nil)
      - set(cache["__omit_0"], false)
      - set(cache["__omit_0"], true) where ((body != nil and body["omitted"] != nil) and IsMatch(body["omitted"], "(?i)^-$"))
      - delete_key(body, "move_source") where (body != nil and body["move_source"] != nil)
      - delete_key(body, "trace") where (body != nil and body["trace"] != nil)
      - delete_key(cache, "value") where (cache != nil and cache["value"] != nil)
      - set(cache["value"], cache["__field_0"])
      - set(body["copied"], cache["value"]) where (cache != nil and cache["value"] != nil)
      - delete_key(cache, "value") where (cache != nil and cache["value"] != nil)
      - set(cache["value"], cache["__field_1"])
      - set(cache["value"], "this field was missing") where cache["value"] == nil
      - set(body["default"], cache["value"]) where (cache != nil and cache["value"] != nil)
      - delete_key(cache, "value") where (cache != nil and cache["value"] != nil)
      - set(cache["value"], cache["__field_2"])
      - set(cache["value"], Double(cache["value"]))
      - set(body["float"], cache["value"]) where (cache != nil and cache["value"] != nil)
      - delete_key(cache, "value") where (cache != nil and cache["value"] != nil)
      - set(cache["value"], "world")
      - set(body["hello"], cache["value"]) where (cache != nil and cache["value"] != nil)
      - delete_key(cache, "value") where (cache != nil and cache["value"] != nil)
      - set(cache["value"], cache["__field_4"])
      - set(cache["value"], Int(cache["value"]))
      - set(body["integer"], cache["value"]) where (cache != nil and cache["value"] != nil)
      - delete_key(cache, "value") where (cache != nil and cache["value"] != nil)
      - set(cache["value"], cache["__field_5"])
      - set(body["moved"], cache["value"]) where (cache != nil and cache["value"] != nil)
      - delete_key(cache, "value") where (cache != nil and cache["value"] != nil)
      - set(cache["value"], cache["__field_6"])
      - set(body["nested"]["structure"]["field"], cache["value"]) where (cache != nil and cache["value"] != nil)
      - delete_key(cache, "value") where (cache != nil and cache["value"] != nil)
      - set(cache["value"], cache["__field_7"])
      - set(body["omitted"], cache["value"]) where (cache != nil and cache["value"] != nil)
      - delete_key(body, "omitted") where ((body != nil and body["omitted"] != nil) and cache["__omit_0"] == true)
      - delete_key(cache, "value") where (cache != nil and cache["value"] != nil)
      - set(cache["value"], cache["__field_8"])
      - set(attributes["label2"], cache["value"]) where (cache != nil and cache["value"] != nil)
      - delete_key(cache, "value") where (cache != nil and cache["value"] != nil)
      - set(cache["value"], cache["__field_9"])
      - set(cache["value"], "default") where cache["value"] == nil
      - set(attributes["label3"], cache["value"]) where (cache != nil and cache["value"] != nil)
      - delete_key(cache, "value") where (cache != nil and cache["value"] != nil)
      - set(cache["value"], cache["__field_10"])
      - set(attributes["text"], cache["value"]) where (cache != nil and cache["value"] != nil)
      - delete_key(cache, "value") where (cache != nil and cache["value"] != nil)
      - set(cache["value"], cache["__field_11"])
      - delete_key(cache, "mapped_value") where (cache != nil and cache["mapped_value"] != nil)
      - set(cache["mapped_value"], cache["value"]) where (cache != nil and cache["value"] != nil)
      - set(cache["mapped_value"], "WARNING") where cache["value"] == "CAUTION"
      - set(cache["mapped_value"], "INFO") where cache["value"] == "I"
      - set(cache["mapped_value"], "WARNING") where cache["value"] == "W"
      - set(severity_text, cache["mapped_value"]) where (cache != nil and cache["mapped_value"] != nil)
      - set(severity_number, 0) where (cache != nil and cache["mapped_value"] != nil)
      - delete_key(cache, "value") where (cache != nil and cache["value"] != nil)
      - set(cache["value"], "spanValue")
      - set(span_id.string, cache["value"]) where (cache != nil and cache["value"] != nil)
      - delete_key(cache, "value") where (cache != nil and cache["value"] != nil)
      - set(cache["value"], cache["__field_13"])
      - delete_key(cache, "__setif_value") where (cache != nil and cache["__setif_value"] != nil)
      - set(cache["__setif_value"], cache["value"])
      - replace_pattern(cache["__setif_value"], "^projects/([^/]*)/traces/", "")
      - set(trace_id.string, cache["__setif_value"]) where (cache != nil and cache["value"] != nil)
  transform/otel_1:
    error_mode: ignore
    metric_statements:
    - context: metric
      statements:
      - extract_count_metric(true) where name == "grpc_client_attempt_duration"
  transform/sample__logs_0:
    error_mode: ignore
    log_statements:
    - context: log
      statements:
      - delete_key(cache, "__field_0") where (cache != nil and cache["__field_0"] != nil)
      - set(cache["__field_0"], attributes["compute.googleapis.com/resource_name"]) where (attributes != nil and attributes["compute.googleapis.com/resource_name"] != nil)
      - delete_key(cache, "__field_1") where (cache != nil and cache["__field_1"] != nil)
      - set(cache["__field_1"], attributes["gcp.log_name"]) where (attributes != nil and attributes["gcp.log_name"] != nil)
      - delete_key(cache, "value") where (cache != nil and cache["value"] != nil)
      - set(cache["value"], cache["__field_0"])
      - set(cache["value"], "") where cache["value"] == nil
      - set(attributes["compute.googleapis.com/resource_name"], cache["value"]) where (cache != nil and cache["value"] != nil)
      - delete_key(cache, "value") where (cache != nil and cache["value"] != nil)
      - set(cache["value"], cache["__field_1"])
      - set(cache["value"], "sample_logs") where cache["value"] == nil
      - set(attributes["gcp.log_name"], cache["value"]) where (cache != nil and cache["value"] != nil)
  transform/windows__event__log_0:
    error_mode: ignore
    log_statements:
    - context: log
      statements:
      - delete_key(cache, "__field_0") where (cache != nil and cache["__field_0"] != nil)
      - set(cache["__field_0"], body["channel"]) where (body != nil and body["channel"] != nil)
      - delete_key(cache, "__field_1") where (cache != nil and cache["__field_1"] != nil)
      - set(cache["__field_1"], body["computer"]) where (body != nil and body["computer"] != nil)
      - delete_key(cache, "__field_2") where (cache != nil and cache["__field_2"] != nil)
      - set(cache["__field_2"], body["event_data"]["binary"]) where (body != nil and body["event_data"] != nil and body["event_data"]["binary"] != nil)
      - delete_key(cache, "__field_3") where (cache != nil and cache["__field_3"] != nil)
      - set(cache["__field_3"], body["event_id"]["id"]) where (body != nil and body["event_id"] != nil and body["event_id"]["id"] != nil)
      - delete_key(cache, "__field_4") where (cache != nil and cache["__field_4"] != nil)
      - set(cache["__field_4"], body["level"]) where (body != nil and body["level"] != nil)
      - delete_key(cache, "__field_5") where (cache != nil and cache["__field_5"] != nil)
      - set(cache["__field_5"], body["message"]) where (body != nil and body["message"] != nil)
      - delete_key(cache, "__field_6") where (cache != nil and cache["__field_6"] != nil)
      - set(cache["__field_6"], body["event_id"]["qualifiers"]) where (body != nil and body["event_id"] != nil and body["event_id"]["qualifiers"] != nil)
      - delete_key(cache, "__field_7") where (cache != nil and cache["__field_7"] != nil)
      - set(cache["__field_7"], body["record_id"]) where (body != nil and body["record_id"] != nil)
      - delete_key(cache, "__field_8") where (cache != nil and cache["__field_8"] != nil)
      - set(cache["__field_8"], body["security"]["user_id"]) where (body != nil and body["security"] != nil and body["security"]["user_id"] != nil)
      - delete_key(cache, "__field_9") where (cache != nil and cache["__field_9"] != nil)
      - set(cache["__field_9"], body["provider"]["name"]) where (body != nil and body["provider"] != nil and body["provider"]["name"] != nil)
      - delete_key(cache, "__field_10") where (cache != nil and cache["__field_10"] != nil)
      - set(cache["__field_10"], body["event_data"]["data"]) where (body != nil and body["event_data"] != nil and body["event_data"]["data"] != nil)
      - delete_key(cache, "__field_11") where (cache != nil and cache["__field_11"] != nil)
      - set(cache["__field_11"], body["system_time"]) where (body != nil and body["system_time"] != nil)
      - set(cache["body"], body)
      - keep_keys(body, [])
      - delete_key(cache, "value") where (cache != nil and cache["value"] != nil)
      - set(cache["value"], cache["__field_0"])
      - set(body["Channel"], cache["value"]) where (cache != nil and cache["value"] != nil)
      - delete_key(cache, "value") where (cache != nil and cache["value"] != nil)
      - set(cache["value"], cache["__field_1"])
      - set(body["ComputerName"], cache["value"]) where (cache != nil and cache["value"] != nil)
      - delete_key(cache, "value") where (cache != nil and cache["value"] != nil)
      - set(cache["value"], cache["__field_2"])
      - set(cache["value"], "") where cache["value"] == nil
      - set(cache["value"], ConvertCase(cache["value"], "lower"))
      - set(body["Data"], cache["value"]) where (cache != nil and cache["value"] != nil)
      - delete_key(cache, "value") where (cache != nil and cache["value"] != nil)
      - set(cache["value"], cache["__field_3"])
      - set(body["EventID"], cache["value"]) where (cache != nil and cache["value"] != nil)
      - delete_key(cache, "value") where (cache != nil and cache["value"] != nil)
      - set(cache["value"], cache["__field_4"])
      - set(cache["value"], "SuccessAudit") where ((cache != nil and cache["body"] != nil and cache["body"]["keywords"] != nil) and cache["body"]["keywords"][0] != nil and cache["body"]["keywords"][0] == "Audit Success")
      - set(cache["value"], "FailureAudit") where ((cache != nil and cache["body"] != nil and cache["body"]["keywords"] != nil) and cache["body"]["keywords"][0] != nil and cache["body"]["keywords"][0] == "Audit Failure")
      - set(body["EventType"], cache["value"]) where (cache != nil and cache["value"] != nil)
      - delete_key(cache, "value") where (cache != nil and cache["value"] != nil)
      - set(cache["value"], cache["__field_5"])
      - set(body["Message"], cache["value"]) where (cache != nil and cache["value"] != nil)
      - delete_key(cache, "value") where (cache != nil and cache["value"] != nil)
      - set(cache["value"], cache["__field_6"])
      - set(body["Qualifiers"], cache["value"]) where (cache != nil and cache["value"] != nil)
      - delete_key(cache, "value") where (cache != nil and cache["value"] != nil)
      - set(cache["value"], cache["__field_7"])
      - set(body["RecordNumber"], cache["value"]) where (cache != nil and cache["value"] != nil)
      - delete_key(cache, "value") where (cache != nil and cache["value"] != nil)
      - set(cache["value"], cache["__field_8"])
      - set(cache["value"], "") where cache["value"] == nil
      - set(body["Sid"], cache["value"]) where (cache != nil and cache["value"] != nil)
      - delete_key(cache, "value") where (cache != nil and cache["value"] != nil)
      - set(cache["value"], cache["__field_9"])
      - set(cache["value"], cache["body"]["provider"]["event_source"]) where ((cache != nil and cache["body"] != nil and cache["body"]["provider"] != nil and cache["body"]["provider"]["event_source"] != nil) and (not cache["body"]["provider"]["event_source"] == ""))
      - set(body["SourceName"], cache["value"]) where (cache != nil and cache["value"] != nil)
      - delete_key(cache, "value") where (cache != nil and cache["value"] != nil)
      - set(cache["value"], cache["__field_10"])
      - set(body["StringInserts"], cache["value"]) where (cache != nil and cache["value"] != nil)
      - delete_key(cache, "value") where (cache != nil and cache["value"] != nil)
      - set(cache["value"], cache["__field_11"])
      - set(body["TimeGenerated"], cache["value"]) where (cache != nil and cache["value"] != nil)
      - delete_key(cache, "value") where (cache != nil and cache["value"] != nil)
      - set(cache["value"], cache["__field_11"])
      - set(body["TimeWritten"], cache["value"]) where (cache != nil and cache["value"] != nil)
  transform/windows__event__log_1:
    error_mode: ignore
    log_statements:
    - context: log
      statements:
      - delete_key(cache, "__field_0") where (cache != nil and cache["__field_0"] != nil)
      - set(cache["__field_0"], attributes["compute.googleapis.com/resource_name"]) where (attributes != nil and attributes["compute.googleapis.com/resource_name"] != nil)
      - delete_key(cache, "__field_1") where (cache != nil and cache["__field_1"] != nil)
      - set(cache["__field_1"], attributes["gcp.log_name"]) where (attributes != nil and attributes["gcp.log_name"] != nil)
      - delete_key(cache, "value") where (cache != nil and cache["value"] != nil)
      - set(cache["value"], cache["__field_0"])
      - set(cache["value"], "") where cache["value"] == nil
      - set(attributes["compute.googleapis.com/resource_name"], cache["value"]) where (cache != nil and cache["value"] != nil)
      - delete_key(cache, "value") where (cache != nil and cache["value"] != nil)
      - set(cache["value"], cache["__field_1"])
      - set(cache["value"], "windows_event_log") where cache["value"] == nil
      - set(attributes["gcp.log_name"], cache["value"]) where (cache != nil and cache["value"] != nil)
  transform/windows__event__log_1_0:
    error_mode: ignore
    log_statements:
    - context: log
      statements:
      - delete_key(cache, "__field_0") where (cache != nil and cache["__field_0"] != nil)
      - set(cache["__field_0"], body["channel"]) where (body != nil and body["channel"] != nil)
      - delete_key(cache, "__field_1") where (cache != nil and cache["__field_1"] != nil)
      - set(cache["__field_1"], body["computer"]) where (body != nil and body["computer"] != nil)
      - delete_key(cache, "__field_2") where (cache != nil and cache["__field_2"] != nil)
      - set(cache["__field_2"], body["event_data"]["binary"]) where (body != nil and body["event_data"] != nil and body["event_data"]["binary"] != nil)
      - delete_key(cache, "__field_3") where (cache != nil and cache["__field_3"] != nil)
      - set(cache["__field_3"], body["event_id"]["id"]) where (body != nil and body["event_id"] != nil and body["event_id"]["id"] != nil)
      - delete_key(cache, "__field_4") where (cache != nil and cache["__field_4"] != nil)
      - set(cache["__field_4"], body["level"]) where (body != nil and body["level"] != nil)
      - delete_key(cache, "__field_5") where (cache != nil and cache["__field_5"] != nil)
      - set(cache["__field_5"], body["message"]) where (body != nil and body["message"] != nil)
      - delete_key(cache, "__field_6") where (cache != nil and cache["__field_6"] != nil)
      - set(cache["__field_6"], body["event_id"]["qualifiers"]) where (body != nil and body["event_id"] != nil and body["event_id"]["qualifiers"] != nil)
      - delete_key(cache, "__field_7") where (cache != nil and cache["__field_7"] != nil)
      - set(cache["__field_7"], body["record_id"]) where (body != nil and body["record_id"] != nil)
      - delete_key(cache, "__field_8") where (cache != nil and cache["__field_8"] != nil)
      - set(cache["__field_8"], body["security"]["user_id"]) where (body != nil and body["security"] != nil and body["security"]["user_id"] != nil)
      - delete_key(cache, "__field_9") where (cache != nil and cache["__field_9"] != nil)
      - set(cache["__field_9"], body["provider"]["name"]) where (body != nil and body["provider"] != nil and body["provider"]["name"] != nil)
      - delete_key(cache, "__field_10") where (cache != nil and cache["__field_10"] != nil)
      - set(cache["__field_10"], body["event_data"]["data"]) where (body != nil and body["event_data"] != nil and body["event_data"]["data"] != nil)
      - delete_key(cache, "__field_11") where (cache != nil and cache["__field_11"] != nil)
      - set(cache["__field_11"], body["system_time"]) where (body != nil and body["system_time"] != nil)
      - set(cache["body"], body)
      - keep_keys(body, [])
      - delete_key(cache, "value") where (cache != nil and cache["value"] != nil)
      - set(cache["value"], cache["__field_0"])
      - set(body["Channel"], cache["value"]) where (cache != nil and cache["value"] != nil)
      - delete_key(cache, "value") where (cache != nil and cache["value"] != nil)
      - set(cache["value"], cache["__field_1"])
      - set(body["ComputerName"], cache["value"]) where (cache != nil and cache["value"] != nil)
      - delete_key(cache, "value") where (cache != nil and cache["value"] != nil)
      - set(cache["value"], cache["__field_2"])
      - set(cache["value"], "") where cache["value"] == nil
      - set(cache["value"], ConvertCase(cache["value"], "lower"))
      - set(body["Data"], cache["value"]) where (cache != nil and cache["value"] != nil)
      - delete_key(cache, "value") where (cache != nil and cache["value"] != nil)
      - set(cache["value"], cache["__field_3"])
      - set(body["EventID"], cache["value"]) where (cache != nil and cache["value"] != nil)
      - delete_key(cache, "value") where (cache != nil and cache["value"] != nil)
      - set(cache["value"], cache["__field_4"])
      - set(cache["value"], "SuccessAudit") where ((cache != nil and cache["body"] != nil and cache["body"]["keywords"] != nil) and cache["body"]["keywords"][0] != nil and cache["body"]["keywords"][0] == "Audit Success")
      - set(cache["value"], "FailureAudit") where ((cache != nil and cache["body"] != nil and cache["body"]["keywords"] != nil) and cache["body"]["keywords"][0] != nil and cache["body"]["keywords"][0] == "Audit Failure")
      - set(body["EventType"], cache["value"]) where (cache != nil and cache["value"] != nil)
      - delete_key(cache, "value") where (cache != nil and cache["value"] != nil)
      - set(cache["value"], cache["__field_5"])
      - set(body["Message"], cache["value"]) where (cache != nil and cache["value"] != nil)
      - delete_key(cache, "value") where (cache != nil and cache["value"] != nil)
      - set(cache["value"], cache["__field_6"])
      - set(body["Qualifiers"], cache["value"]) where (cache != nil and cache["value"] != nil)
      - delete_key(cache, "value") where (cache != nil and cache["value"] != nil)
      - set(cache["value"], cache["__field_7"])
      - set(body["RecordNumber"], cache["value"]) where (cache != nil and cache["value"] != nil)
      - delete_key(cache, "value") where (cache != nil and cache["value"] != nil)
      - set(cache["value"], cache["__field_8"])
      - set(cache["value"], "") where cache["value"] == nil
      - set(body["Sid"], cache["value"]) where (cache != nil and cache["value"] != nil)
      - delete_key(cache, "value") where (cache != nil and cache["value"] != nil)
      - set(cache["value"], cache["__field_9"])
      - set(cache["value"], cache["body"]["provider"]["event_source"]) where ((cache != nil and cache["body"] != nil and cache["body"]["provider"] != nil and cache["body"]["provider"]["event_source"] != nil) and (not cache["body"]["provider"]["event_source"] == ""))
      - set(body["SourceName"], cache["value"]) where (cache != nil and cache["value"] != nil)
      - delete_key(cache, "value") where (cache != nil and cache["value"] != nil)
      - set(cache["value"], cache["__field_10"])
      - set(body["StringInserts"], cache["value"]) where (cache != nil and cache["value"] != nil)
      - delete_key(cache, "value") where (cache != nil and cache["value"] != nil)
      - set(cache["value"], cache["__field_11"])
      - set(body["TimeGenerated"], cache["value"]) where (cache != nil and cache["value"] != nil)
      - delete_key(cache, "value") where (cache != nil and cache["value"] != nil)
      - set(cache["value"], cache["__field_11"])
      - set(body["TimeWritten"], cache["value"]) where (cache != nil and cache["value"] != nil)
  transform/windows__event__log_1_1:
    error_mode: ignore
    log_statements:
    - context: log
      statements:
      - delete_key(cache, "__field_0") where (cache != nil and cache["__field_0"] != nil)
      - set(cache["__field_0"], attributes["compute.googleapis.com/resource_name"]) where (attributes != nil and attributes["compute.googleapis.com/resource_name"] != nil)
      - delete_key(cache, "__field_1") where (cache != nil and cache["__field_1"] != nil)
      - set(cache["__field_1"], attributes["gcp.log_name"]) where (attributes != nil and attributes["gcp.log_name"] != nil)
      - delete_key(cache, "value") where (cache != nil and cache["value"] != nil)
      - set(cache["value"], cache["__field_0"])
      - set(cache["value"], "") where cache["value"] == nil
      - set(attributes["compute.googleapis.com/resource_name"], cache["value"]) where (cache != nil and cache["value"] != nil)
      - delete_key(cache, "value") where (cache != nil and cache["value"] != nil)
      - set(cache["value"], cache["__field_1"])
      - set(cache["value"], "windows_event_log") where cache["value"] == nil
      - set(attributes["gcp.log_name"], cache["value"]) where (cache != nil and cache["value"] != nil)
  transform/windows__event__log_2_0:
    error_mode: ignore
    log_statements:
    - context: log
      statements:
      - delete_key(cache, "__field_0") where (cache != nil and cache["__field_0"] != nil)
      - set(cache["__field_0"], body["channel"]) where (body != nil and body["channel"] != nil)
      - delete_key(cache, "__field_1") where (cache != nil and cache["__field_1"] != nil)
      - set(cache["__field_1"], body["computer"]) where (body != nil and body["computer"] != nil)
      - delete_key(cache, "__field_2") where (cache != nil and cache["__field_2"] != nil)
      - set(cache["__field_2"], body["event_data"]["binary"]) where (body != nil and body["event_data"] != nil and body["event_data"]["binary"] != nil)
      - delete_key(cache, "__field_3") where (cache != nil and cache["__field_3"] != nil)
      - set(cache["__field_3"], body["event_id"]["id"]) where (body != nil and body["event_id"] != nil and body["event_id"]["id"] != nil)
      - delete_key(cache, "__field_4") where (cache != nil and cache["__field_4"] != nil)
      - set(cache["__field_4"], body["level"]) where (body != nil and body["level"] != nil)
      - delete_key(cache, "__field_5") where (cache != nil and cache["__field_5"] != nil)
      - set(cache["__field_5"], body["message"]) where (body != nil and body["message"] != nil)
      - delete_key(cache, "__field_6") where (cache != nil and cache["__field_6"] != nil)
      - set(cache["__field_6"], body["event_id"]["qualifiers"]) where (body != nil and body["event_id"] != nil and body["event_id"]["qualifiers"] != nil)
      - delete_key(cache, "__field_7") where (cache != nil and cache["__field_7"] != nil)
      - set(cache["__field_7"], body["record_id"]) where (body != nil and body["record_id"] != nil)
      - delete_key(cache, "__field_8") where (cache != nil and cache["__field_8"] != nil)
      - set(cache["__field_8"], body["security"]["user_id"]) where (body != nil and body["security"] != nil and body["security"]["user_id"] != nil)
      - delete_key(cache, "__field_9") where (cache != nil and cache["__field_9"] != nil)
      - set(cache["__field_9"], body["provider"]["name"]) where (body != nil and body["provider"] != nil and body["provider"]["name"] != nil)
      - delete_key(cache, "__field_10") where (cache != nil and cache["__field_10"] != nil)
      - set(cache["__field_10"], body["event_data"]["data"]) where (body != nil and body["event_data"] != nil and body["event_data"]["data"] != nil)
      - delete_key(cache, "__field_11") where (cache != nil and cache["__field_11"] != nil)
      - set(cache["__field_11"], body["system_time"]) where (body != nil and body["system_time"] != nil)
      - set(cache["body"], body)
      - keep_keys(body, [])
      - delete_key(cache, "value") where (cache != nil and cache["value"] != nil)
      - set(cache["value"], cache["__field_0"])
      - set(body["Channel"], cache["value"]) where (cache != nil and cache["value"] != nil)
      - delete_key(cache, "value") where (cache != nil and cache["value"] != nil)
      - set(cache["value"], cache["__field_1"])
      - set(body["ComputerName"], cache["value"]) where (cache != nil and cache["value"] != nil)
      - delete_key(cache, "value") where (cache != nil and cache["value"] != nil)
      - set(cache["value"], cache["__field_2"])
      - set(cache["value"], "") where cache["value"] == nil
      - set(cache["value"], ConvertCase(cache["value"], "lower"))
      - set(body["Data"], cache["value"]) where (cache != nil and cache["value"] != nil)
      - delete_key(cache, "value") where (cache != nil and cache["value"] != nil)
      - set(cache["value"], cache["__field_3"])
      - set(body["EventID"], cache["value"]) where (cache != nil and cache["value"] != nil)
      - delete_key(cache, "value") where (cache != nil and cache["value"] != nil)
      - set(cache["value"], cache["__field_4"])
      - set(cache["value"], "SuccessAudit") where ((cache != nil and cache["body"] != nil and cache["body"]["keywords"] != nil) and cache["body"]["keywords"][0] != nil and cache["body"]["keywords"][0] == "Audit Success")
      - set(cache["value"], "FailureAudit") where ((cache != nil and cache["body"] != nil and cache["body"]["keywords"] != nil) and cache["body"]["keywords"][0] != nil and cache["body"]["keywords"][0] == "Audit Failure")
      - set(body["EventType"], cache["value"]) where (cache != nil and cache["value"] != nil)
      - delete_key(cache, "value") where (cache != nil and cache["value"] != nil)
      - set(cache["value"], cache["__field_5"])
      - set(body["Message"], cache["value"]) where (cache != nil and cache["value"] != nil)
      - delete_key(cache, "value") where (cache != nil and cache["value"] != nil)
      - set(cache["value"], cache["__field_6"])
      - set(body["Qualifiers"], cache["value"]) where (cache != nil and cache["value"] != nil)
      - delete_key(cache, "value") where (cache != nil and cache["value"] != nil)
      - set(cache["value"], cache["__field_7"])
      - set(body["RecordNumber"], cache["value"]) where (cache != nil and cache["value"] != nil)
      - delete_key(cache, "value") where (cache != nil and cache["value"] != nil)
      - set(cache["value"], cache["__field_8"])
      - set(cache["value"], "") where cache["value"] == nil
      - set(body["Sid"], cache["value"]) where (cache != nil and cache["value"] != nil)
      - delete_key(cache, "value") where (cache != nil and cache["value"] != nil)
      - set(cache["value"], cache["__field_9"])
      - set(cache["value"], cache["body"]["provider"]["event_source"]) where ((cache != nil and cache["body"] != nil and cache["body"]["provider"] != nil and cache["body"]["provider"]["event_source"] != nil) and (not cache["body"]["provider"]["event_source"] == ""))
      - set(body["SourceName"], cache["value"]) where (cache != nil and cache["value"] != nil)
      - delete_key(cache, "value") where (cache != nil and cache["value"] != nil)
      - set(cache["value"], cache["__field_10"])
      - set(body["StringInserts"], cache["value"]) where (cache != nil and cache["value"] != nil)
      - delete_key(cache, "value") where (cache != nil and cache["value"] != nil)
      - set(cache["value"], cache["__field_11"])
      - set(body["TimeGenerated"], cache["value"]) where (cache != nil and cache["value"] != nil)
      - delete_key(cache, "value") where (cache != nil and cache["value"] != nil)
      - set(cache["value"], cache["__field_11"])
      - set(body["TimeWritten"], cache["value"]) where (cache != nil and cache["value"] != nil)
  transform/windows__event__log_2_1:
    error_mode: ignore
    log_statements:
    - context: log
      statements:
      - delete_key(cache, "__field_0") where (cache != nil and cache["__field_0"] != nil)
      - set(cache["__field_0"], attributes["compute.googleapis.com/resource_name"]) where (attributes != nil and attributes["compute.googleapis.com/resource_name"] != nil)
      - delete_key(cache, "__field_1") where (cache != nil and cache["__field_1"] != nil)
      - set(cache["__field_1"], attributes["gcp.log_name"]) where (attributes != nil and attributes["gcp.log_name"] != nil)
      - delete_key(cache, "value") where (cache != nil and cache["value"] != nil)
      - set(cache["value"], cache["__field_0"])
      - set(cache["value"], "") where cache["value"] == nil
      - set(attributes["compute.googleapis.com/resource_name"], cache["value"]) where (cache != nil and cache["value"] != nil)
      - delete_key(cache, "value") where (cache != nil and cache["value"] != nil)
      - set(cache["value"], cache["__field_1"])
      - set(cache["value"], "windows_event_log") where cache["value"] == nil
      - set(attributes["gcp.log_name"], cache["value"]) where (cache != nil and cache["value"] != nil)
receivers:
  filelog/sample__logs:
    exclude: []
    include:
    - /tmp/*.log
    include_file_name: false
    operators:
    - from: body
      id: body
      to: body.message
      type: move
    start_at: beginning
  hostmetrics/hostmetrics:
    collection_interval: 60s
    scrapers:
      cpu: {}
      disk: {}
      filesystem: {}
      load: {}
      memory: {}
      network: {}
      paging: {}
      process:
        metrics:
          process.handles:
            enabled: true
        mute_process_exe_error: true
        mute_process_name_error: true
      processes: {}
  prometheus/fluentbit:
    config:
      scrape_configs:
      - job_name: logging-collector
        metrics_path: /metrics
        scrape_interval: 1m
        static_configs:
        - targets:
          - 0.0.0.0:20202
  prometheus/otel:
    config:
      scrape_configs:
      - job_name: otel-collector
        scrape_interval: 1m
        static_configs:
        - targets:
          - 0.0.0.0:20201
  windowseventlog/windows__event__log:
    channel: System
    poll_interval: 1s
    start_at: beginning
  windowseventlog/windows__event__log_1:
    channel: Application
    poll_interval: 1s
    start_at: beginning
  windowseventlog/windows__event__log_2:
    channel: Security
    poll_interval: 1s
    start_at: beginning
  windowsperfcounters/iis:
    collection_interval: 60s
    perfcounters:
    - counters:
      - name: Current Connections
      - name: Total Bytes Received
      - name: Total Bytes Sent
      - name: Total Connection Attempts (all instances)
      - name: Total Delete Requests
      - name: Total Get Requests
      - name: Total Head Requests
      - name: Total Options Requests
      - name: Total Post Requests
      - name: Total Put Requests
      - name: Total Trace Requests
      instances:
      - _Total
      object: Web Service
  windowsperfcounters/mssql:
    collection_interval: 60s
    perfcounters:
    - counters:
      - name: User Connections
      instances:
      - _Total
      object: SQLServer:General Statistics
    - counters:
      - name: Transactions/sec
      - name: Write Transactions/sec
      instances:
      - _Total
      object: SQLServer:Databases
service:
  pipelines:
    logs/logs_default__pipeline_windows__event__log:
      exporters:
      - googlecloud/otel
      processors:
      - transform/windows__event__log_0
      - transform/windows__event__log_1
      - resourcedetection/_global_0
      receivers:
      - windowseventlog/windows__event__log
    logs/logs_default__pipeline_windows__event__log_1:
      exporters:
      - googlecloud/otel
      processors:
      - transform/windows__event__log_1_0
      - transform/windows__event__log_1_1
      - resourcedetection/_global_0
      receivers:
      - windowseventlog/windows__event__log_1
    logs/logs_default__pipeline_windows__event__log_2:
      exporters:
      - googlecloud/otel
      processors:
      - transform/windows__event__log_2_0
      - transform/windows__event__log_2_1
      - resourcedetection/_global_0
      receivers:
      - windowseventlog/windows__event__log_2
    logs/logs_p1_sample__logs:
      exporters:
      - googlecloud/otel
      processors:
      - transform/sample__logs_0
      - transform/logs_p1_sample__logs_0
      - resourcedetection/_global_0
      receivers:
      - filelog/sample__logs
    metrics/default__pipeline_hostmetrics:
      exporters:
      - googlecloud
      processors:
      - agentmetrics/hostmetrics_0
      - filter/hostmetrics_1
      - metricstransform/hostmetrics_2
      - filter/default__pipeline_hostmetrics_0
      - resourcedetection/_global_0
      receivers:
      - hostmetrics/hostmetrics
    metrics/default__pipeline_iis:
      exporters:
      - googlecloud
      processors:
      - metricstransform/iis_0
      - casttosum/iis_1
      - normalizesums/iis_2
      - modifyscope/iis_3
      - filter/default__pipeline_iis_0
      - resourcedetection/_global_0
      receivers:
      - windowsperfcounters/iis
    metrics/default__pipeline_mssql:
      exporters:
      - googlecloud
      processors:
      - metricstransform/mssql_0
      - modifyscope/mssql_1
      - filter/default__pipeline_mssql_0
      - resourcedetection/_global_0
      receivers:
      - windowsperfcounters/mssql
    metrics/fluentbit:
      exporters:
      - googlecloud
      processors:
      - filter/fluentbit_0
      - metricstransform/fluentbit_1
      - resourcedetection/_global_0
      receivers:
      - prometheus/fluentbit
    metrics/otel:
      exporters:
      - googlecloud
      processors:
      - filter/otel_0
      - transform/otel_1
      - filter/otel_2
      - metricstransform/otel_3
      - resourcedetection/_global_0
      receivers:
      - prometheus/otel
  telemetry:
    metrics:
      address: 0.0.0.0:20201
