// Code generated by gocc; DO NOT EDIT.

package parser

type (
	actionTable [numStates]actionRow
	actionRow   struct {
		canRecover bool
		actions    [numSymbols]action
	}
)

var actionTab = actionTable{
	actionRow{ // S0
		canRecover: false,
		actions: [numSymbols]action{
			nil,       // INVALID
			nil,       // $
			shift(3),  // ws
			nil,       // andOp
			nil,       // orOp
			shift(8),  // not
			shift(9),  // minus
			nil,       // dot
			shift(15), // lparen
			nil,       // rparen
			shift(17), // text
			shift(19), // string
			nil,       // or
			nil,       // and
			nil,       // less_equals
			nil,       // less_than
			nil,       // greater_equals
			nil,       // greater_than
			nil,       // not_equals
			nil,       // equals
			nil,       // has
			nil,       // matches_regexp
			nil,       // not_matches_regexp
			nil,       // backslash
			nil,       // comma
			nil,       // plus
			nil,       // tilde
		},
	},
	actionRow{ // S1
		canRecover: false,
		actions: [numSymbols]action{
			nil,          // INVALID
			accept(true), // $
			nil,          // ws
			nil,          // andOp
			nil,          // orOp
			nil,          // not
			nil,          // minus
			nil,          // dot
			nil,          // lparen
			nil,          // rparen
			nil,          // text
			nil,          // string
			nil,          // or
			nil,          // and
			nil,          // less_equals
			nil,          // less_than
			nil,          // greater_equals
			nil,          // greater_than
			nil,          // not_equals
			nil,          // equals
			nil,          // has
			nil,          // matches_regexp
			nil,          // not_matches_regexp
			nil,          // backslash
			nil,          // comma
			nil,          // plus
			nil,          // tilde
		},
	},
	actionRow{ // S2
		canRecover: false,
		actions: [numSymbols]action{
			nil,       // INVALID
			reduce(1), // $, reduce: Filter
			shift(20), // ws
			shift(21), // andOp
			nil,       // orOp
			nil,       // not
			nil,       // minus
			nil,       // dot
			nil,       // lparen
			nil,       // rparen
			nil,       // text
			nil,       // string
			nil,       // or
			nil,       // and
			nil,       // less_equals
			nil,       // less_than
			nil,       // greater_equals
			nil,       // greater_than
			nil,       // not_equals
			nil,       // equals
			nil,       // has
			nil,       // matches_regexp
			nil,       // not_matches_regexp
			nil,       // backslash
			nil,       // comma
			nil,       // plus
			nil,       // tilde
		},
	},
	actionRow{ // S3
		canRecover: false,
		actions: [numSymbols]action{
			nil,       // INVALID
			nil,       // $
			nil,       // ws
			nil,       // andOp
			nil,       // orOp
			shift(8),  // not
			shift(9),  // minus
			nil,       // dot
			shift(15), // lparen
			nil,       // rparen
			shift(17), // text
			shift(19), // string
			nil,       // or
			nil,       // and
			nil,       // less_equals
			nil,       // less_than
			nil,       // greater_equals
			nil,       // greater_than
			nil,       // not_equals
			nil,       // equals
			nil,       // has
			nil,       // matches_regexp
			nil,       // not_matches_regexp
			nil,       // backslash
			nil,       // comma
			nil,       // plus
			nil,       // tilde
		},
	},
	actionRow{ // S4
		canRecover: false,
		actions: [numSymbols]action{
			nil,       // INVALID
			reduce(5), // $, reduce: Expression
			shift(23), // ws
			reduce(5), // andOp, reduce: Expression
			nil,       // orOp
			nil,       // not
			nil,       // minus
			nil,       // dot
			nil,       // lparen
			nil,       // rparen
			nil,       // text
			nil,       // string
			nil,       // or
			nil,       // and
			nil,       // less_equals
			nil,       // less_than
			nil,       // greater_equals
			nil,       // greater_than
			nil,       // not_equals
			nil,       // equals
			nil,       // has
			nil,       // matches_regexp
			nil,       // not_matches_regexp
			nil,       // backslash
			nil,       // comma
			nil,       // plus
			nil,       // tilde
		},
	},
	actionRow{ // S5
		canRecover: false,
		actions: [numSymbols]action{
			nil,       // INVALID
			reduce(7), // $, reduce: AmbiguousSequence
			reduce(7), // ws, reduce: AmbiguousSequence
			reduce(7), // andOp, reduce: AmbiguousSequence
			shift(24), // orOp
			nil,       // not
			nil,       // minus
			nil,       // dot
			nil,       // lparen
			nil,       // rparen
			nil,       // text
			nil,       // string
			nil,       // or
			nil,       // and
			nil,       // less_equals
			nil,       // less_than
			nil,       // greater_equals
			nil,       // greater_than
			nil,       // not_equals
			nil,       // equals
			nil,       // has
			nil,       // matches_regexp
			nil,       // not_matches_regexp
			nil,       // backslash
			nil,       // comma
			nil,       // plus
			nil,       // tilde
		},
	},
	actionRow{ // S6
		canRecover: false,
		actions: [numSymbols]action{
			nil,       // INVALID
			reduce(9), // $, reduce: AmbiguousFactor
			reduce(9), // ws, reduce: AmbiguousFactor
			reduce(9), // andOp, reduce: AmbiguousFactor
			reduce(9), // orOp, reduce: AmbiguousFactor
			nil,       // not
			nil,       // minus
			nil,       // dot
			nil,       // lparen
			nil,       // rparen
			nil,       // text
			nil,       // string
			nil,       // or
			nil,       // and
			nil,       // less_equals
			nil,       // less_than
			nil,       // greater_equals
			nil,       // greater_than
			nil,       // not_equals
			nil,       // equals
			nil,       // has
			nil,       // matches_regexp
			nil,       // not_matches_regexp
			nil,       // backslash
			nil,       // comma
			nil,       // plus
			nil,       // tilde
		},
	},
	actionRow{ // S7
		canRecover: false,
		actions: [numSymbols]action{
			nil,        // INVALID
			reduce(11), // $, reduce: Term
			reduce(11), // ws, reduce: Term
			reduce(11), // andOp, reduce: Term
			reduce(11), // orOp, reduce: Term
			nil,        // not
			nil,        // minus
			nil,        // dot
			nil,        // lparen
			nil,        // rparen
			nil,        // text
			nil,        // string
			nil,        // or
			nil,        // and
			nil,        // less_equals
			nil,        // less_than
			nil,        // greater_equals
			nil,        // greater_than
			nil,        // not_equals
			nil,        // equals
			nil,        // has
			nil,        // matches_regexp
			nil,        // not_matches_regexp
			nil,        // backslash
			nil,        // comma
			nil,        // plus
			nil,        // tilde
		},
	},
	actionRow{ // S8
		canRecover: false,
		actions: [numSymbols]action{
			nil,       // INVALID
			nil,       // $
			shift(25), // ws
			nil,       // andOp
			nil,       // orOp
			nil,       // not
			nil,       // minus
			nil,       // dot
			shift(15), // lparen
			nil,       // rparen
			shift(17), // text
			shift(19), // string
			nil,       // or
			nil,       // and
			nil,       // less_equals
			nil,       // less_than
			nil,       // greater_equals
			nil,       // greater_than
			nil,       // not_equals
			nil,       // equals
			nil,       // has
			nil,       // matches_regexp
			nil,       // not_matches_regexp
			nil,       // backslash
			nil,       // comma
			nil,       // plus
			nil,       // tilde
		},
	},
	actionRow{ // S9
		canRecover: false,
		actions: [numSymbols]action{
			nil,       // INVALID
			nil,       // $
			nil,       // ws
			nil,       // andOp
			nil,       // orOp
			nil,       // not
			nil,       // minus
			nil,       // dot
			shift(15), // lparen
			nil,       // rparen
			shift(17), // text
			shift(19), // string
			nil,       // or
			nil,       // and
			nil,       // less_equals
			nil,       // less_than
			nil,       // greater_equals
			nil,       // greater_than
			nil,       // not_equals
			nil,       // equals
			nil,       // has
			nil,       // matches_regexp
			nil,       // not_matches_regexp
			nil,       // backslash
			nil,       // comma
			nil,       // plus
			nil,       // tilde
		},
	},
	actionRow{ // S10
		canRecover: false,
		actions: [numSymbols]action{
			nil,        // INVALID
			reduce(15), // $, reduce: Primitive
			reduce(15), // ws, reduce: Primitive
			reduce(15), // andOp, reduce: Primitive
			reduce(15), // orOp, reduce: Primitive
			nil,        // not
			nil,        // minus
			nil,        // dot
			nil,        // lparen
			nil,        // rparen
			nil,        // text
			nil,        // string
			nil,        // or
			nil,        // and
			nil,        // less_equals
			nil,        // less_than
			nil,        // greater_equals
			nil,        // greater_than
			nil,        // not_equals
			nil,        // equals
			nil,        // has
			nil,        // matches_regexp
			nil,        // not_matches_regexp
			nil,        // backslash
			nil,        // comma
			nil,        // plus
			nil,        // tilde
		},
	},
	actionRow{ // S11
		canRecover: false,
		actions: [numSymbols]action{
			nil,        // INVALID
			reduce(16), // $, reduce: Primitive
			reduce(16), // ws, reduce: Primitive
			reduce(16), // andOp, reduce: Primitive
			reduce(16), // orOp, reduce: Primitive
			nil,        // not
			nil,        // minus
			nil,        // dot
			nil,        // lparen
			nil,        // rparen
			nil,        // text
			nil,        // string
			nil,        // or
			nil,        // and
			nil,        // less_equals
			nil,        // less_than
			nil,        // greater_equals
			nil,        // greater_than
			nil,        // not_equals
			nil,        // equals
			nil,        // has
			nil,        // matches_regexp
			nil,        // not_matches_regexp
			nil,        // backslash
			nil,        // comma
			nil,        // plus
			nil,        // tilde
		},
	},
	actionRow{ // S12
		canRecover: false,
		actions: [numSymbols]action{
			nil,        // INVALID
			reduce(17), // $, reduce: Restriction
			shift(28),  // ws
			reduce(17), // andOp, reduce: Restriction
			reduce(17), // orOp, reduce: Restriction
			nil,        // not
			nil,        // minus
			nil,        // dot
			nil,        // lparen
			nil,        // rparen
			nil,        // text
			nil,        // string
			nil,        // or
			nil,        // and
			shift(31),  // less_equals
			shift(32),  // less_than
			shift(33),  // greater_equals
			shift(34),  // greater_than
			shift(35),  // not_equals
			shift(36),  // equals
			shift(37),  // has
			shift(38),  // matches_regexp
			shift(39),  // not_matches_regexp
			nil,        // backslash
			nil,        // comma
			nil,        // plus
			nil,        // tilde
		},
	},
	actionRow{ // S13
		canRecover: false,
		actions: [numSymbols]action{
			nil,        // INVALID
			reduce(19), // $, reduce: Comparable
			reduce(19), // ws, reduce: Comparable
			reduce(19), // andOp, reduce: Comparable
			reduce(19), // orOp, reduce: Comparable
			nil,        // not
			nil,        // minus
			shift(40),  // dot
			nil,        // lparen
			nil,        // rparen
			nil,        // text
			nil,        // string
			nil,        // or
			nil,        // and
			reduce(19), // less_equals, reduce: Comparable
			reduce(19), // less_than, reduce: Comparable
			reduce(19), // greater_equals, reduce: Comparable
			reduce(19), // greater_than, reduce: Comparable
			reduce(19), // not_equals, reduce: Comparable
			reduce(19), // equals, reduce: Comparable
			reduce(19), // has, reduce: Comparable
			reduce(19), // matches_regexp, reduce: Comparable
			reduce(19), // not_matches_regexp, reduce: Comparable
			nil,        // backslash
			nil,        // comma
			nil,        // plus
			nil,        // tilde
		},
	},
	actionRow{ // S14
		canRecover: false,
		actions: [numSymbols]action{
			nil,        // INVALID
			reduce(20), // $, reduce: Member
			reduce(20), // ws, reduce: Member
			reduce(20), // andOp, reduce: Member
			reduce(20), // orOp, reduce: Member
			nil,        // not
			nil,        // minus
			reduce(20), // dot, reduce: Member
			nil,        // lparen
			nil,        // rparen
			nil,        // text
			nil,        // string
			nil,        // or
			nil,        // and
			reduce(20), // less_equals, reduce: Member
			reduce(20), // less_than, reduce: Member
			reduce(20), // greater_equals, reduce: Member
			reduce(20), // greater_than, reduce: Member
			reduce(20), // not_equals, reduce: Member
			reduce(20), // equals, reduce: Member
			reduce(20), // has, reduce: Member
			reduce(20), // matches_regexp, reduce: Member
			reduce(20), // not_matches_regexp, reduce: Member
			nil,        // backslash
			nil,        // comma
			nil,        // plus
			nil,        // tilde
		},
	},
	actionRow{ // S15
		canRecover: false,
		actions: [numSymbols]action{
			nil,       // INVALID
			nil,       // $
			shift(42), // ws
			nil,       // andOp
			nil,       // orOp
			shift(47), // not
			shift(48), // minus
			nil,       // dot
			shift(54), // lparen
			nil,       // rparen
			shift(56), // text
			shift(58), // string
			nil,       // or
			nil,       // and
			nil,       // less_equals
			nil,       // less_than
			nil,       // greater_equals
			nil,       // greater_than
			nil,       // not_equals
			nil,       // equals
			nil,       // has
			nil,       // matches_regexp
			nil,       // not_matches_regexp
			nil,       // backslash
			nil,       // comma
			nil,       // plus
			nil,       // tilde
		},
	},
	actionRow{ // S16
		canRecover: false,
		actions: [numSymbols]action{
			nil,        // INVALID
			reduce(27), // $, reduce: Item
			reduce(27), // ws, reduce: Item
			reduce(27), // andOp, reduce: Item
			reduce(27), // orOp, reduce: Item
			nil,        // not
			nil,        // minus
			reduce(27), // dot, reduce: Item
			nil,        // lparen
			nil,        // rparen
			nil,        // text
			nil,        // string
			nil,        // or
			nil,        // and
			reduce(27), // less_equals, reduce: Item
			reduce(27), // less_than, reduce: Item
			reduce(27), // greater_equals, reduce: Item
			reduce(27), // greater_than, reduce: Item
			reduce(27), // not_equals, reduce: Item
			reduce(27), // equals, reduce: Item
			reduce(27), // has, reduce: Item
			reduce(27), // matches_regexp, reduce: Item
			reduce(27), // not_matches_regexp, reduce: Item
			nil,        // backslash
			nil,        // comma
			nil,        // plus
			nil,        // tilde
		},
	},
	actionRow{ // S17
		canRecover: false,
		actions: [numSymbols]action{
			nil,        // INVALID
			reduce(28), // $, reduce: Value
			reduce(28), // ws, reduce: Value
			reduce(28), // andOp, reduce: Value
			reduce(28), // orOp, reduce: Value
			nil,        // not
			nil,        // minus
			reduce(28), // dot, reduce: Value
			nil,        // lparen
			nil,        // rparen
			nil,        // text
			nil,        // string
			nil,        // or
			nil,        // and
			reduce(28), // less_equals, reduce: Value
			reduce(28), // less_than, reduce: Value
			reduce(28), // greater_equals, reduce: Value
			reduce(28), // greater_than, reduce: Value
			reduce(28), // not_equals, reduce: Value
			reduce(28), // equals, reduce: Value
			reduce(28), // has, reduce: Value
			reduce(28), // matches_regexp, reduce: Value
			reduce(28), // not_matches_regexp, reduce: Value
			nil,        // backslash
			nil,        // comma
			nil,        // plus
			nil,        // tilde
		},
	},
	actionRow{ // S18
		canRecover: false,
		actions: [numSymbols]action{
			nil,        // INVALID
			reduce(29), // $, reduce: Value
			reduce(29), // ws, reduce: Value
			reduce(29), // andOp, reduce: Value
			reduce(29), // orOp, reduce: Value
			nil,        // not
			nil,        // minus
			reduce(29), // dot, reduce: Value
			nil,        // lparen
			nil,        // rparen
			nil,        // text
			nil,        // string
			nil,        // or
			nil,        // and
			reduce(29), // less_equals, reduce: Value
			reduce(29), // less_than, reduce: Value
			reduce(29), // greater_equals, reduce: Value
			reduce(29), // greater_than, reduce: Value
			reduce(29), // not_equals, reduce: Value
			reduce(29), // equals, reduce: Value
			reduce(29), // has, reduce: Value
			reduce(29), // matches_regexp, reduce: Value
			reduce(29), // not_matches_regexp, reduce: Value
			nil,        // backslash
			nil,        // comma
			nil,        // plus
			nil,        // tilde
		},
	},
	actionRow{ // S19
		canRecover: false,
		actions: [numSymbols]action{
			nil,        // INVALID
			reduce(30), // $, reduce: Phrase
			reduce(30), // ws, reduce: Phrase
			reduce(30), // andOp, reduce: Phrase
			reduce(30), // orOp, reduce: Phrase
			nil,        // not
			nil,        // minus
			reduce(30), // dot, reduce: Phrase
			nil,        // lparen
			nil,        // rparen
			nil,        // text
			nil,        // string
			nil,        // or
			nil,        // and
			reduce(30), // less_equals, reduce: Phrase
			reduce(30), // less_than, reduce: Phrase
			reduce(30), // greater_equals, reduce: Phrase
			reduce(30), // greater_than, reduce: Phrase
			reduce(30), // not_equals, reduce: Phrase
			reduce(30), // equals, reduce: Phrase
			reduce(30), // has, reduce: Phrase
			reduce(30), // matches_regexp, reduce: Phrase
			reduce(30), // not_matches_regexp, reduce: Phrase
			nil,        // backslash
			nil,        // comma
			nil,        // plus
			nil,        // tilde
		},
	},
	actionRow{ // S20
		canRecover: false,
		actions: [numSymbols]action{
			nil,       // INVALID
			reduce(3), // $, reduce: Filter
			nil,       // ws
			nil,       // andOp
			nil,       // orOp
			nil,       // not
			nil,       // minus
			nil,       // dot
			nil,       // lparen
			nil,       // rparen
			nil,       // text
			nil,       // string
			nil,       // or
			nil,       // and
			nil,       // less_equals
			nil,       // less_than
			nil,       // greater_equals
			nil,       // greater_than
			nil,       // not_equals
			nil,       // equals
			nil,       // has
			nil,       // matches_regexp
			nil,       // not_matches_regexp
			nil,       // backslash
			nil,       // comma
			nil,       // plus
			nil,       // tilde
		},
	},
	actionRow{ // S21
		canRecover: false,
		actions: [numSymbols]action{
			nil,       // INVALID
			nil,       // $
			nil,       // ws
			nil,       // andOp
			nil,       // orOp
			shift(8),  // not
			shift(9),  // minus
			nil,       // dot
			shift(15), // lparen
			nil,       // rparen
			shift(17), // text
			shift(19), // string
			nil,       // or
			nil,       // and
			nil,       // less_equals
			nil,       // less_than
			nil,       // greater_equals
			nil,       // greater_than
			nil,       // not_equals
			nil,       // equals
			nil,       // has
			nil,       // matches_regexp
			nil,       // not_matches_regexp
			nil,       // backslash
			nil,       // comma
			nil,       // plus
			nil,       // tilde
		},
	},
	actionRow{ // S22
		canRecover: false,
		actions: [numSymbols]action{
			nil,       // INVALID
			reduce(2), // $, reduce: Filter
			shift(60), // ws
			shift(21), // andOp
			nil,       // orOp
			nil,       // not
			nil,       // minus
			nil,       // dot
			nil,       // lparen
			nil,       // rparen
			nil,       // text
			nil,       // string
			nil,       // or
			nil,       // and
			nil,       // less_equals
			nil,       // less_than
			nil,       // greater_equals
			nil,       // greater_than
			nil,       // not_equals
			nil,       // equals
			nil,       // has
			nil,       // matches_regexp
			nil,       // not_matches_regexp
			nil,       // backslash
			nil,       // comma
			nil,       // plus
			nil,       // tilde
		},
	},
	actionRow{ // S23
		canRecover: false,
		actions: [numSymbols]action{
			nil,       // INVALID
			nil,       // $
			nil,       // ws
			nil,       // andOp
			nil,       // orOp
			shift(8),  // not
			shift(9),  // minus
			nil,       // dot
			shift(15), // lparen
			nil,       // rparen
			shift(17), // text
			shift(19), // string
			nil,       // or
			nil,       // and
			nil,       // less_equals
			nil,       // less_than
			nil,       // greater_equals
			nil,       // greater_than
			nil,       // not_equals
			nil,       // equals
			nil,       // has
			nil,       // matches_regexp
			nil,       // not_matches_regexp
			nil,       // backslash
			nil,       // comma
			nil,       // plus
			nil,       // tilde
		},
	},
	actionRow{ // S24
		canRecover: false,
		actions: [numSymbols]action{
			nil,       // INVALID
			nil,       // $
			nil,       // ws
			nil,       // andOp
			nil,       // orOp
			shift(8),  // not
			shift(9),  // minus
			nil,       // dot
			shift(15), // lparen
			nil,       // rparen
			shift(17), // text
			shift(19), // string
			nil,       // or
			nil,       // and
			nil,       // less_equals
			nil,       // less_than
			nil,       // greater_equals
			nil,       // greater_than
			nil,       // not_equals
			nil,       // equals
			nil,       // has
			nil,       // matches_regexp
			nil,       // not_matches_regexp
			nil,       // backslash
			nil,       // comma
			nil,       // plus
			nil,       // tilde
		},
	},
	actionRow{ // S25
		canRecover: false,
		actions: [numSymbols]action{
			nil,       // INVALID
			nil,       // $
			nil,       // ws
			nil,       // andOp
			nil,       // orOp
			nil,       // not
			nil,       // minus
			nil,       // dot
			shift(15), // lparen
			nil,       // rparen
			shift(17), // text
			shift(19), // string
			nil,       // or
			nil,       // and
			nil,       // less_equals
			nil,       // less_than
			nil,       // greater_equals
			nil,       // greater_than
			nil,       // not_equals
			nil,       // equals
			nil,       // has
			nil,       // matches_regexp
			nil,       // not_matches_regexp
			nil,       // backslash
			nil,       // comma
			nil,       // plus
			nil,       // tilde
		},
	},
	actionRow{ // S26
		canRecover: false,
		actions: [numSymbols]action{
			nil,        // INVALID
			reduce(12), // $, reduce: Term
			reduce(12), // ws, reduce: Term
			reduce(12), // andOp, reduce: Term
			reduce(12), // orOp, reduce: Term
			nil,        // not
			nil,        // minus
			nil,        // dot
			nil,        // lparen
			nil,        // rparen
			nil,        // text
			nil,        // string
			nil,        // or
			nil,        // and
			nil,        // less_equals
			nil,        // less_than
			nil,        // greater_equals
			nil,        // greater_than
			nil,        // not_equals
			nil,        // equals
			nil,        // has
			nil,        // matches_regexp
			nil,        // not_matches_regexp
			nil,        // backslash
			nil,        // comma
			nil,        // plus
			nil,        // tilde
		},
	},
	actionRow{ // S27
		canRecover: false,
		actions: [numSymbols]action{
			nil,        // INVALID
			reduce(14), // $, reduce: Term
			reduce(14), // ws, reduce: Term
			reduce(14), // andOp, reduce: Term
			reduce(14), // orOp, reduce: Term
			nil,        // not
			nil,        // minus
			nil,        // dot
			nil,        // lparen
			nil,        // rparen
			nil,        // text
			nil,        // string
			nil,        // or
			nil,        // and
			nil,        // less_equals
			nil,        // less_than
			nil,        // greater_equals
			nil,        // greater_than
			nil,        // not_equals
			nil,        // equals
			nil,        // has
			nil,        // matches_regexp
			nil,        // not_matches_regexp
			nil,        // backslash
			nil,        // comma
			nil,        // plus
			nil,        // tilde
		},
	},
	actionRow{ // S28
		canRecover: false,
		actions: [numSymbols]action{
			nil,       // INVALID
			nil,       // $
			nil,       // ws
			nil,       // andOp
			nil,       // orOp
			nil,       // not
			nil,       // minus
			nil,       // dot
			nil,       // lparen
			nil,       // rparen
			nil,       // text
			nil,       // string
			nil,       // or
			nil,       // and
			shift(31), // less_equals
			shift(32), // less_than
			shift(33), // greater_equals
			shift(34), // greater_than
			shift(35), // not_equals
			shift(36), // equals
			shift(37), // has
			shift(38), // matches_regexp
			shift(39), // not_matches_regexp
			nil,       // backslash
			nil,       // comma
			nil,       // plus
			nil,       // tilde
		},
	},
	actionRow{ // S29
		canRecover: false,
		actions: [numSymbols]action{
			nil,       // INVALID
			nil,       // $
			nil,       // ws
			nil,       // andOp
			nil,       // orOp
			nil,       // not
			nil,       // minus
			nil,       // dot
			nil,       // lparen
			nil,       // rparen
			shift(70), // text
			shift(72), // string
			nil,       // or
			nil,       // and
			nil,       // less_equals
			nil,       // less_than
			nil,       // greater_equals
			nil,       // greater_than
			nil,       // not_equals
			nil,       // equals
			nil,       // has
			nil,       // matches_regexp
			nil,       // not_matches_regexp
			nil,       // backslash
			nil,       // comma
			nil,       // plus
			nil,       // tilde
		},
	},
	actionRow{ // S30
		canRecover: false,
		actions: [numSymbols]action{
			nil,        // INVALID
			nil,        // $
			shift(73),  // ws
			nil,        // andOp
			nil,        // orOp
			nil,        // not
			nil,        // minus
			nil,        // dot
			nil,        // lparen
			nil,        // rparen
			reduce(36), // text, reduce: Comparator
			reduce(36), // string, reduce: Comparator
			nil,        // or
			nil,        // and
			nil,        // less_equals
			nil,        // less_than
			nil,        // greater_equals
			nil,        // greater_than
			nil,        // not_equals
			nil,        // equals
			nil,        // has
			nil,        // matches_regexp
			nil,        // not_matches_regexp
			nil,        // backslash
			nil,        // comma
			nil,        // plus
			nil,        // tilde
		},
	},
	actionRow{ // S31
		canRecover: false,
		actions: [numSymbols]action{
			nil,        // INVALID
			nil,        // $
			reduce(40), // ws, reduce: Comparison
			nil,        // andOp
			nil,        // orOp
			nil,        // not
			nil,        // minus
			nil,        // dot
			nil,        // lparen
			nil,        // rparen
			reduce(40), // text, reduce: Comparison
			reduce(40), // string, reduce: Comparison
			nil,        // or
			nil,        // and
			nil,        // less_equals
			nil,        // less_than
			nil,        // greater_equals
			nil,        // greater_than
			nil,        // not_equals
			nil,        // equals
			nil,        // has
			nil,        // matches_regexp
			nil,        // not_matches_regexp
			nil,        // backslash
			nil,        // comma
			nil,        // plus
			nil,        // tilde
		},
	},
	actionRow{ // S32
		canRecover: false,
		actions: [numSymbols]action{
			nil,        // INVALID
			nil,        // $
			reduce(41), // ws, reduce: Comparison
			nil,        // andOp
			nil,        // orOp
			nil,        // not
			nil,        // minus
			nil,        // dot
			nil,        // lparen
			nil,        // rparen
			reduce(41), // text, reduce: Comparison
			reduce(41), // string, reduce: Comparison
			nil,        // or
			nil,        // and
			nil,        // less_equals
			nil,        // less_than
			nil,        // greater_equals
			nil,        // greater_than
			nil,        // not_equals
			nil,        // equals
			nil,        // has
			nil,        // matches_regexp
			nil,        // not_matches_regexp
			nil,        // backslash
			nil,        // comma
			nil,        // plus
			nil,        // tilde
		},
	},
	actionRow{ // S33
		canRecover: false,
		actions: [numSymbols]action{
			nil,        // INVALID
			nil,        // $
			reduce(42), // ws, reduce: Comparison
			nil,        // andOp
			nil,        // orOp
			nil,        // not
			nil,        // minus
			nil,        // dot
			nil,        // lparen
			nil,        // rparen
			reduce(42), // text, reduce: Comparison
			reduce(42), // string, reduce: Comparison
			nil,        // or
			nil,        // and
			nil,        // less_equals
			nil,        // less_than
			nil,        // greater_equals
			nil,        // greater_than
			nil,        // not_equals
			nil,        // equals
			nil,        // has
			nil,        // matches_regexp
			nil,        // not_matches_regexp
			nil,        // backslash
			nil,        // comma
			nil,        // plus
			nil,        // tilde
		},
	},
	actionRow{ // S34
		canRecover: false,
		actions: [numSymbols]action{
			nil,        // INVALID
			nil,        // $
			reduce(43), // ws, reduce: Comparison
			nil,        // andOp
			nil,        // orOp
			nil,        // not
			nil,        // minus
			nil,        // dot
			nil,        // lparen
			nil,        // rparen
			reduce(43), // text, reduce: Comparison
			reduce(43), // string, reduce: Comparison
			nil,        // or
			nil,        // and
			nil,        // less_equals
			nil,        // less_than
			nil,        // greater_equals
			nil,        // greater_than
			nil,        // not_equals
			nil,        // equals
			nil,        // has
			nil,        // matches_regexp
			nil,        // not_matches_regexp
			nil,        // backslash
			nil,        // comma
			nil,        // plus
			nil,        // tilde
		},
	},
	actionRow{ // S35
		canRecover: false,
		actions: [numSymbols]action{
			nil,        // INVALID
			nil,        // $
			reduce(44), // ws, reduce: Comparison
			nil,        // andOp
			nil,        // orOp
			nil,        // not
			nil,        // minus
			nil,        // dot
			nil,        // lparen
			nil,        // rparen
			reduce(44), // text, reduce: Comparison
			reduce(44), // string, reduce: Comparison
			nil,        // or
			nil,        // and
			nil,        // less_equals
			nil,        // less_than
			nil,        // greater_equals
			nil,        // greater_than
			nil,        // not_equals
			nil,        // equals
			nil,        // has
			nil,        // matches_regexp
			nil,        // not_matches_regexp
			nil,        // backslash
			nil,        // comma
			nil,        // plus
			nil,        // tilde
		},
	},
	actionRow{ // S36
		canRecover: false,
		actions: [numSymbols]action{
			nil,        // INVALID
			nil,        // $
			reduce(45), // ws, reduce: Comparison
			nil,        // andOp
			nil,        // orOp
			nil,        // not
			nil,        // minus
			nil,        // dot
			nil,        // lparen
			nil,        // rparen
			reduce(45), // text, reduce: Comparison
			reduce(45), // string, reduce: Comparison
			nil,        // or
			nil,        // and
			nil,        // less_equals
			nil,        // less_than
			nil,        // greater_equals
			nil,        // greater_than
			nil,        // not_equals
			nil,        // equals
			nil,        // has
			nil,        // matches_regexp
			nil,        // not_matches_regexp
			nil,        // backslash
			nil,        // comma
			nil,        // plus
			nil,        // tilde
		},
	},
	actionRow{ // S37
		canRecover: false,
		actions: [numSymbols]action{
			nil,        // INVALID
			nil,        // $
			reduce(46), // ws, reduce: Comparison
			nil,        // andOp
			nil,        // orOp
			nil,        // not
			nil,        // minus
			nil,        // dot
			nil,        // lparen
			nil,        // rparen
			reduce(46), // text, reduce: Comparison
			reduce(46), // string, reduce: Comparison
			nil,        // or
			nil,        // and
			nil,        // less_equals
			nil,        // less_than
			nil,        // greater_equals
			nil,        // greater_than
			nil,        // not_equals
			nil,        // equals
			nil,        // has
			nil,        // matches_regexp
			nil,        // not_matches_regexp
			nil,        // backslash
			nil,        // comma
			nil,        // plus
			nil,        // tilde
		},
	},
	actionRow{ // S38
		canRecover: false,
		actions: [numSymbols]action{
			nil,        // INVALID
			nil,        // $
			reduce(47), // ws, reduce: Comparison
			nil,        // andOp
			nil,        // orOp
			nil,        // not
			nil,        // minus
			nil,        // dot
			nil,        // lparen
			nil,        // rparen
			reduce(47), // text, reduce: Comparison
			reduce(47), // string, reduce: Comparison
			nil,        // or
			nil,        // and
			nil,        // less_equals
			nil,        // less_than
			nil,        // greater_equals
			nil,        // greater_than
			nil,        // not_equals
			nil,        // equals
			nil,        // has
			nil,        // matches_regexp
			nil,        // not_matches_regexp
			nil,        // backslash
			nil,        // comma
			nil,        // plus
			nil,        // tilde
		},
	},
	actionRow{ // S39
		canRecover: false,
		actions: [numSymbols]action{
			nil,        // INVALID
			nil,        // $
			reduce(48), // ws, reduce: Comparison
			nil,        // andOp
			nil,        // orOp
			nil,        // not
			nil,        // minus
			nil,        // dot
			nil,        // lparen
			nil,        // rparen
			reduce(48), // text, reduce: Comparison
			reduce(48), // string, reduce: Comparison
			nil,        // or
			nil,        // and
			nil,        // less_equals
			nil,        // less_than
			nil,        // greater_equals
			nil,        // greater_than
			nil,        // not_equals
			nil,        // equals
			nil,        // has
			nil,        // matches_regexp
			nil,        // not_matches_regexp
			nil,        // backslash
			nil,        // comma
			nil,        // plus
			nil,        // tilde
		},
	},
	actionRow{ // S40
		canRecover: false,
		actions: [numSymbols]action{
			nil,       // INVALID
			nil,       // $
			nil,       // ws
			nil,       // andOp
			nil,       // orOp
			shift(74), // not
			nil,       // minus
			nil,       // dot
			nil,       // lparen
			nil,       // rparen
			shift(17), // text
			shift(19), // string
			shift(78), // or
			shift(79), // and
			nil,       // less_equals
			nil,       // less_than
			nil,       // greater_equals
			nil,       // greater_than
			nil,       // not_equals
			nil,       // equals
			nil,       // has
			nil,       // matches_regexp
			nil,       // not_matches_regexp
			nil,       // backslash
			nil,       // comma
			nil,       // plus
			nil,       // tilde
		},
	},
	actionRow{ // S41
		canRecover: false,
		actions: [numSymbols]action{
			nil,       // INVALID
			nil,       // $
			shift(80), // ws
			shift(81), // andOp
			nil,       // orOp
			nil,       // not
			nil,       // minus
			nil,       // dot
			nil,       // lparen
			shift(82), // rparen
			nil,       // text
			nil,       // string
			nil,       // or
			nil,       // and
			nil,       // less_equals
			nil,       // less_than
			nil,       // greater_equals
			nil,       // greater_than
			nil,       // not_equals
			nil,       // equals
			nil,       // has
			nil,       // matches_regexp
			nil,       // not_matches_regexp
			nil,       // backslash
			nil,       // comma
			nil,       // plus
			nil,       // tilde
		},
	},
	actionRow{ // S42
		canRecover: false,
		actions: [numSymbols]action{
			nil,       // INVALID
			nil,       // $
			nil,       // ws
			nil,       // andOp
			nil,       // orOp
			shift(47), // not
			shift(48), // minus
			nil,       // dot
			shift(54), // lparen
			nil,       // rparen
			shift(56), // text
			shift(58), // string
			nil,       // or
			nil,       // and
			nil,       // less_equals
			nil,       // less_than
			nil,       // greater_equals
			nil,       // greater_than
			nil,       // not_equals
			nil,       // equals
			nil,       // has
			nil,       // matches_regexp
			nil,       // not_matches_regexp
			nil,       // backslash
			nil,       // comma
			nil,       // plus
			nil,       // tilde
		},
	},
	actionRow{ // S43
		canRecover: false,
		actions: [numSymbols]action{
			nil,       // INVALID
			nil,       // $
			shift(84), // ws
			reduce(5), // andOp, reduce: Expression
			nil,       // orOp
			nil,       // not
			nil,       // minus
			nil,       // dot
			nil,       // lparen
			reduce(5), // rparen, reduce: Expression
			nil,       // text
			nil,       // string
			nil,       // or
			nil,       // and
			nil,       // less_equals
			nil,       // less_than
			nil,       // greater_equals
			nil,       // greater_than
			nil,       // not_equals
			nil,       // equals
			nil,       // has
			nil,       // matches_regexp
			nil,       // not_matches_regexp
			nil,       // backslash
			nil,       // comma
			nil,       // plus
			nil,       // tilde
		},
	},
	actionRow{ // S44
		canRecover: false,
		actions: [numSymbols]action{
			nil,       // INVALID
			nil,       // $
			reduce(7), // ws, reduce: AmbiguousSequence
			reduce(7), // andOp, reduce: AmbiguousSequence
			shift(85), // orOp
			nil,       // not
			nil,       // minus
			nil,       // dot
			nil,       // lparen
			reduce(7), // rparen, reduce: AmbiguousSequence
			nil,       // text
			nil,       // string
			nil,       // or
			nil,       // and
			nil,       // less_equals
			nil,       // less_than
			nil,       // greater_equals
			nil,       // greater_than
			nil,       // not_equals
			nil,       // equals
			nil,       // has
			nil,       // matches_regexp
			nil,       // not_matches_regexp
			nil,       // backslash
			nil,       // comma
			nil,       // plus
			nil,       // tilde
		},
	},
	actionRow{ // S45
		canRecover: false,
		actions: [numSymbols]action{
			nil,       // INVALID
			nil,       // $
			reduce(9), // ws, reduce: AmbiguousFactor
			reduce(9), // andOp, reduce: AmbiguousFactor
			reduce(9), // orOp, reduce: AmbiguousFactor
			nil,       // not
			nil,       // minus
			nil,       // dot
			nil,       // lparen
			reduce(9), // rparen, reduce: AmbiguousFactor
			nil,       // text
			nil,       // string
			nil,       // or
			nil,       // and
			nil,       // less_equals
			nil,       // less_than
			nil,       // greater_equals
			nil,       // greater_than
			nil,       // not_equals
			nil,       // equals
			nil,       // has
			nil,       // matches_regexp
			nil,       // not_matches_regexp
			nil,       // backslash
			nil,       // comma
			nil,       // plus
			nil,       // tilde
		},
	},
	actionRow{ // S46
		canRecover: false,
		actions: [numSymbols]action{
			nil,        // INVALID
			nil,        // $
			reduce(11), // ws, reduce: Term
			reduce(11), // andOp, reduce: Term
			reduce(11), // orOp, reduce: Term
			nil,        // not
			nil,        // minus
			nil,        // dot
			nil,        // lparen
			reduce(11), // rparen, reduce: Term
			nil,        // text
			nil,        // string
			nil,        // or
			nil,        // and
			nil,        // less_equals
			nil,        // less_than
			nil,        // greater_equals
			nil,        // greater_than
			nil,        // not_equals
			nil,        // equals
			nil,        // has
			nil,        // matches_regexp
			nil,        // not_matches_regexp
			nil,        // backslash
			nil,        // comma
			nil,        // plus
			nil,        // tilde
		},
	},
	actionRow{ // S47
		canRecover: false,
		actions: [numSymbols]action{
			nil,       // INVALID
			nil,       // $
			shift(86), // ws
			nil,       // andOp
			nil,       // orOp
			nil,       // not
			nil,       // minus
			nil,       // dot
			shift(54), // lparen
			nil,       // rparen
			shift(56), // text
			shift(58), // string
			nil,       // or
			nil,       // and
			nil,       // less_equals
			nil,       // less_than
			nil,       // greater_equals
			nil,       // greater_than
			nil,       // not_equals
			nil,       // equals
			nil,       // has
			nil,       // matches_regexp
			nil,       // not_matches_regexp
			nil,       // backslash
			nil,       // comma
			nil,       // plus
			nil,       // tilde
		},
	},
	actionRow{ // S48
		canRecover: false,
		actions: [numSymbols]action{
			nil,       // INVALID
			nil,       // $
			nil,       // ws
			nil,       // andOp
			nil,       // orOp
			nil,       // not
			nil,       // minus
			nil,       // dot
			shift(54), // lparen
			nil,       // rparen
			shift(56), // text
			shift(58), // string
			nil,       // or
			nil,       // and
			nil,       // less_equals
			nil,       // less_than
			nil,       // greater_equals
			nil,       // greater_than
			nil,       // not_equals
			nil,       // equals
			nil,       // has
			nil,       // matches_regexp
			nil,       // not_matches_regexp
			nil,       // backslash
			nil,       // comma
			nil,       // plus
			nil,       // tilde
		},
	},
	actionRow{ // S49
		canRecover: false,
		actions: [numSymbols]action{
			nil,        // INVALID
			nil,        // $
			reduce(15), // ws, reduce: Primitive
			reduce(15), // andOp, reduce: Primitive
			reduce(15), // orOp, reduce: Primitive
			nil,        // not
			nil,        // minus
			nil,        // dot
			nil,        // lparen
			reduce(15), // rparen, reduce: Primitive
			nil,        // text
			nil,        // string
			nil,        // or
			nil,        // and
			nil,        // less_equals
			nil,        // less_than
			nil,        // greater_equals
			nil,        // greater_than
			nil,        // not_equals
			nil,        // equals
			nil,        // has
			nil,        // matches_regexp
			nil,        // not_matches_regexp
			nil,        // backslash
			nil,        // comma
			nil,        // plus
			nil,        // tilde
		},
	},
	actionRow{ // S50
		canRecover: false,
		actions: [numSymbols]action{
			nil,        // INVALID
			nil,        // $
			reduce(16), // ws, reduce: Primitive
			reduce(16), // andOp, reduce: Primitive
			reduce(16), // orOp, reduce: Primitive
			nil,        // not
			nil,        // minus
			nil,        // dot
			nil,        // lparen
			reduce(16), // rparen, reduce: Primitive
			nil,        // text
			nil,        // string
			nil,        // or
			nil,        // and
			nil,        // less_equals
			nil,        // less_than
			nil,        // greater_equals
			nil,        // greater_than
			nil,        // not_equals
			nil,        // equals
			nil,        // has
			nil,        // matches_regexp
			nil,        // not_matches_regexp
			nil,        // backslash
			nil,        // comma
			nil,        // plus
			nil,        // tilde
		},
	},
	actionRow{ // S51
		canRecover: false,
		actions: [numSymbols]action{
			nil,        // INVALID
			nil,        // $
			shift(28),  // ws
			reduce(17), // andOp, reduce: Restriction
			reduce(17), // orOp, reduce: Restriction
			nil,        // not
			nil,        // minus
			nil,        // dot
			nil,        // lparen
			reduce(17), // rparen, reduce: Restriction
			nil,        // text
			nil,        // string
			nil,        // or
			nil,        // and
			shift(31),  // less_equals
			shift(32),  // less_than
			shift(33),  // greater_equals
			shift(34),  // greater_than
			shift(35),  // not_equals
			shift(36),  // equals
			shift(37),  // has
			shift(38),  // matches_regexp
			shift(39),  // not_matches_regexp
			nil,        // backslash
			nil,        // comma
			nil,        // plus
			nil,        // tilde
		},
	},
	actionRow{ // S52
		canRecover: false,
		actions: [numSymbols]action{
			nil,        // INVALID
			nil,        // $
			reduce(19), // ws, reduce: Comparable
			reduce(19), // andOp, reduce: Comparable
			reduce(19), // orOp, reduce: Comparable
			nil,        // not
			nil,        // minus
			shift(90),  // dot
			nil,        // lparen
			reduce(19), // rparen, reduce: Comparable
			nil,        // text
			nil,        // string
			nil,        // or
			nil,        // and
			reduce(19), // less_equals, reduce: Comparable
			reduce(19), // less_than, reduce: Comparable
			reduce(19), // greater_equals, reduce: Comparable
			reduce(19), // greater_than, reduce: Comparable
			reduce(19), // not_equals, reduce: Comparable
			reduce(19), // equals, reduce: Comparable
			reduce(19), // has, reduce: Comparable
			reduce(19), // matches_regexp, reduce: Comparable
			reduce(19), // not_matches_regexp, reduce: Comparable
			nil,        // backslash
			nil,        // comma
			nil,        // plus
			nil,        // tilde
		},
	},
	actionRow{ // S53
		canRecover: false,
		actions: [numSymbols]action{
			nil,        // INVALID
			nil,        // $
			reduce(20), // ws, reduce: Member
			reduce(20), // andOp, reduce: Member
			reduce(20), // orOp, reduce: Member
			nil,        // not
			nil,        // minus
			reduce(20), // dot, reduce: Member
			nil,        // lparen
			reduce(20), // rparen, reduce: Member
			nil,        // text
			nil,        // string
			nil,        // or
			nil,        // and
			reduce(20), // less_equals, reduce: Member
			reduce(20), // less_than, reduce: Member
			reduce(20), // greater_equals, reduce: Member
			reduce(20), // greater_than, reduce: Member
			reduce(20), // not_equals, reduce: Member
			reduce(20), // equals, reduce: Member
			reduce(20), // has, reduce: Member
			reduce(20), // matches_regexp, reduce: Member
			reduce(20), // not_matches_regexp, reduce: Member
			nil,        // backslash
			nil,        // comma
			nil,        // plus
			nil,        // tilde
		},
	},
	actionRow{ // S54
		canRecover: false,
		actions: [numSymbols]action{
			nil,       // INVALID
			nil,       // $
			shift(92), // ws
			nil,       // andOp
			nil,       // orOp
			shift(47), // not
			shift(48), // minus
			nil,       // dot
			shift(54), // lparen
			nil,       // rparen
			shift(56), // text
			shift(58), // string
			nil,       // or
			nil,       // and
			nil,       // less_equals
			nil,       // less_than
			nil,       // greater_equals
			nil,       // greater_than
			nil,       // not_equals
			nil,       // equals
			nil,       // has
			nil,       // matches_regexp
			nil,       // not_matches_regexp
			nil,       // backslash
			nil,       // comma
			nil,       // plus
			nil,       // tilde
		},
	},
	actionRow{ // S55
		canRecover: false,
		actions: [numSymbols]action{
			nil,        // INVALID
			nil,        // $
			reduce(27), // ws, reduce: Item
			reduce(27), // andOp, reduce: Item
			reduce(27), // orOp, reduce: Item
			nil,        // not
			nil,        // minus
			reduce(27), // dot, reduce: Item
			nil,        // lparen
			reduce(27), // rparen, reduce: Item
			nil,        // text
			nil,        // string
			nil,        // or
			nil,        // and
			reduce(27), // less_equals, reduce: Item
			reduce(27), // less_than, reduce: Item
			reduce(27), // greater_equals, reduce: Item
			reduce(27), // greater_than, reduce: Item
			reduce(27), // not_equals, reduce: Item
			reduce(27), // equals, reduce: Item
			reduce(27), // has, reduce: Item
			reduce(27), // matches_regexp, reduce: Item
			reduce(27), // not_matches_regexp, reduce: Item
			nil,        // backslash
			nil,        // comma
			nil,        // plus
			nil,        // tilde
		},
	},
	actionRow{ // S56
		canRecover: false,
		actions: [numSymbols]action{
			nil,        // INVALID
			nil,        // $
			reduce(28), // ws, reduce: Value
			reduce(28), // andOp, reduce: Value
			reduce(28), // orOp, reduce: Value
			nil,        // not
			nil,        // minus
			reduce(28), // dot, reduce: Value
			nil,        // lparen
			reduce(28), // rparen, reduce: Value
			nil,        // text
			nil,        // string
			nil,        // or
			nil,        // and
			reduce(28), // less_equals, reduce: Value
			reduce(28), // less_than, reduce: Value
			reduce(28), // greater_equals, reduce: Value
			reduce(28), // greater_than, reduce: Value
			reduce(28), // not_equals, reduce: Value
			reduce(28), // equals, reduce: Value
			reduce(28), // has, reduce: Value
			reduce(28), // matches_regexp, reduce: Value
			reduce(28), // not_matches_regexp, reduce: Value
			nil,        // backslash
			nil,        // comma
			nil,        // plus
			nil,        // tilde
		},
	},
	actionRow{ // S57
		canRecover: false,
		actions: [numSymbols]action{
			nil,        // INVALID
			nil,        // $
			reduce(29), // ws, reduce: Value
			reduce(29), // andOp, reduce: Value
			reduce(29), // orOp, reduce: Value
			nil,        // not
			nil,        // minus
			reduce(29), // dot, reduce: Value
			nil,        // lparen
			reduce(29), // rparen, reduce: Value
			nil,        // text
			nil,        // string
			nil,        // or
			nil,        // and
			reduce(29), // less_equals, reduce: Value
			reduce(29), // less_than, reduce: Value
			reduce(29), // greater_equals, reduce: Value
			reduce(29), // greater_than, reduce: Value
			reduce(29), // not_equals, reduce: Value
			reduce(29), // equals, reduce: Value
			reduce(29), // has, reduce: Value
			reduce(29), // matches_regexp, reduce: Value
			reduce(29), // not_matches_regexp, reduce: Value
			nil,        // backslash
			nil,        // comma
			nil,        // plus
			nil,        // tilde
		},
	},
	actionRow{ // S58
		canRecover: false,
		actions: [numSymbols]action{
			nil,        // INVALID
			nil,        // $
			reduce(30), // ws, reduce: Phrase
			reduce(30), // andOp, reduce: Phrase
			reduce(30), // orOp, reduce: Phrase
			nil,        // not
			nil,        // minus
			reduce(30), // dot, reduce: Phrase
			nil,        // lparen
			reduce(30), // rparen, reduce: Phrase
			nil,        // text
			nil,        // string
			nil,        // or
			nil,        // and
			reduce(30), // less_equals, reduce: Phrase
			reduce(30), // less_than, reduce: Phrase
			reduce(30), // greater_equals, reduce: Phrase
			reduce(30), // greater_than, reduce: Phrase
			reduce(30), // not_equals, reduce: Phrase
			reduce(30), // equals, reduce: Phrase
			reduce(30), // has, reduce: Phrase
			reduce(30), // matches_regexp, reduce: Phrase
			reduce(30), // not_matches_regexp, reduce: Phrase
			nil,        // backslash
			nil,        // comma
			nil,        // plus
			nil,        // tilde
		},
	},
	actionRow{ // S59
		canRecover: false,
		actions: [numSymbols]action{
			nil,       // INVALID
			reduce(6), // $, reduce: Expression
			shift(23), // ws
			reduce(6), // andOp, reduce: Expression
			nil,       // orOp
			nil,       // not
			nil,       // minus
			nil,       // dot
			nil,       // lparen
			nil,       // rparen
			nil,       // text
			nil,       // string
			nil,       // or
			nil,       // and
			nil,       // less_equals
			nil,       // less_than
			nil,       // greater_equals
			nil,       // greater_than
			nil,       // not_equals
			nil,       // equals
			nil,       // has
			nil,       // matches_regexp
			nil,       // not_matches_regexp
			nil,       // backslash
			nil,       // comma
			nil,       // plus
			nil,       // tilde
		},
	},
	actionRow{ // S60
		canRecover: false,
		actions: [numSymbols]action{
			nil,       // INVALID
			reduce(4), // $, reduce: Filter
			nil,       // ws
			nil,       // andOp
			nil,       // orOp
			nil,       // not
			nil,       // minus
			nil,       // dot
			nil,       // lparen
			nil,       // rparen
			nil,       // text
			nil,       // string
			nil,       // or
			nil,       // and
			nil,       // less_equals
			nil,       // less_than
			nil,       // greater_equals
			nil,       // greater_than
			nil,       // not_equals
			nil,       // equals
			nil,       // has
			nil,       // matches_regexp
			nil,       // not_matches_regexp
			nil,       // backslash
			nil,       // comma
			nil,       // plus
			nil,       // tilde
		},
	},
	actionRow{ // S61
		canRecover: false,
		actions: [numSymbols]action{
			nil,       // INVALID
			reduce(8), // $, reduce: AmbiguousSequence
			reduce(8), // ws, reduce: AmbiguousSequence
			reduce(8), // andOp, reduce: AmbiguousSequence
			shift(24), // orOp
			nil,       // not
			nil,       // minus
			nil,       // dot
			nil,       // lparen
			nil,       // rparen
			nil,       // text
			nil,       // string
			nil,       // or
			nil,       // and
			nil,       // less_equals
			nil,       // less_than
			nil,       // greater_equals
			nil,       // greater_than
			nil,       // not_equals
			nil,       // equals
			nil,       // has
			nil,       // matches_regexp
			nil,       // not_matches_regexp
			nil,       // backslash
			nil,       // comma
			nil,       // plus
			nil,       // tilde
		},
	},
	actionRow{ // S62
		canRecover: false,
		actions: [numSymbols]action{
			nil,        // INVALID
			reduce(10), // $, reduce: AmbiguousFactor
			reduce(10), // ws, reduce: AmbiguousFactor
			reduce(10), // andOp, reduce: AmbiguousFactor
			reduce(10), // orOp, reduce: AmbiguousFactor
			nil,        // not
			nil,        // minus
			nil,        // dot
			nil,        // lparen
			nil,        // rparen
			nil,        // text
			nil,        // string
			nil,        // or
			nil,        // and
			nil,        // less_equals
			nil,        // less_than
			nil,        // greater_equals
			nil,        // greater_than
			nil,        // not_equals
			nil,        // equals
			nil,        // has
			nil,        // matches_regexp
			nil,        // not_matches_regexp
			nil,        // backslash
			nil,        // comma
			nil,        // plus
			nil,        // tilde
		},
	},
	actionRow{ // S63
		canRecover: false,
		actions: [numSymbols]action{
			nil,        // INVALID
			reduce(13), // $, reduce: Term
			reduce(13), // ws, reduce: Term
			reduce(13), // andOp, reduce: Term
			reduce(13), // orOp, reduce: Term
			nil,        // not
			nil,        // minus
			nil,        // dot
			nil,        // lparen
			nil,        // rparen
			nil,        // text
			nil,        // string
			nil,        // or
			nil,        // and
			nil,        // less_equals
			nil,        // less_than
			nil,        // greater_equals
			nil,        // greater_than
			nil,        // not_equals
			nil,        // equals
			nil,        // has
			nil,        // matches_regexp
			nil,        // not_matches_regexp
			nil,        // backslash
			nil,        // comma
			nil,        // plus
			nil,        // tilde
		},
	},
	actionRow{ // S64
		canRecover: false,
		actions: [numSymbols]action{
			nil,        // INVALID
			nil,        // $
			shift(93),  // ws
			nil,        // andOp
			nil,        // orOp
			nil,        // not
			nil,        // minus
			nil,        // dot
			nil,        // lparen
			nil,        // rparen
			reduce(37), // text, reduce: Comparator
			reduce(37), // string, reduce: Comparator
			nil,        // or
			nil,        // and
			nil,        // less_equals
			nil,        // less_than
			nil,        // greater_equals
			nil,        // greater_than
			nil,        // not_equals
			nil,        // equals
			nil,        // has
			nil,        // matches_regexp
			nil,        // not_matches_regexp
			nil,        // backslash
			nil,        // comma
			nil,        // plus
			nil,        // tilde
		},
	},
	actionRow{ // S65
		canRecover: false,
		actions: [numSymbols]action{
			nil,        // INVALID
			reduce(26), // $, reduce: Arg
			reduce(26), // ws, reduce: Arg
			reduce(26), // andOp, reduce: Arg
			reduce(26), // orOp, reduce: Arg
			nil,        // not
			nil,        // minus
			nil,        // dot
			nil,        // lparen
			nil,        // rparen
			nil,        // text
			nil,        // string
			nil,        // or
			nil,        // and
			nil,        // less_equals
			nil,        // less_than
			nil,        // greater_equals
			nil,        // greater_than
			nil,        // not_equals
			nil,        // equals
			nil,        // has
			nil,        // matches_regexp
			nil,        // not_matches_regexp
			nil,        // backslash
			nil,        // comma
			nil,        // plus
			nil,        // tilde
		},
	},
	actionRow{ // S66
		canRecover: false,
		actions: [numSymbols]action{
			nil,        // INVALID
			reduce(18), // $, reduce: Restriction
			reduce(18), // ws, reduce: Restriction
			reduce(18), // andOp, reduce: Restriction
			reduce(18), // orOp, reduce: Restriction
			nil,        // not
			nil,        // minus
			nil,        // dot
			nil,        // lparen
			nil,        // rparen
			nil,        // text
			nil,        // string
			nil,        // or
			nil,        // and
			nil,        // less_equals
			nil,        // less_than
			nil,        // greater_equals
			nil,        // greater_than
			nil,        // not_equals
			nil,        // equals
			nil,        // has
			nil,        // matches_regexp
			nil,        // not_matches_regexp
			nil,        // backslash
			nil,        // comma
			nil,        // plus
			nil,        // tilde
		},
	},
	actionRow{ // S67
		canRecover: false,
		actions: [numSymbols]action{
			nil,        // INVALID
			reduce(19), // $, reduce: Comparable
			reduce(19), // ws, reduce: Comparable
			reduce(19), // andOp, reduce: Comparable
			reduce(19), // orOp, reduce: Comparable
			nil,        // not
			nil,        // minus
			shift(94),  // dot
			nil,        // lparen
			nil,        // rparen
			nil,        // text
			nil,        // string
			nil,        // or
			nil,        // and
			nil,        // less_equals
			nil,        // less_than
			nil,        // greater_equals
			nil,        // greater_than
			nil,        // not_equals
			nil,        // equals
			nil,        // has
			nil,        // matches_regexp
			nil,        // not_matches_regexp
			nil,        // backslash
			nil,        // comma
			nil,        // plus
			nil,        // tilde
		},
	},
	actionRow{ // S68
		canRecover: false,
		actions: [numSymbols]action{
			nil,        // INVALID
			reduce(20), // $, reduce: Member
			reduce(20), // ws, reduce: Member
			reduce(20), // andOp, reduce: Member
			reduce(20), // orOp, reduce: Member
			nil,        // not
			nil,        // minus
			reduce(20), // dot, reduce: Member
			nil,        // lparen
			nil,        // rparen
			nil,        // text
			nil,        // string
			nil,        // or
			nil,        // and
			nil,        // less_equals
			nil,        // less_than
			nil,        // greater_equals
			nil,        // greater_than
			nil,        // not_equals
			nil,        // equals
			nil,        // has
			nil,        // matches_regexp
			nil,        // not_matches_regexp
			nil,        // backslash
			nil,        // comma
			nil,        // plus
			nil,        // tilde
		},
	},
	actionRow{ // S69
		canRecover: false,
		actions: [numSymbols]action{
			nil,        // INVALID
			reduce(27), // $, reduce: Item
			reduce(27), // ws, reduce: Item
			reduce(27), // andOp, reduce: Item
			reduce(27), // orOp, reduce: Item
			nil,        // not
			nil,        // minus
			reduce(27), // dot, reduce: Item
			nil,        // lparen
			nil,        // rparen
			nil,        // text
			nil,        // string
			nil,        // or
			nil,        // and
			nil,        // less_equals
			nil,        // less_than
			nil,        // greater_equals
			nil,        // greater_than
			nil,        // not_equals
			nil,        // equals
			nil,        // has
			nil,        // matches_regexp
			nil,        // not_matches_regexp
			nil,        // backslash
			nil,        // comma
			nil,        // plus
			nil,        // tilde
		},
	},
	actionRow{ // S70
		canRecover: false,
		actions: [numSymbols]action{
			nil,        // INVALID
			reduce(28), // $, reduce: Value
			reduce(28), // ws, reduce: Value
			reduce(28), // andOp, reduce: Value
			reduce(28), // orOp, reduce: Value
			nil,        // not
			nil,        // minus
			reduce(28), // dot, reduce: Value
			nil,        // lparen
			nil,        // rparen
			nil,        // text
			nil,        // string
			nil,        // or
			nil,        // and
			nil,        // less_equals
			nil,        // less_than
			nil,        // greater_equals
			nil,        // greater_than
			nil,        // not_equals
			nil,        // equals
			nil,        // has
			nil,        // matches_regexp
			nil,        // not_matches_regexp
			nil,        // backslash
			nil,        // comma
			nil,        // plus
			nil,        // tilde
		},
	},
	actionRow{ // S71
		canRecover: false,
		actions: [numSymbols]action{
			nil,        // INVALID
			reduce(29), // $, reduce: Value
			reduce(29), // ws, reduce: Value
			reduce(29), // andOp, reduce: Value
			reduce(29), // orOp, reduce: Value
			nil,        // not
			nil,        // minus
			reduce(29), // dot, reduce: Value
			nil,        // lparen
			nil,        // rparen
			nil,        // text
			nil,        // string
			nil,        // or
			nil,        // and
			nil,        // less_equals
			nil,        // less_than
			nil,        // greater_equals
			nil,        // greater_than
			nil,        // not_equals
			nil,        // equals
			nil,        // has
			nil,        // matches_regexp
			nil,        // not_matches_regexp
			nil,        // backslash
			nil,        // comma
			nil,        // plus
			nil,        // tilde
		},
	},
	actionRow{ // S72
		canRecover: false,
		actions: [numSymbols]action{
			nil,        // INVALID
			reduce(30), // $, reduce: Phrase
			reduce(30), // ws, reduce: Phrase
			reduce(30), // andOp, reduce: Phrase
			reduce(30), // orOp, reduce: Phrase
			nil,        // not
			nil,        // minus
			reduce(30), // dot, reduce: Phrase
			nil,        // lparen
			nil,        // rparen
			nil,        // text
			nil,        // string
			nil,        // or
			nil,        // and
			nil,        // less_equals
			nil,        // less_than
			nil,        // greater_equals
			nil,        // greater_than
			nil,        // not_equals
			nil,        // equals
			nil,        // has
			nil,        // matches_regexp
			nil,        // not_matches_regexp
			nil,        // backslash
			nil,        // comma
			nil,        // plus
			nil,        // tilde
		},
	},
	actionRow{ // S73
		canRecover: false,
		actions: [numSymbols]action{
			nil,        // INVALID
			nil,        // $
			nil,        // ws
			nil,        // andOp
			nil,        // orOp
			nil,        // not
			nil,        // minus
			nil,        // dot
			nil,        // lparen
			nil,        // rparen
			reduce(38), // text, reduce: Comparator
			reduce(38), // string, reduce: Comparator
			nil,        // or
			nil,        // and
			nil,        // less_equals
			nil,        // less_than
			nil,        // greater_equals
			nil,        // greater_than
			nil,        // not_equals
			nil,        // equals
			nil,        // has
			nil,        // matches_regexp
			nil,        // not_matches_regexp
			nil,        // backslash
			nil,        // comma
			nil,        // plus
			nil,        // tilde
		},
	},
	actionRow{ // S74
		canRecover: false,
		actions: [numSymbols]action{
			nil,        // INVALID
			reduce(35), // $, reduce: Keyword
			reduce(35), // ws, reduce: Keyword
			reduce(35), // andOp, reduce: Keyword
			reduce(35), // orOp, reduce: Keyword
			nil,        // not
			nil,        // minus
			reduce(35), // dot, reduce: Keyword
			nil,        // lparen
			nil,        // rparen
			nil,        // text
			nil,        // string
			nil,        // or
			nil,        // and
			reduce(35), // less_equals, reduce: Keyword
			reduce(35), // less_than, reduce: Keyword
			reduce(35), // greater_equals, reduce: Keyword
			reduce(35), // greater_than, reduce: Keyword
			reduce(35), // not_equals, reduce: Keyword
			reduce(35), // equals, reduce: Keyword
			reduce(35), // has, reduce: Keyword
			reduce(35), // matches_regexp, reduce: Keyword
			reduce(35), // not_matches_regexp, reduce: Keyword
			nil,        // backslash
			nil,        // comma
			nil,        // plus
			nil,        // tilde
		},
	},
	actionRow{ // S75
		canRecover: false,
		actions: [numSymbols]action{
			nil,        // INVALID
			reduce(31), // $, reduce: ItemKeyword
			reduce(31), // ws, reduce: ItemKeyword
			reduce(31), // andOp, reduce: ItemKeyword
			reduce(31), // orOp, reduce: ItemKeyword
			nil,        // not
			nil,        // minus
			reduce(31), // dot, reduce: ItemKeyword
			nil,        // lparen
			nil,        // rparen
			nil,        // text
			nil,        // string
			nil,        // or
			nil,        // and
			reduce(31), // less_equals, reduce: ItemKeyword
			reduce(31), // less_than, reduce: ItemKeyword
			reduce(31), // greater_equals, reduce: ItemKeyword
			reduce(31), // greater_than, reduce: ItemKeyword
			reduce(31), // not_equals, reduce: ItemKeyword
			reduce(31), // equals, reduce: ItemKeyword
			reduce(31), // has, reduce: ItemKeyword
			reduce(31), // matches_regexp, reduce: ItemKeyword
			reduce(31), // not_matches_regexp, reduce: ItemKeyword
			nil,        // backslash
			nil,        // comma
			nil,        // plus
			nil,        // tilde
		},
	},
	actionRow{ // S76
		canRecover: false,
		actions: [numSymbols]action{
			nil,        // INVALID
			reduce(21), // $, reduce: Member
			reduce(21), // ws, reduce: Member
			reduce(21), // andOp, reduce: Member
			reduce(21), // orOp, reduce: Member
			nil,        // not
			nil,        // minus
			reduce(21), // dot, reduce: Member
			nil,        // lparen
			nil,        // rparen
			nil,        // text
			nil,        // string
			nil,        // or
			nil,        // and
			reduce(21), // less_equals, reduce: Member
			reduce(21), // less_than, reduce: Member
			reduce(21), // greater_equals, reduce: Member
			reduce(21), // greater_than, reduce: Member
			reduce(21), // not_equals, reduce: Member
			reduce(21), // equals, reduce: Member
			reduce(21), // has, reduce: Member
			reduce(21), // matches_regexp, reduce: Member
			reduce(21), // not_matches_regexp, reduce: Member
			nil,        // backslash
			nil,        // comma
			nil,        // plus
			nil,        // tilde
		},
	},
	actionRow{ // S77
		canRecover: false,
		actions: [numSymbols]action{
			nil,        // INVALID
			reduce(32), // $, reduce: ItemKeyword
			reduce(32), // ws, reduce: ItemKeyword
			reduce(32), // andOp, reduce: ItemKeyword
			reduce(32), // orOp, reduce: ItemKeyword
			nil,        // not
			nil,        // minus
			reduce(32), // dot, reduce: ItemKeyword
			nil,        // lparen
			nil,        // rparen
			nil,        // text
			nil,        // string
			nil,        // or
			nil,        // and
			reduce(32), // less_equals, reduce: ItemKeyword
			reduce(32), // less_than, reduce: ItemKeyword
			reduce(32), // greater_equals, reduce: ItemKeyword
			reduce(32), // greater_than, reduce: ItemKeyword
			reduce(32), // not_equals, reduce: ItemKeyword
			reduce(32), // equals, reduce: ItemKeyword
			reduce(32), // has, reduce: ItemKeyword
			reduce(32), // matches_regexp, reduce: ItemKeyword
			reduce(32), // not_matches_regexp, reduce: ItemKeyword
			nil,        // backslash
			nil,        // comma
			nil,        // plus
			nil,        // tilde
		},
	},
	actionRow{ // S78
		canRecover: false,
		actions: [numSymbols]action{
			nil,        // INVALID
			reduce(33), // $, reduce: Keyword
			reduce(33), // ws, reduce: Keyword
			reduce(33), // andOp, reduce: Keyword
			reduce(33), // orOp, reduce: Keyword
			nil,        // not
			nil,        // minus
			reduce(33), // dot, reduce: Keyword
			nil,        // lparen
			nil,        // rparen
			nil,        // text
			nil,        // string
			nil,        // or
			nil,        // and
			reduce(33), // less_equals, reduce: Keyword
			reduce(33), // less_than, reduce: Keyword
			reduce(33), // greater_equals, reduce: Keyword
			reduce(33), // greater_than, reduce: Keyword
			reduce(33), // not_equals, reduce: Keyword
			reduce(33), // equals, reduce: Keyword
			reduce(33), // has, reduce: Keyword
			reduce(33), // matches_regexp, reduce: Keyword
			reduce(33), // not_matches_regexp, reduce: Keyword
			nil,        // backslash
			nil,        // comma
			nil,        // plus
			nil,        // tilde
		},
	},
	actionRow{ // S79
		canRecover: false,
		actions: [numSymbols]action{
			nil,        // INVALID
			reduce(34), // $, reduce: Keyword
			reduce(34), // ws, reduce: Keyword
			reduce(34), // andOp, reduce: Keyword
			reduce(34), // orOp, reduce: Keyword
			nil,        // not
			nil,        // minus
			reduce(34), // dot, reduce: Keyword
			nil,        // lparen
			nil,        // rparen
			nil,        // text
			nil,        // string
			nil,        // or
			nil,        // and
			reduce(34), // less_equals, reduce: Keyword
			reduce(34), // less_than, reduce: Keyword
			reduce(34), // greater_equals, reduce: Keyword
			reduce(34), // greater_than, reduce: Keyword
			reduce(34), // not_equals, reduce: Keyword
			reduce(34), // equals, reduce: Keyword
			reduce(34), // has, reduce: Keyword
			reduce(34), // matches_regexp, reduce: Keyword
			reduce(34), // not_matches_regexp, reduce: Keyword
			nil,        // backslash
			nil,        // comma
			nil,        // plus
			nil,        // tilde
		},
	},
	actionRow{ // S80
		canRecover: false,
		actions: [numSymbols]action{
			nil,       // INVALID
			nil,       // $
			nil,       // ws
			nil,       // andOp
			nil,       // orOp
			nil,       // not
			nil,       // minus
			nil,       // dot
			nil,       // lparen
			shift(95), // rparen
			nil,       // text
			nil,       // string
			nil,       // or
			nil,       // and
			nil,       // less_equals
			nil,       // less_than
			nil,       // greater_equals
			nil,       // greater_than
			nil,       // not_equals
			nil,       // equals
			nil,       // has
			nil,       // matches_regexp
			nil,       // not_matches_regexp
			nil,       // backslash
			nil,       // comma
			nil,       // plus
			nil,       // tilde
		},
	},
	actionRow{ // S81
		canRecover: false,
		actions: [numSymbols]action{
			nil,       // INVALID
			nil,       // $
			nil,       // ws
			nil,       // andOp
			nil,       // orOp
			shift(47), // not
			shift(48), // minus
			nil,       // dot
			shift(54), // lparen
			nil,       // rparen
			shift(56), // text
			shift(58), // string
			nil,       // or
			nil,       // and
			nil,       // less_equals
			nil,       // less_than
			nil,       // greater_equals
			nil,       // greater_than
			nil,       // not_equals
			nil,       // equals
			nil,       // has
			nil,       // matches_regexp
			nil,       // not_matches_regexp
			nil,       // backslash
			nil,       // comma
			nil,       // plus
			nil,       // tilde
		},
	},
	actionRow{ // S82
		canRecover: false,
		actions: [numSymbols]action{
			nil,        // INVALID
			reduce(22), // $, reduce: Composite
			reduce(22), // ws, reduce: Composite
			reduce(22), // andOp, reduce: Composite
			reduce(22), // orOp, reduce: Composite
			nil,        // not
			nil,        // minus
			nil,        // dot
			nil,        // lparen
			nil,        // rparen
			nil,        // text
			nil,        // string
			nil,        // or
			nil,        // and
			nil,        // less_equals
			nil,        // less_than
			nil,        // greater_equals
			nil,        // greater_than
			nil,        // not_equals
			nil,        // equals
			nil,        // has
			nil,        // matches_regexp
			nil,        // not_matches_regexp
			nil,        // backslash
			nil,        // comma
			nil,        // plus
			nil,        // tilde
		},
	},
	actionRow{ // S83
		canRecover: false,
		actions: [numSymbols]action{
			nil,       // INVALID
			nil,       // $
			shift(97), // ws
			shift(81), // andOp
			nil,       // orOp
			nil,       // not
			nil,       // minus
			nil,       // dot
			nil,       // lparen
			shift(98), // rparen
			nil,       // text
			nil,       // string
			nil,       // or
			nil,       // and
			nil,       // less_equals
			nil,       // less_than
			nil,       // greater_equals
			nil,       // greater_than
			nil,       // not_equals
			nil,       // equals
			nil,       // has
			nil,       // matches_regexp
			nil,       // not_matches_regexp
			nil,       // backslash
			nil,       // comma
			nil,       // plus
			nil,       // tilde
		},
	},
	actionRow{ // S84
		canRecover: false,
		actions: [numSymbols]action{
			nil,       // INVALID
			nil,       // $
			nil,       // ws
			nil,       // andOp
			nil,       // orOp
			shift(47), // not
			shift(48), // minus
			nil,       // dot
			shift(54), // lparen
			nil,       // rparen
			shift(56), // text
			shift(58), // string
			nil,       // or
			nil,       // and
			nil,       // less_equals
			nil,       // less_than
			nil,       // greater_equals
			nil,       // greater_than
			nil,       // not_equals
			nil,       // equals
			nil,       // has
			nil,       // matches_regexp
			nil,       // not_matches_regexp
			nil,       // backslash
			nil,       // comma
			nil,       // plus
			nil,       // tilde
		},
	},
	actionRow{ // S85
		canRecover: false,
		actions: [numSymbols]action{
			nil,       // INVALID
			nil,       // $
			nil,       // ws
			nil,       // andOp
			nil,       // orOp
			shift(47), // not
			shift(48), // minus
			nil,       // dot
			shift(54), // lparen
			nil,       // rparen
			shift(56), // text
			shift(58), // string
			nil,       // or
			nil,       // and
			nil,       // less_equals
			nil,       // less_than
			nil,       // greater_equals
			nil,       // greater_than
			nil,       // not_equals
			nil,       // equals
			nil,       // has
			nil,       // matches_regexp
			nil,       // not_matches_regexp
			nil,       // backslash
			nil,       // comma
			nil,       // plus
			nil,       // tilde
		},
	},
	actionRow{ // S86
		canRecover: false,
		actions: [numSymbols]action{
			nil,       // INVALID
			nil,       // $
			nil,       // ws
			nil,       // andOp
			nil,       // orOp
			nil,       // not
			nil,       // minus
			nil,       // dot
			shift(54), // lparen
			nil,       // rparen
			shift(56), // text
			shift(58), // string
			nil,       // or
			nil,       // and
			nil,       // less_equals
			nil,       // less_than
			nil,       // greater_equals
			nil,       // greater_than
			nil,       // not_equals
			nil,       // equals
			nil,       // has
			nil,       // matches_regexp
			nil,       // not_matches_regexp
			nil,       // backslash
			nil,       // comma
			nil,       // plus
			nil,       // tilde
		},
	},
	actionRow{ // S87
		canRecover: false,
		actions: [numSymbols]action{
			nil,        // INVALID
			nil,        // $
			reduce(12), // ws, reduce: Term
			reduce(12), // andOp, reduce: Term
			reduce(12), // orOp, reduce: Term
			nil,        // not
			nil,        // minus
			nil,        // dot
			nil,        // lparen
			reduce(12), // rparen, reduce: Term
			nil,        // text
			nil,        // string
			nil,        // or
			nil,        // and
			nil,        // less_equals
			nil,        // less_than
			nil,        // greater_equals
			nil,        // greater_than
			nil,        // not_equals
			nil,        // equals
			nil,        // has
			nil,        // matches_regexp
			nil,        // not_matches_regexp
			nil,        // backslash
			nil,        // comma
			nil,        // plus
			nil,        // tilde
		},
	},
	actionRow{ // S88
		canRecover: false,
		actions: [numSymbols]action{
			nil,        // INVALID
			nil,        // $
			reduce(14), // ws, reduce: Term
			reduce(14), // andOp, reduce: Term
			reduce(14), // orOp, reduce: Term
			nil,        // not
			nil,        // minus
			nil,        // dot
			nil,        // lparen
			reduce(14), // rparen, reduce: Term
			nil,        // text
			nil,        // string
			nil,        // or
			nil,        // and
			nil,        // less_equals
			nil,        // less_than
			nil,        // greater_equals
			nil,        // greater_than
			nil,        // not_equals
			nil,        // equals
			nil,        // has
			nil,        // matches_regexp
			nil,        // not_matches_regexp
			nil,        // backslash
			nil,        // comma
			nil,        // plus
			nil,        // tilde
		},
	},
	actionRow{ // S89
		canRecover: false,
		actions: [numSymbols]action{
			nil,        // INVALID
			nil,        // $
			nil,        // ws
			nil,        // andOp
			nil,        // orOp
			nil,        // not
			nil,        // minus
			nil,        // dot
			nil,        // lparen
			nil,        // rparen
			shift(107), // text
			shift(109), // string
			nil,        // or
			nil,        // and
			nil,        // less_equals
			nil,        // less_than
			nil,        // greater_equals
			nil,        // greater_than
			nil,        // not_equals
			nil,        // equals
			nil,        // has
			nil,        // matches_regexp
			nil,        // not_matches_regexp
			nil,        // backslash
			nil,        // comma
			nil,        // plus
			nil,        // tilde
		},
	},
	actionRow{ // S90
		canRecover: false,
		actions: [numSymbols]action{
			nil,        // INVALID
			nil,        // $
			nil,        // ws
			nil,        // andOp
			nil,        // orOp
			shift(110), // not
			nil,        // minus
			nil,        // dot
			nil,        // lparen
			nil,        // rparen
			shift(56),  // text
			shift(58),  // string
			shift(114), // or
			shift(115), // and
			nil,        // less_equals
			nil,        // less_than
			nil,        // greater_equals
			nil,        // greater_than
			nil,        // not_equals
			nil,        // equals
			nil,        // has
			nil,        // matches_regexp
			nil,        // not_matches_regexp
			nil,        // backslash
			nil,        // comma
			nil,        // plus
			nil,        // tilde
		},
	},
	actionRow{ // S91
		canRecover: false,
		actions: [numSymbols]action{
			nil,        // INVALID
			nil,        // $
			shift(116), // ws
			shift(81),  // andOp
			nil,        // orOp
			nil,        // not
			nil,        // minus
			nil,        // dot
			nil,        // lparen
			shift(117), // rparen
			nil,        // text
			nil,        // string
			nil,        // or
			nil,        // and
			nil,        // less_equals
			nil,        // less_than
			nil,        // greater_equals
			nil,        // greater_than
			nil,        // not_equals
			nil,        // equals
			nil,        // has
			nil,        // matches_regexp
			nil,        // not_matches_regexp
			nil,        // backslash
			nil,        // comma
			nil,        // plus
			nil,        // tilde
		},
	},
	actionRow{ // S92
		canRecover: false,
		actions: [numSymbols]action{
			nil,       // INVALID
			nil,       // $
			nil,       // ws
			nil,       // andOp
			nil,       // orOp
			shift(47), // not
			shift(48), // minus
			nil,       // dot
			shift(54), // lparen
			nil,       // rparen
			shift(56), // text
			shift(58), // string
			nil,       // or
			nil,       // and
			nil,       // less_equals
			nil,       // less_than
			nil,       // greater_equals
			nil,       // greater_than
			nil,       // not_equals
			nil,       // equals
			nil,       // has
			nil,       // matches_regexp
			nil,       // not_matches_regexp
			nil,       // backslash
			nil,       // comma
			nil,       // plus
			nil,       // tilde
		},
	},
	actionRow{ // S93
		canRecover: false,
		actions: [numSymbols]action{
			nil,        // INVALID
			nil,        // $
			nil,        // ws
			nil,        // andOp
			nil,        // orOp
			nil,        // not
			nil,        // minus
			nil,        // dot
			nil,        // lparen
			nil,        // rparen
			reduce(39), // text, reduce: Comparator
			reduce(39), // string, reduce: Comparator
			nil,        // or
			nil,        // and
			nil,        // less_equals
			nil,        // less_than
			nil,        // greater_equals
			nil,        // greater_than
			nil,        // not_equals
			nil,        // equals
			nil,        // has
			nil,        // matches_regexp
			nil,        // not_matches_regexp
			nil,        // backslash
			nil,        // comma
			nil,        // plus
			nil,        // tilde
		},
	},
	actionRow{ // S94
		canRecover: false,
		actions: [numSymbols]action{
			nil,        // INVALID
			nil,        // $
			nil,        // ws
			nil,        // andOp
			nil,        // orOp
			shift(119), // not
			nil,        // minus
			nil,        // dot
			nil,        // lparen
			nil,        // rparen
			shift(70),  // text
			shift(72),  // string
			shift(123), // or
			shift(124), // and
			nil,        // less_equals
			nil,        // less_than
			nil,        // greater_equals
			nil,        // greater_than
			nil,        // not_equals
			nil,        // equals
			nil,        // has
			nil,        // matches_regexp
			nil,        // not_matches_regexp
			nil,        // backslash
			nil,        // comma
			nil,        // plus
			nil,        // tilde
		},
	},
	actionRow{ // S95
		canRecover: false,
		actions: [numSymbols]action{
			nil,        // INVALID
			reduce(23), // $, reduce: Composite
			reduce(23), // ws, reduce: Composite
			reduce(23), // andOp, reduce: Composite
			reduce(23), // orOp, reduce: Composite
			nil,        // not
			nil,        // minus
			nil,        // dot
			nil,        // lparen
			nil,        // rparen
			nil,        // text
			nil,        // string
			nil,        // or
			nil,        // and
			nil,        // less_equals
			nil,        // less_than
			nil,        // greater_equals
			nil,        // greater_than
			nil,        // not_equals
			nil,        // equals
			nil,        // has
			nil,        // matches_regexp
			nil,        // not_matches_regexp
			nil,        // backslash
			nil,        // comma
			nil,        // plus
			nil,        // tilde
		},
	},
	actionRow{ // S96
		canRecover: false,
		actions: [numSymbols]action{
			nil,       // INVALID
			nil,       // $
			shift(84), // ws
			reduce(6), // andOp, reduce: Expression
			nil,       // orOp
			nil,       // not
			nil,       // minus
			nil,       // dot
			nil,       // lparen
			reduce(6), // rparen, reduce: Expression
			nil,       // text
			nil,       // string
			nil,       // or
			nil,       // and
			nil,       // less_equals
			nil,       // less_than
			nil,       // greater_equals
			nil,       // greater_than
			nil,       // not_equals
			nil,       // equals
			nil,       // has
			nil,       // matches_regexp
			nil,       // not_matches_regexp
			nil,       // backslash
			nil,       // comma
			nil,       // plus
			nil,       // tilde
		},
	},
	actionRow{ // S97
		canRecover: false,
		actions: [numSymbols]action{
			nil,        // INVALID
			nil,        // $
			nil,        // ws
			nil,        // andOp
			nil,        // orOp
			nil,        // not
			nil,        // minus
			nil,        // dot
			nil,        // lparen
			shift(125), // rparen
			nil,        // text
			nil,        // string
			nil,        // or
			nil,        // and
			nil,        // less_equals
			nil,        // less_than
			nil,        // greater_equals
			nil,        // greater_than
			nil,        // not_equals
			nil,        // equals
			nil,        // has
			nil,        // matches_regexp
			nil,        // not_matches_regexp
			nil,        // backslash
			nil,        // comma
			nil,        // plus
			nil,        // tilde
		},
	},
	actionRow{ // S98
		canRecover: false,
		actions: [numSymbols]action{
			nil,        // INVALID
			reduce(24), // $, reduce: Composite
			reduce(24), // ws, reduce: Composite
			reduce(24), // andOp, reduce: Composite
			reduce(24), // orOp, reduce: Composite
			nil,        // not
			nil,        // minus
			nil,        // dot
			nil,        // lparen
			nil,        // rparen
			nil,        // text
			nil,        // string
			nil,        // or
			nil,        // and
			nil,        // less_equals
			nil,        // less_than
			nil,        // greater_equals
			nil,        // greater_than
			nil,        // not_equals
			nil,        // equals
			nil,        // has
			nil,        // matches_regexp
			nil,        // not_matches_regexp
			nil,        // backslash
			nil,        // comma
			nil,        // plus
			nil,        // tilde
		},
	},
	actionRow{ // S99
		canRecover: false,
		actions: [numSymbols]action{
			nil,       // INVALID
			nil,       // $
			reduce(8), // ws, reduce: AmbiguousSequence
			reduce(8), // andOp, reduce: AmbiguousSequence
			shift(85), // orOp
			nil,       // not
			nil,       // minus
			nil,       // dot
			nil,       // lparen
			reduce(8), // rparen, reduce: AmbiguousSequence
			nil,       // text
			nil,       // string
			nil,       // or
			nil,       // and
			nil,       // less_equals
			nil,       // less_than
			nil,       // greater_equals
			nil,       // greater_than
			nil,       // not_equals
			nil,       // equals
			nil,       // has
			nil,       // matches_regexp
			nil,       // not_matches_regexp
			nil,       // backslash
			nil,       // comma
			nil,       // plus
			nil,       // tilde
		},
	},
	actionRow{ // S100
		canRecover: false,
		actions: [numSymbols]action{
			nil,        // INVALID
			nil,        // $
			reduce(10), // ws, reduce: AmbiguousFactor
			reduce(10), // andOp, reduce: AmbiguousFactor
			reduce(10), // orOp, reduce: AmbiguousFactor
			nil,        // not
			nil,        // minus
			nil,        // dot
			nil,        // lparen
			reduce(10), // rparen, reduce: AmbiguousFactor
			nil,        // text
			nil,        // string
			nil,        // or
			nil,        // and
			nil,        // less_equals
			nil,        // less_than
			nil,        // greater_equals
			nil,        // greater_than
			nil,        // not_equals
			nil,        // equals
			nil,        // has
			nil,        // matches_regexp
			nil,        // not_matches_regexp
			nil,        // backslash
			nil,        // comma
			nil,        // plus
			nil,        // tilde
		},
	},
	actionRow{ // S101
		canRecover: false,
		actions: [numSymbols]action{
			nil,        // INVALID
			nil,        // $
			reduce(13), // ws, reduce: Term
			reduce(13), // andOp, reduce: Term
			reduce(13), // orOp, reduce: Term
			nil,        // not
			nil,        // minus
			nil,        // dot
			nil,        // lparen
			reduce(13), // rparen, reduce: Term
			nil,        // text
			nil,        // string
			nil,        // or
			nil,        // and
			nil,        // less_equals
			nil,        // less_than
			nil,        // greater_equals
			nil,        // greater_than
			nil,        // not_equals
			nil,        // equals
			nil,        // has
			nil,        // matches_regexp
			nil,        // not_matches_regexp
			nil,        // backslash
			nil,        // comma
			nil,        // plus
			nil,        // tilde
		},
	},
	actionRow{ // S102
		canRecover: false,
		actions: [numSymbols]action{
			nil,        // INVALID
			nil,        // $
			reduce(26), // ws, reduce: Arg
			reduce(26), // andOp, reduce: Arg
			reduce(26), // orOp, reduce: Arg
			nil,        // not
			nil,        // minus
			nil,        // dot
			nil,        // lparen
			reduce(26), // rparen, reduce: Arg
			nil,        // text
			nil,        // string
			nil,        // or
			nil,        // and
			nil,        // less_equals
			nil,        // less_than
			nil,        // greater_equals
			nil,        // greater_than
			nil,        // not_equals
			nil,        // equals
			nil,        // has
			nil,        // matches_regexp
			nil,        // not_matches_regexp
			nil,        // backslash
			nil,        // comma
			nil,        // plus
			nil,        // tilde
		},
	},
	actionRow{ // S103
		canRecover: false,
		actions: [numSymbols]action{
			nil,        // INVALID
			nil,        // $
			reduce(18), // ws, reduce: Restriction
			reduce(18), // andOp, reduce: Restriction
			reduce(18), // orOp, reduce: Restriction
			nil,        // not
			nil,        // minus
			nil,        // dot
			nil,        // lparen
			reduce(18), // rparen, reduce: Restriction
			nil,        // text
			nil,        // string
			nil,        // or
			nil,        // and
			nil,        // less_equals
			nil,        // less_than
			nil,        // greater_equals
			nil,        // greater_than
			nil,        // not_equals
			nil,        // equals
			nil,        // has
			nil,        // matches_regexp
			nil,        // not_matches_regexp
			nil,        // backslash
			nil,        // comma
			nil,        // plus
			nil,        // tilde
		},
	},
	actionRow{ // S104
		canRecover: false,
		actions: [numSymbols]action{
			nil,        // INVALID
			nil,        // $
			reduce(19), // ws, reduce: Comparable
			reduce(19), // andOp, reduce: Comparable
			reduce(19), // orOp, reduce: Comparable
			nil,        // not
			nil,        // minus
			shift(126), // dot
			nil,        // lparen
			reduce(19), // rparen, reduce: Comparable
			nil,        // text
			nil,        // string
			nil,        // or
			nil,        // and
			nil,        // less_equals
			nil,        // less_than
			nil,        // greater_equals
			nil,        // greater_than
			nil,        // not_equals
			nil,        // equals
			nil,        // has
			nil,        // matches_regexp
			nil,        // not_matches_regexp
			nil,        // backslash
			nil,        // comma
			nil,        // plus
			nil,        // tilde
		},
	},
	actionRow{ // S105
		canRecover: false,
		actions: [numSymbols]action{
			nil,        // INVALID
			nil,        // $
			reduce(20), // ws, reduce: Member
			reduce(20), // andOp, reduce: Member
			reduce(20), // orOp, reduce: Member
			nil,        // not
			nil,        // minus
			reduce(20), // dot, reduce: Member
			nil,        // lparen
			reduce(20), // rparen, reduce: Member
			nil,        // text
			nil,        // string
			nil,        // or
			nil,        // and
			nil,        // less_equals
			nil,        // less_than
			nil,        // greater_equals
			nil,        // greater_than
			nil,        // not_equals
			nil,        // equals
			nil,        // has
			nil,        // matches_regexp
			nil,        // not_matches_regexp
			nil,        // backslash
			nil,        // comma
			nil,        // plus
			nil,        // tilde
		},
	},
	actionRow{ // S106
		canRecover: false,
		actions: [numSymbols]action{
			nil,        // INVALID
			nil,        // $
			reduce(27), // ws, reduce: Item
			reduce(27), // andOp, reduce: Item
			reduce(27), // orOp, reduce: Item
			nil,        // not
			nil,        // minus
			reduce(27), // dot, reduce: Item
			nil,        // lparen
			reduce(27), // rparen, reduce: Item
			nil,        // text
			nil,        // string
			nil,        // or
			nil,        // and
			nil,        // less_equals
			nil,        // less_than
			nil,        // greater_equals
			nil,        // greater_than
			nil,        // not_equals
			nil,        // equals
			nil,        // has
			nil,        // matches_regexp
			nil,        // not_matches_regexp
			nil,        // backslash
			nil,        // comma
			nil,        // plus
			nil,        // tilde
		},
	},
	actionRow{ // S107
		canRecover: false,
		actions: [numSymbols]action{
			nil,        // INVALID
			nil,        // $
			reduce(28), // ws, reduce: Value
			reduce(28), // andOp, reduce: Value
			reduce(28), // orOp, reduce: Value
			nil,        // not
			nil,        // minus
			reduce(28), // dot, reduce: Value
			nil,        // lparen
			reduce(28), // rparen, reduce: Value
			nil,        // text
			nil,        // string
			nil,        // or
			nil,        // and
			nil,        // less_equals
			nil,        // less_than
			nil,        // greater_equals
			nil,        // greater_than
			nil,        // not_equals
			nil,        // equals
			nil,        // has
			nil,        // matches_regexp
			nil,        // not_matches_regexp
			nil,        // backslash
			nil,        // comma
			nil,        // plus
			nil,        // tilde
		},
	},
	actionRow{ // S108
		canRecover: false,
		actions: [numSymbols]action{
			nil,        // INVALID
			nil,        // $
			reduce(29), // ws, reduce: Value
			reduce(29), // andOp, reduce: Value
			reduce(29), // orOp, reduce: Value
			nil,        // not
			nil,        // minus
			reduce(29), // dot, reduce: Value
			nil,        // lparen
			reduce(29), // rparen, reduce: Value
			nil,        // text
			nil,        // string
			nil,        // or
			nil,        // and
			nil,        // less_equals
			nil,        // less_than
			nil,        // greater_equals
			nil,        // greater_than
			nil,        // not_equals
			nil,        // equals
			nil,        // has
			nil,        // matches_regexp
			nil,        // not_matches_regexp
			nil,        // backslash
			nil,        // comma
			nil,        // plus
			nil,        // tilde
		},
	},
	actionRow{ // S109
		canRecover: false,
		actions: [numSymbols]action{
			nil,        // INVALID
			nil,        // $
			reduce(30), // ws, reduce: Phrase
			reduce(30), // andOp, reduce: Phrase
			reduce(30), // orOp, reduce: Phrase
			nil,        // not
			nil,        // minus
			reduce(30), // dot, reduce: Phrase
			nil,        // lparen
			reduce(30), // rparen, reduce: Phrase
			nil,        // text
			nil,        // string
			nil,        // or
			nil,        // and
			nil,        // less_equals
			nil,        // less_than
			nil,        // greater_equals
			nil,        // greater_than
			nil,        // not_equals
			nil,        // equals
			nil,        // has
			nil,        // matches_regexp
			nil,        // not_matches_regexp
			nil,        // backslash
			nil,        // comma
			nil,        // plus
			nil,        // tilde
		},
	},
	actionRow{ // S110
		canRecover: false,
		actions: [numSymbols]action{
			nil,        // INVALID
			nil,        // $
			reduce(35), // ws, reduce: Keyword
			reduce(35), // andOp, reduce: Keyword
			reduce(35), // orOp, reduce: Keyword
			nil,        // not
			nil,        // minus
			reduce(35), // dot, reduce: Keyword
			nil,        // lparen
			reduce(35), // rparen, reduce: Keyword
			nil,        // text
			nil,        // string
			nil,        // or
			nil,        // and
			reduce(35), // less_equals, reduce: Keyword
			reduce(35), // less_than, reduce: Keyword
			reduce(35), // greater_equals, reduce: Keyword
			reduce(35), // greater_than, reduce: Keyword
			reduce(35), // not_equals, reduce: Keyword
			reduce(35), // equals, reduce: Keyword
			reduce(35), // has, reduce: Keyword
			reduce(35), // matches_regexp, reduce: Keyword
			reduce(35), // not_matches_regexp, reduce: Keyword
			nil,        // backslash
			nil,        // comma
			nil,        // plus
			nil,        // tilde
		},
	},
	actionRow{ // S111
		canRecover: false,
		actions: [numSymbols]action{
			nil,        // INVALID
			nil,        // $
			reduce(31), // ws, reduce: ItemKeyword
			reduce(31), // andOp, reduce: ItemKeyword
			reduce(31), // orOp, reduce: ItemKeyword
			nil,        // not
			nil,        // minus
			reduce(31), // dot, reduce: ItemKeyword
			nil,        // lparen
			reduce(31), // rparen, reduce: ItemKeyword
			nil,        // text
			nil,        // string
			nil,        // or
			nil,        // and
			reduce(31), // less_equals, reduce: ItemKeyword
			reduce(31), // less_than, reduce: ItemKeyword
			reduce(31), // greater_equals, reduce: ItemKeyword
			reduce(31), // greater_than, reduce: ItemKeyword
			reduce(31), // not_equals, reduce: ItemKeyword
			reduce(31), // equals, reduce: ItemKeyword
			reduce(31), // has, reduce: ItemKeyword
			reduce(31), // matches_regexp, reduce: ItemKeyword
			reduce(31), // not_matches_regexp, reduce: ItemKeyword
			nil,        // backslash
			nil,        // comma
			nil,        // plus
			nil,        // tilde
		},
	},
	actionRow{ // S112
		canRecover: false,
		actions: [numSymbols]action{
			nil,        // INVALID
			nil,        // $
			reduce(21), // ws, reduce: Member
			reduce(21), // andOp, reduce: Member
			reduce(21), // orOp, reduce: Member
			nil,        // not
			nil,        // minus
			reduce(21), // dot, reduce: Member
			nil,        // lparen
			reduce(21), // rparen, reduce: Member
			nil,        // text
			nil,        // string
			nil,        // or
			nil,        // and
			reduce(21), // less_equals, reduce: Member
			reduce(21), // less_than, reduce: Member
			reduce(21), // greater_equals, reduce: Member
			reduce(21), // greater_than, reduce: Member
			reduce(21), // not_equals, reduce: Member
			reduce(21), // equals, reduce: Member
			reduce(21), // has, reduce: Member
			reduce(21), // matches_regexp, reduce: Member
			reduce(21), // not_matches_regexp, reduce: Member
			nil,        // backslash
			nil,        // comma
			nil,        // plus
			nil,        // tilde
		},
	},
	actionRow{ // S113
		canRecover: false,
		actions: [numSymbols]action{
			nil,        // INVALID
			nil,        // $
			reduce(32), // ws, reduce: ItemKeyword
			reduce(32), // andOp, reduce: ItemKeyword
			reduce(32), // orOp, reduce: ItemKeyword
			nil,        // not
			nil,        // minus
			reduce(32), // dot, reduce: ItemKeyword
			nil,        // lparen
			reduce(32), // rparen, reduce: ItemKeyword
			nil,        // text
			nil,        // string
			nil,        // or
			nil,        // and
			reduce(32), // less_equals, reduce: ItemKeyword
			reduce(32), // less_than, reduce: ItemKeyword
			reduce(32), // greater_equals, reduce: ItemKeyword
			reduce(32), // greater_than, reduce: ItemKeyword
			reduce(32), // not_equals, reduce: ItemKeyword
			reduce(32), // equals, reduce: ItemKeyword
			reduce(32), // has, reduce: ItemKeyword
			reduce(32), // matches_regexp, reduce: ItemKeyword
			reduce(32), // not_matches_regexp, reduce: ItemKeyword
			nil,        // backslash
			nil,        // comma
			nil,        // plus
			nil,        // tilde
		},
	},
	actionRow{ // S114
		canRecover: false,
		actions: [numSymbols]action{
			nil,        // INVALID
			nil,        // $
			reduce(33), // ws, reduce: Keyword
			reduce(33), // andOp, reduce: Keyword
			reduce(33), // orOp, reduce: Keyword
			nil,        // not
			nil,        // minus
			reduce(33), // dot, reduce: Keyword
			nil,        // lparen
			reduce(33), // rparen, reduce: Keyword
			nil,        // text
			nil,        // string
			nil,        // or
			nil,        // and
			reduce(33), // less_equals, reduce: Keyword
			reduce(33), // less_than, reduce: Keyword
			reduce(33), // greater_equals, reduce: Keyword
			reduce(33), // greater_than, reduce: Keyword
			reduce(33), // not_equals, reduce: Keyword
			reduce(33), // equals, reduce: Keyword
			reduce(33), // has, reduce: Keyword
			reduce(33), // matches_regexp, reduce: Keyword
			reduce(33), // not_matches_regexp, reduce: Keyword
			nil,        // backslash
			nil,        // comma
			nil,        // plus
			nil,        // tilde
		},
	},
	actionRow{ // S115
		canRecover: false,
		actions: [numSymbols]action{
			nil,        // INVALID
			nil,        // $
			reduce(34), // ws, reduce: Keyword
			reduce(34), // andOp, reduce: Keyword
			reduce(34), // orOp, reduce: Keyword
			nil,        // not
			nil,        // minus
			reduce(34), // dot, reduce: Keyword
			nil,        // lparen
			reduce(34), // rparen, reduce: Keyword
			nil,        // text
			nil,        // string
			nil,        // or
			nil,        // and
			reduce(34), // less_equals, reduce: Keyword
			reduce(34), // less_than, reduce: Keyword
			reduce(34), // greater_equals, reduce: Keyword
			reduce(34), // greater_than, reduce: Keyword
			reduce(34), // not_equals, reduce: Keyword
			reduce(34), // equals, reduce: Keyword
			reduce(34), // has, reduce: Keyword
			reduce(34), // matches_regexp, reduce: Keyword
			reduce(34), // not_matches_regexp, reduce: Keyword
			nil,        // backslash
			nil,        // comma
			nil,        // plus
			nil,        // tilde
		},
	},
	actionRow{ // S116
		canRecover: false,
		actions: [numSymbols]action{
			nil,        // INVALID
			nil,        // $
			nil,        // ws
			nil,        // andOp
			nil,        // orOp
			nil,        // not
			nil,        // minus
			nil,        // dot
			nil,        // lparen
			shift(127), // rparen
			nil,        // text
			nil,        // string
			nil,        // or
			nil,        // and
			nil,        // less_equals
			nil,        // less_than
			nil,        // greater_equals
			nil,        // greater_than
			nil,        // not_equals
			nil,        // equals
			nil,        // has
			nil,        // matches_regexp
			nil,        // not_matches_regexp
			nil,        // backslash
			nil,        // comma
			nil,        // plus
			nil,        // tilde
		},
	},
	actionRow{ // S117
		canRecover: false,
		actions: [numSymbols]action{
			nil,        // INVALID
			nil,        // $
			reduce(22), // ws, reduce: Composite
			reduce(22), // andOp, reduce: Composite
			reduce(22), // orOp, reduce: Composite
			nil,        // not
			nil,        // minus
			nil,        // dot
			nil,        // lparen
			reduce(22), // rparen, reduce: Composite
			nil,        // text
			nil,        // string
			nil,        // or
			nil,        // and
			nil,        // less_equals
			nil,        // less_than
			nil,        // greater_equals
			nil,        // greater_than
			nil,        // not_equals
			nil,        // equals
			nil,        // has
			nil,        // matches_regexp
			nil,        // not_matches_regexp
			nil,        // backslash
			nil,        // comma
			nil,        // plus
			nil,        // tilde
		},
	},
	actionRow{ // S118
		canRecover: false,
		actions: [numSymbols]action{
			nil,        // INVALID
			nil,        // $
			shift(128), // ws
			shift(81),  // andOp
			nil,        // orOp
			nil,        // not
			nil,        // minus
			nil,        // dot
			nil,        // lparen
			shift(129), // rparen
			nil,        // text
			nil,        // string
			nil,        // or
			nil,        // and
			nil,        // less_equals
			nil,        // less_than
			nil,        // greater_equals
			nil,        // greater_than
			nil,        // not_equals
			nil,        // equals
			nil,        // has
			nil,        // matches_regexp
			nil,        // not_matches_regexp
			nil,        // backslash
			nil,        // comma
			nil,        // plus
			nil,        // tilde
		},
	},
	actionRow{ // S119
		canRecover: false,
		actions: [numSymbols]action{
			nil,        // INVALID
			reduce(35), // $, reduce: Keyword
			reduce(35), // ws, reduce: Keyword
			reduce(35), // andOp, reduce: Keyword
			reduce(35), // orOp, reduce: Keyword
			nil,        // not
			nil,        // minus
			reduce(35), // dot, reduce: Keyword
			nil,        // lparen
			nil,        // rparen
			nil,        // text
			nil,        // string
			nil,        // or
			nil,        // and
			nil,        // less_equals
			nil,        // less_than
			nil,        // greater_equals
			nil,        // greater_than
			nil,        // not_equals
			nil,        // equals
			nil,        // has
			nil,        // matches_regexp
			nil,        // not_matches_regexp
			nil,        // backslash
			nil,        // comma
			nil,        // plus
			nil,        // tilde
		},
	},
	actionRow{ // S120
		canRecover: false,
		actions: [numSymbols]action{
			nil,        // INVALID
			reduce(31), // $, reduce: ItemKeyword
			reduce(31), // ws, reduce: ItemKeyword
			reduce(31), // andOp, reduce: ItemKeyword
			reduce(31), // orOp, reduce: ItemKeyword
			nil,        // not
			nil,        // minus
			reduce(31), // dot, reduce: ItemKeyword
			nil,        // lparen
			nil,        // rparen
			nil,        // text
			nil,        // string
			nil,        // or
			nil,        // and
			nil,        // less_equals
			nil,        // less_than
			nil,        // greater_equals
			nil,        // greater_than
			nil,        // not_equals
			nil,        // equals
			nil,        // has
			nil,        // matches_regexp
			nil,        // not_matches_regexp
			nil,        // backslash
			nil,        // comma
			nil,        // plus
			nil,        // tilde
		},
	},
	actionRow{ // S121
		canRecover: false,
		actions: [numSymbols]action{
			nil,        // INVALID
			reduce(21), // $, reduce: Member
			reduce(21), // ws, reduce: Member
			reduce(21), // andOp, reduce: Member
			reduce(21), // orOp, reduce: Member
			nil,        // not
			nil,        // minus
			reduce(21), // dot, reduce: Member
			nil,        // lparen
			nil,        // rparen
			nil,        // text
			nil,        // string
			nil,        // or
			nil,        // and
			nil,        // less_equals
			nil,        // less_than
			nil,        // greater_equals
			nil,        // greater_than
			nil,        // not_equals
			nil,        // equals
			nil,        // has
			nil,        // matches_regexp
			nil,        // not_matches_regexp
			nil,        // backslash
			nil,        // comma
			nil,        // plus
			nil,        // tilde
		},
	},
	actionRow{ // S122
		canRecover: false,
		actions: [numSymbols]action{
			nil,        // INVALID
			reduce(32), // $, reduce: ItemKeyword
			reduce(32), // ws, reduce: ItemKeyword
			reduce(32), // andOp, reduce: ItemKeyword
			reduce(32), // orOp, reduce: ItemKeyword
			nil,        // not
			nil,        // minus
			reduce(32), // dot, reduce: ItemKeyword
			nil,        // lparen
			nil,        // rparen
			nil,        // text
			nil,        // string
			nil,        // or
			nil,        // and
			nil,        // less_equals
			nil,        // less_than
			nil,        // greater_equals
			nil,        // greater_than
			nil,        // not_equals
			nil,        // equals
			nil,        // has
			nil,        // matches_regexp
			nil,        // not_matches_regexp
			nil,        // backslash
			nil,        // comma
			nil,        // plus
			nil,        // tilde
		},
	},
	actionRow{ // S123
		canRecover: false,
		actions: [numSymbols]action{
			nil,        // INVALID
			reduce(33), // $, reduce: Keyword
			reduce(33), // ws, reduce: Keyword
			reduce(33), // andOp, reduce: Keyword
			reduce(33), // orOp, reduce: Keyword
			nil,        // not
			nil,        // minus
			reduce(33), // dot, reduce: Keyword
			nil,        // lparen
			nil,        // rparen
			nil,        // text
			nil,        // string
			nil,        // or
			nil,        // and
			nil,        // less_equals
			nil,        // less_than
			nil,        // greater_equals
			nil,        // greater_than
			nil,        // not_equals
			nil,        // equals
			nil,        // has
			nil,        // matches_regexp
			nil,        // not_matches_regexp
			nil,        // backslash
			nil,        // comma
			nil,        // plus
			nil,        // tilde
		},
	},
	actionRow{ // S124
		canRecover: false,
		actions: [numSymbols]action{
			nil,        // INVALID
			reduce(34), // $, reduce: Keyword
			reduce(34), // ws, reduce: Keyword
			reduce(34), // andOp, reduce: Keyword
			reduce(34), // orOp, reduce: Keyword
			nil,        // not
			nil,        // minus
			reduce(34), // dot, reduce: Keyword
			nil,        // lparen
			nil,        // rparen
			nil,        // text
			nil,        // string
			nil,        // or
			nil,        // and
			nil,        // less_equals
			nil,        // less_than
			nil,        // greater_equals
			nil,        // greater_than
			nil,        // not_equals
			nil,        // equals
			nil,        // has
			nil,        // matches_regexp
			nil,        // not_matches_regexp
			nil,        // backslash
			nil,        // comma
			nil,        // plus
			nil,        // tilde
		},
	},
	actionRow{ // S125
		canRecover: false,
		actions: [numSymbols]action{
			nil,        // INVALID
			reduce(25), // $, reduce: Composite
			reduce(25), // ws, reduce: Composite
			reduce(25), // andOp, reduce: Composite
			reduce(25), // orOp, reduce: Composite
			nil,        // not
			nil,        // minus
			nil,        // dot
			nil,        // lparen
			nil,        // rparen
			nil,        // text
			nil,        // string
			nil,        // or
			nil,        // and
			nil,        // less_equals
			nil,        // less_than
			nil,        // greater_equals
			nil,        // greater_than
			nil,        // not_equals
			nil,        // equals
			nil,        // has
			nil,        // matches_regexp
			nil,        // not_matches_regexp
			nil,        // backslash
			nil,        // comma
			nil,        // plus
			nil,        // tilde
		},
	},
	actionRow{ // S126
		canRecover: false,
		actions: [numSymbols]action{
			nil,        // INVALID
			nil,        // $
			nil,        // ws
			nil,        // andOp
			nil,        // orOp
			shift(130), // not
			nil,        // minus
			nil,        // dot
			nil,        // lparen
			nil,        // rparen
			shift(107), // text
			shift(109), // string
			shift(134), // or
			shift(135), // and
			nil,        // less_equals
			nil,        // less_than
			nil,        // greater_equals
			nil,        // greater_than
			nil,        // not_equals
			nil,        // equals
			nil,        // has
			nil,        // matches_regexp
			nil,        // not_matches_regexp
			nil,        // backslash
			nil,        // comma
			nil,        // plus
			nil,        // tilde
		},
	},
	actionRow{ // S127
		canRecover: false,
		actions: [numSymbols]action{
			nil,        // INVALID
			nil,        // $
			reduce(23), // ws, reduce: Composite
			reduce(23), // andOp, reduce: Composite
			reduce(23), // orOp, reduce: Composite
			nil,        // not
			nil,        // minus
			nil,        // dot
			nil,        // lparen
			reduce(23), // rparen, reduce: Composite
			nil,        // text
			nil,        // string
			nil,        // or
			nil,        // and
			nil,        // less_equals
			nil,        // less_than
			nil,        // greater_equals
			nil,        // greater_than
			nil,        // not_equals
			nil,        // equals
			nil,        // has
			nil,        // matches_regexp
			nil,        // not_matches_regexp
			nil,        // backslash
			nil,        // comma
			nil,        // plus
			nil,        // tilde
		},
	},
	actionRow{ // S128
		canRecover: false,
		actions: [numSymbols]action{
			nil,        // INVALID
			nil,        // $
			nil,        // ws
			nil,        // andOp
			nil,        // orOp
			nil,        // not
			nil,        // minus
			nil,        // dot
			nil,        // lparen
			shift(136), // rparen
			nil,        // text
			nil,        // string
			nil,        // or
			nil,        // and
			nil,        // less_equals
			nil,        // less_than
			nil,        // greater_equals
			nil,        // greater_than
			nil,        // not_equals
			nil,        // equals
			nil,        // has
			nil,        // matches_regexp
			nil,        // not_matches_regexp
			nil,        // backslash
			nil,        // comma
			nil,        // plus
			nil,        // tilde
		},
	},
	actionRow{ // S129
		canRecover: false,
		actions: [numSymbols]action{
			nil,        // INVALID
			nil,        // $
			reduce(24), // ws, reduce: Composite
			reduce(24), // andOp, reduce: Composite
			reduce(24), // orOp, reduce: Composite
			nil,        // not
			nil,        // minus
			nil,        // dot
			nil,        // lparen
			reduce(24), // rparen, reduce: Composite
			nil,        // text
			nil,        // string
			nil,        // or
			nil,        // and
			nil,        // less_equals
			nil,        // less_than
			nil,        // greater_equals
			nil,        // greater_than
			nil,        // not_equals
			nil,        // equals
			nil,        // has
			nil,        // matches_regexp
			nil,        // not_matches_regexp
			nil,        // backslash
			nil,        // comma
			nil,        // plus
			nil,        // tilde
		},
	},
	actionRow{ // S130
		canRecover: false,
		actions: [numSymbols]action{
			nil,        // INVALID
			nil,        // $
			reduce(35), // ws, reduce: Keyword
			reduce(35), // andOp, reduce: Keyword
			reduce(35), // orOp, reduce: Keyword
			nil,        // not
			nil,        // minus
			reduce(35), // dot, reduce: Keyword
			nil,        // lparen
			reduce(35), // rparen, reduce: Keyword
			nil,        // text
			nil,        // string
			nil,        // or
			nil,        // and
			nil,        // less_equals
			nil,        // less_than
			nil,        // greater_equals
			nil,        // greater_than
			nil,        // not_equals
			nil,        // equals
			nil,        // has
			nil,        // matches_regexp
			nil,        // not_matches_regexp
			nil,        // backslash
			nil,        // comma
			nil,        // plus
			nil,        // tilde
		},
	},
	actionRow{ // S131
		canRecover: false,
		actions: [numSymbols]action{
			nil,        // INVALID
			nil,        // $
			reduce(31), // ws, reduce: ItemKeyword
			reduce(31), // andOp, reduce: ItemKeyword
			reduce(31), // orOp, reduce: ItemKeyword
			nil,        // not
			nil,        // minus
			reduce(31), // dot, reduce: ItemKeyword
			nil,        // lparen
			reduce(31), // rparen, reduce: ItemKeyword
			nil,        // text
			nil,        // string
			nil,        // or
			nil,        // and
			nil,        // less_equals
			nil,        // less_than
			nil,        // greater_equals
			nil,        // greater_than
			nil,        // not_equals
			nil,        // equals
			nil,        // has
			nil,        // matches_regexp
			nil,        // not_matches_regexp
			nil,        // backslash
			nil,        // comma
			nil,        // plus
			nil,        // tilde
		},
	},
	actionRow{ // S132
		canRecover: false,
		actions: [numSymbols]action{
			nil,        // INVALID
			nil,        // $
			reduce(21), // ws, reduce: Member
			reduce(21), // andOp, reduce: Member
			reduce(21), // orOp, reduce: Member
			nil,        // not
			nil,        // minus
			reduce(21), // dot, reduce: Member
			nil,        // lparen
			reduce(21), // rparen, reduce: Member
			nil,        // text
			nil,        // string
			nil,        // or
			nil,        // and
			nil,        // less_equals
			nil,        // less_than
			nil,        // greater_equals
			nil,        // greater_than
			nil,        // not_equals
			nil,        // equals
			nil,        // has
			nil,        // matches_regexp
			nil,        // not_matches_regexp
			nil,        // backslash
			nil,        // comma
			nil,        // plus
			nil,        // tilde
		},
	},
	actionRow{ // S133
		canRecover: false,
		actions: [numSymbols]action{
			nil,        // INVALID
			nil,        // $
			reduce(32), // ws, reduce: ItemKeyword
			reduce(32), // andOp, reduce: ItemKeyword
			reduce(32), // orOp, reduce: ItemKeyword
			nil,        // not
			nil,        // minus
			reduce(32), // dot, reduce: ItemKeyword
			nil,        // lparen
			reduce(32), // rparen, reduce: ItemKeyword
			nil,        // text
			nil,        // string
			nil,        // or
			nil,        // and
			nil,        // less_equals
			nil,        // less_than
			nil,        // greater_equals
			nil,        // greater_than
			nil,        // not_equals
			nil,        // equals
			nil,        // has
			nil,        // matches_regexp
			nil,        // not_matches_regexp
			nil,        // backslash
			nil,        // comma
			nil,        // plus
			nil,        // tilde
		},
	},
	actionRow{ // S134
		canRecover: false,
		actions: [numSymbols]action{
			nil,        // INVALID
			nil,        // $
			reduce(33), // ws, reduce: Keyword
			reduce(33), // andOp, reduce: Keyword
			reduce(33), // orOp, reduce: Keyword
			nil,        // not
			nil,        // minus
			reduce(33), // dot, reduce: Keyword
			nil,        // lparen
			reduce(33), // rparen, reduce: Keyword
			nil,        // text
			nil,        // string
			nil,        // or
			nil,        // and
			nil,        // less_equals
			nil,        // less_than
			nil,        // greater_equals
			nil,        // greater_than
			nil,        // not_equals
			nil,        // equals
			nil,        // has
			nil,        // matches_regexp
			nil,        // not_matches_regexp
			nil,        // backslash
			nil,        // comma
			nil,        // plus
			nil,        // tilde
		},
	},
	actionRow{ // S135
		canRecover: false,
		actions: [numSymbols]action{
			nil,        // INVALID
			nil,        // $
			reduce(34), // ws, reduce: Keyword
			reduce(34), // andOp, reduce: Keyword
			reduce(34), // orOp, reduce: Keyword
			nil,        // not
			nil,        // minus
			reduce(34), // dot, reduce: Keyword
			nil,        // lparen
			reduce(34), // rparen, reduce: Keyword
			nil,        // text
			nil,        // string
			nil,        // or
			nil,        // and
			nil,        // less_equals
			nil,        // less_than
			nil,        // greater_equals
			nil,        // greater_than
			nil,        // not_equals
			nil,        // equals
			nil,        // has
			nil,        // matches_regexp
			nil,        // not_matches_regexp
			nil,        // backslash
			nil,        // comma
			nil,        // plus
			nil,        // tilde
		},
	},
	actionRow{ // S136
		canRecover: false,
		actions: [numSymbols]action{
			nil,        // INVALID
			nil,        // $
			reduce(25), // ws, reduce: Composite
			reduce(25), // andOp, reduce: Composite
			reduce(25), // orOp, reduce: Composite
			nil,        // not
			nil,        // minus
			nil,        // dot
			nil,        // lparen
			reduce(25), // rparen, reduce: Composite
			nil,        // text
			nil,        // string
			nil,        // or
			nil,        // and
			nil,        // less_equals
			nil,        // less_than
			nil,        // greater_equals
			nil,        // greater_than
			nil,        // not_equals
			nil,        // equals
			nil,        // has
			nil,        // matches_regexp
			nil,        // not_matches_regexp
			nil,        // backslash
			nil,        // comma
			nil,        // plus
			nil,        // tilde
		},
	},
}
